name: UI - Build and Push containers

on:
  push:
    branches:
      - "master"
    paths:
      - "ui/**"
      - ".github/workflows/ui-build-lint-push-containers.yml"

  # Uncomment the below code to test this action on PRs
  # pull_request:
  #   branches:
  #     - "master"
  #   paths:
  #     - "ui/**"
  #     - ".github/workflows/ui-build-lint-push-containers.yml"

  release:
    types: [published]

env:
  # Tags
  LATEST_TAG: latest
  RELEASE_TAG: ${{ github.event.release.tag_name }}
  STABLE_TAG: stable

  WORKING_DIRECTORY: ./ui

  # Container Registries
  PROWLERCLOUD_DOCKERHUB_REPOSITORY: prowlercloud
  PROWLERCLOUD_DOCKERHUB_IMAGE: prowler-ui
  NEXT_PUBLIC_API_BASE_URL: http://prowler-api:8080/api/v1

jobs:
  setup:
    name: Setup common variables
    runs-on: ubuntu-latest
    outputs:
      short_sha: ${{ steps.vars.outputs.short_sha }}
    steps:
      - name: Set short git commit SHA
        id: vars
        run: |
          shortSha=$(echo ${{ github.sha }} | cut -c1-7)
          echo "short_sha=${shortSha}" >> $GITHUB_OUTPUT

  repository-check:
    name: Repository check
    runs-on: ubuntu-latest
    outputs:
      is_repo: ${{ steps.repository_check.outputs.is_repo }}
    steps:
      - name: Repository check
        id: repository_check
        working-directory: /tmp
        run: |
          if [[ ${{ github.repository }} == "prowler-cloud/prowler" ]]
          then
            echo "is_repo=true" >> "${GITHUB_OUTPUT}"
          else
            echo "This action only runs for prowler-cloud/prowler"
            echo "is_repo=false" >> "${GITHUB_OUTPUT}"
          fi

  # Build Prowler UI container for each architecture
  container-build-push:
    needs: [repository-check, setup]
    if: needs.repository-check.outputs.is_repo == 'true'
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        include:
          - platform: linux/amd64
            runner: ubuntu-latest
            arch: amd64
          - platform: linux/arm64
            runner: ubuntu-24.04-arm
            arch: arm64
    defaults:
      run:
        working-directory: ${{ env.WORKING_DIRECTORY }}

    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Login to DockerHub
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1

      - name: Build and push container image for ${{ matrix.arch }}
        # Comment the following line for testing
        if: github.event_name == 'push' || github.event_name == 'release'
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
        with:
          context: ${{ env.WORKING_DIRECTORY }}
          build-args: |
            NEXT_PUBLIC_PROWLER_RELEASE_VERSION=${{ github.event_name == 'release' && format('v{0}', env.RELEASE_TAG) || needs.setup.outputs.short_sha }}
            NEXT_PUBLIC_API_BASE_URL=${{ env.NEXT_PUBLIC_API_BASE_URL }}
          # Set push: false for testing
          push: true
          platforms: ${{ matrix.platform }}
          tags: |
            ${{ env.PROWLERCLOUD_DOCKERHUB_REPOSITORY }}/${{ env.PROWLERCLOUD_DOCKERHUB_IMAGE }}:${{ needs.setup.outputs.short_sha }}-${{ matrix.arch }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  # Create and push multi-architecture manifest
  create-manifest:
    needs: [repository-check, setup, container-build-push]
    if: needs.repository-check.outputs.is_repo == 'true' && (github.event_name == 'push' || github.event_name == 'release')
    runs-on: ubuntu-latest

    steps:
      - name: Login to DockerHub
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1

      - name: Create and push latest and short_sha manifests
        if: github.event_name == 'push'
        run: |
          # Create latest tag manifest using the same arch-specific images
          docker buildx imagetools create -t \
            ${{ env.PROWLERCLOUD_DOCKERHUB_REPOSITORY }}/${{ env.PROWLERCLOUD_DOCKERHUB_IMAGE }}:${{ env.LATEST_TAG }} \
            ${{ env.PROWLERCLOUD_DOCKERHUB_REPOSITORY }}/${{ env.PROWLERCLOUD_DOCKERHUB_IMAGE }}:${{ needs.setup.outputs.short_sha }}-amd64 \
            ${{ env.PROWLERCLOUD_DOCKERHUB_REPOSITORY }}/${{ env.PROWLERCLOUD_DOCKERHUB_IMAGE }}:${{ needs.setup.outputs.short_sha }}-arm64

          # Create short_sha tag manifest using the same arch-specific images
          docker buildx imagetools create -t \
            ${{ env.PROWLERCLOUD_DOCKERHUB_REPOSITORY }}/${{ env.PROWLERCLOUD_DOCKERHUB_IMAGE }}:${{ needs.setup.outputs.short_sha }} \
            ${{ env.PROWLERCLOUD_DOCKERHUB_REPOSITORY }}/${{ env.PROWLERCLOUD_DOCKERHUB_IMAGE }}:${{ needs.setup.outputs.short_sha }}-amd64 \
            ${{ env.PROWLERCLOUD_DOCKERHUB_REPOSITORY }}/${{ env.PROWLERCLOUD_DOCKERHUB_IMAGE }}:${{ needs.setup.outputs.short_sha }}-arm64

      - name: Create and push release and stable manifests
        if: github.event_name == 'release'
        run: |
          # Create release tag manifest using the same arch-specific images
          docker buildx imagetools create -t \
            ${{ env.PROWLERCLOUD_DOCKERHUB_REPOSITORY }}/${{ env.PROWLERCLOUD_DOCKERHUB_IMAGE }}:${{ env.RELEASE_TAG }} \
            ${{ env.PROWLERCLOUD_DOCKERHUB_REPOSITORY }}/${{ env.PROWLERCLOUD_DOCKERHUB_IMAGE }}:${{ needs.setup.outputs.short_sha }}-amd64 \
            ${{ env.PROWLERCLOUD_DOCKERHUB_REPOSITORY }}/${{ env.PROWLERCLOUD_DOCKERHUB_IMAGE }}:${{ needs.setup.outputs.short_sha }}-arm64
          
          # Create stable tag manifest using the same arch-specific images
          docker buildx imagetools create -t \
            ${{ env.PROWLERCLOUD_DOCKERHUB_REPOSITORY }}/${{ env.PROWLERCLOUD_DOCKERHUB_IMAGE }}:${{ env.STABLE_TAG }} \
            ${{ env.PROWLERCLOUD_DOCKERHUB_REPOSITORY }}/${{ env.PROWLERCLOUD_DOCKERHUB_IMAGE }}:${{ needs.setup.outputs.short_sha }}-amd64 \
            ${{ env.PROWLERCLOUD_DOCKERHUB_REPOSITORY }}/${{ env.PROWLERCLOUD_DOCKERHUB_IMAGE }}:${{ needs.setup.outputs.short_sha }}-arm64

      - name: Trigger deployment
        if: github.event_name == 'push'
        uses: peter-evans/repository-dispatch@ff45666b9427631e3450c54a1bcbee4d9ff4d7c0 # v3.0.0
        with:
          token: ${{ secrets.PROWLER_BOT_ACCESS_TOKEN }}
          repository: ${{ secrets.CLOUD_DISPATCH }}
          event-type: prowler-ui-deploy
          client-payload: '{"sha": "${{ github.sha }}", "short_sha": "${{ needs.setup.outputs.short_sha }}"}'
