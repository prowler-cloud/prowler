from typing import List

from prowler.lib.check.models import Check, CheckReportM365
from prowler.providers.m365.services.defender.defender_client import defender_client


class defender_malware_policy_notifications_internal_users_malware_enabled(Check):
    """
    Check if notifications for internal users sending malware are enabled in the Defender anti-malware policy.

    Attributes:
        metadata: Metadata associated with the check (inherited from Check).
    """

    def execute(self) -> List[CheckReportM365]:
        """
        Execute the check to verify if notifications for internal users sending malware are enabled.

        This method checks the Defender anti-malware policy to determine if notifications for internal users
        sending malware are enabled.

        Returns:
            List[CheckReportM365]: A list of reports containing the result of the check.
        """
        findings = []

        # Only Default Defender Malware Policy exists
        if not defender_client.malware_rules:
            report = CheckReportM365(
                metadata=self.metadata(),
                resource={},
                resource_name="Default Defender Malware Policy",
                resource_id="defaultDefenderMalwarePolicy",
            )

            if self._are_notifications_enabled(defender_client.malware_policies[0]):
                # Case 1: Default policy exists and has notifications enabled
                report.status = "PASS"
                report.status_extended = "Notifications for internal users sending malware are enabled in the default Defender Malware Policy (no other policies exist)."
            else:
                # Case 5: Default policy exists but doesn't have notifications enabled
                report.status = "FAIL"
                report.status_extended = "Notifications for internal users sending malware are not enabled in the default Defender Malware Policy (no other policies exist)."
            findings.append(report)

        # Multiple Defender Malware Policies exist
        else:
            disabled_notifications_policies = []
            report = None
            for policy in defender_client.malware_policies:
                if policy.is_default:
                    if not self._are_notifications_enabled(policy):
                        # Case 4: Default policy doesn't have notifications enabled (potential false positive if another policy overrides it)
                        report = CheckReportM365(
                            metadata=self.metadata(),
                            resource={},
                            resource_name="Default Defender Malware Policy",
                            resource_id="defaultDefenderMalwarePolicy",
                        )
                        report.status = "FAIL"
                        report.status_extended = "Notifications for internal users sending malware are not enabled in the default Defender Malware Policy, but could be overridden by another policy which is out of Prowler's scope."
                        findings.append(report)
                        break
                else:
                    if not self._are_notifications_enabled(policy):
                        disabled_notifications_policies.append(policy.identity)

            if disabled_notifications_policies:
                # Case 3: Default policy has notifications enabled but some other policies don't
                report = CheckReportM365(
                    metadata=self.metadata(),
                    resource={},
                    resource_name="Defender Malware Policies",
                    resource_id="defenderMalwarePolicies",
                )
                report.status = "FAIL"
                report.status_extended = f"Notifications for internal users sending malware are enabled in default Defender Malware Policy but not in the following Defender Malware Policies that may override it: {', '.join(disabled_notifications_policies)}."
                findings.append(report)
            elif not report:
                # Case 2: Default policy has notifications enabled and all other policies do too
                report = CheckReportM365(
                    metadata=self.metadata(),
                    resource={},
                    resource_name="Defender Malware Policies",
                    resource_id="defenderMalwarePolicies",
                )
                report.status = "PASS"
                report.status_extended = "Notifications for internal users sending malware are enabled in all Defender Malware Policies."
                findings.append(report)

        return findings

    def _are_notifications_enabled(self, policy) -> bool:
        """
        Check if notifications for internal users sending malware are enabled in the policy.

        Args:
            policy: The malware policy to check.

        Returns:
            bool: True if notifications are enabled and properly configured, False otherwise.
        """
        return (
            policy.enable_internal_sender_admin_notifications
            and policy.internal_sender_admin_address
        )
