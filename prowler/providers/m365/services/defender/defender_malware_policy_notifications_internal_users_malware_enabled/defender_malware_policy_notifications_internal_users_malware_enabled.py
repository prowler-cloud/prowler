from typing import List

from prowler.lib.check.models import Check, CheckReportM365
from prowler.providers.m365.services.defender.defender_client import defender_client


class defender_malware_policy_notifications_internal_users_malware_enabled(Check):
    """
    Check if notifications for internal users sending malware are enabled in the Defender anti-malware policy.

    Attributes:
        metadata: Metadata associated with the check (inherited from Check).
    """

    def execute(self) -> List[CheckReportM365]:
        """
        Execute the check to verify if notifications for internal users sending malware are enabled.

        This method checks the Defender anti-malware policy to determine if notifications for internal users
        sending malware are enabled.

        Returns:
            List[CheckReportM365]: A list of reports containing the result of the check.
        """
        findings = []
        if not defender_client.malware_policies:
            report = CheckReportM365(
                metadata=self.metadata(),
                resource={},
                resource_name="Defender Malware Policy",
                resource_id="defenderMalwarePolicy",
            )
            report.status = "FAIL"
            report.status_extended = (
                "Notifications for internal users sending malware are not enabled."
            )
            findings.append(report)
        else:
            for policy in defender_client.malware_policies:
                report = CheckReportM365(
                    metadata=self.metadata(),
                    resource=policy,
                    resource_name="Defender Malware Policy",
                    resource_id="defenderMalwarePolicy",
                )
                report.status = "FAIL"
                report.status_extended = (
                    "Notifications for internal users sending malware are not enabled."
                )

                if policy.enable_internal_sender_admin_notifications:
                    if policy.internal_sender_admin_address:
                        report.status = "PASS"
                        report.status_extended = "Notifications for internal users sending malware are enabled."
                        break
                    else:
                        report.status = "FAIL"
                        report.status_extended = "Notifications for internal users sending malware are enabled, but no email addresses are configured."

            findings.append(report)

        return findings
