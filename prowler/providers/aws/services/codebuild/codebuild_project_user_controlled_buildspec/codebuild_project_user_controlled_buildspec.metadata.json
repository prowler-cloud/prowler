{
  "Provider": "aws",
  "CheckID": "codebuild_project_user_controlled_buildspec",
  "CheckTitle": "CodeBuild project does not use a user-controlled buildspec file",
  "CheckType": [
    "Software and Configuration Checks/AWS Security Best Practices"
  ],
  "ServiceName": "codebuild",
  "SubServiceName": "",
  "ResourceIdTemplate": "",
  "Severity": "medium",
  "ResourceType": "AwsCodeBuildProject",
  "Description": "AWS CodeBuild projects are evaluated for use of a **user-controlled buildspec**, identified when the project references a repository file like `*.yml` or `*.yaml`. Projects using non file-based build instructions are treated as centrally managed.",
  "Risk": "Repository-controlled buildspecs let unreviewed changes run in CI, endangering **integrity** (tampered artifacts), **confidentiality** (secret leakage), and **availability** (resource abuse). Attackers can weaponize PRs to execute code and pivot via the build role.",
  "RelatedUrl": "",
  "AdditionalURLs": [
    "https://docs.aws.amazon.com/codebuild/latest/userguide/security.html",
    "https://support.icompaas.com/support/solutions/articles/62000229579-ensure-codebuild-project-with-an-user-controlled-buildspec",
    "https://docs.aws.amazon.com/codebuild/latest/userguide/change-project.html"
  ],
  "Remediation": {
    "Code": {
      "CLI": "",
      "NativeIaC": "```yaml\nResources:\n  <example_resource_name>:\n    Type: AWS::CodeBuild::Project\n    Properties:\n      ServiceRole: <example_role_arn>\n      Artifacts:\n        Type: NO_ARTIFACTS\n      Environment:\n        Type: LINUX_CONTAINER\n        ComputeType: BUILD_GENERAL1_SMALL\n        Image: <IMAGE>\n      Source:\n        Type: CODEPIPELINE\n        BuildSpec: |  # Critical: Inline buildspec avoids using a user-controlled file path\n          version: 0.2\n```",
      "Other": "1. In the AWS Console, go to CodeBuild > Projects and open the target project\n2. Click Edit\n3. In Source, under Buildspec, select Insert build commands (not Use a buildspec file)\n4. Paste minimal inline YAML:\n   ```\n   version: 0.2\n   ```\n5. Save",
      "Terraform": "```hcl\nresource \"aws_codebuild_project\" \"<example_resource_name>\" {\n  name         = \"<example_resource_name>\"\n  service_role = \"<example_role_arn>\"\n\n  artifacts {\n    type = \"NO_ARTIFACTS\"\n  }\n\n  environment {\n    compute_type = \"BUILD_GENERAL1_SMALL\"\n    image        = \"<IMAGE>\"\n    type         = \"LINUX_CONTAINER\"\n  }\n\n  source {\n    type      = \"CODEPIPELINE\"\n    buildspec = <<EOT\nversion: 0.2\nEOT\n    # Critical: Inline buildspec avoids using a user-controlled buildspec file\n  }\n}\n```"
    },
    "Recommendation": {
      "Text": "Adopt a **centrally managed buildspec** that contributors cannot modify.\n- Enforce protected branches and required reviews for build instructions\n- Apply **least privilege** to the build role and minimize secrets\n- Separate duties for pipeline admins vs code authors\n\nUse vetted, versioned templates for defense in depth.",
      "Url": "https://hub.prowler.com/check/codebuild_project_user_controlled_buildspec"
    }
  },
  "Categories": [
    "software-supply-chain",
    "ci-cd"
  ],
  "DependsOn": [],
  "RelatedTo": [],
  "Notes": ""
}
