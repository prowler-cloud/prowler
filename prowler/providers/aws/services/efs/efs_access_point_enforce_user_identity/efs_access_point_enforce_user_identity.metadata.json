{
  "Provider": "aws",
  "CheckID": "efs_access_point_enforce_user_identity",
  "CheckTitle": "EFS file system has all access points with a defined POSIX user",
  "CheckType": [
    "Software and Configuration Checks/AWS Security Best Practices",
    "Software and Configuration Checks/Industry and Regulatory Standards/AWS Foundational Security Best Practices",
    "Effects/Data Exposure",
    "TTPs/Privilege Escalation"
  ],
  "ServiceName": "efs",
  "SubServiceName": "",
  "ResourceIdTemplate": "",
  "Severity": "medium",
  "ResourceType": "AwsEfsAccessPoint",
  "Description": "**Amazon EFS access points** are evaluated for a defined **POSIX user** (`uid`, `gid`, optional secondary groups). The check inspects each access point on a file system and flags those without a configured POSIX user identity.",
  "Risk": "Without enforced **POSIX identity**, NFS clients can supply arbitrary UIDs/GIDs, enabling impersonation, unauthorized reads/writes, and ownership spoofing. This undermines **confidentiality** and **integrity** of shared data and can enable **lateral movement** across applications sharing the file system.",
  "RelatedUrl": "",
  "AdditionalURLs": [
    "https://docs.aws.amazon.com/efs/latest/ug/efs-access-points.html",
    "https://repost.aws/knowledge-center/efs-access-points-directory-access",
    "https://www.plerion.com/cloud-knowledge-base/efs-access-points-should-be-configured-to-enforce-a-user-identity",
    "https://docs.aws.amazon.com/efs/latest/ug/enforce-identity-access-points.html",
    "https://docs.aws.amazon.com/securityhub/latest/userguide/efs-controls.html#efs-4"
  ],
  "Remediation": {
    "Code": {
      "CLI": "",
      "NativeIaC": "```yaml\nResources:\n  ExampleAccessPoint:\n    Type: AWS::EFS::AccessPoint\n    Properties:\n      FileSystemId: \"<example_resource_id>\"\n      PosixUser:               # Critical: enforces a POSIX user for all requests via this access point\n        Uid: \"<uid>\"          # Critical: POSIX user ID enforced\n        Gid: \"<gid>\"          # Critical: POSIX group ID enforced\n```",
      "Other": "1. In the AWS Console, go to Amazon EFS > Access points\n2. Click Create access point, select the file system, and set POSIX user: enter User ID and Group ID\n3. Click Create access point\n4. Update clients to mount using the new access point ID\n5. Delete the old access point(s) that lack a POSIX user",
      "Terraform": "```hcl\nresource \"aws_efs_access_point\" \"example\" {\n  file_system_id = \"<example_resource_id>\"\n\n  # Critical: enforces a POSIX user for all requests via this access point\n  posix_user {\n    uid = 1000  # Critical: user ID enforced\n    gid = 1000  # Critical: group ID enforced\n  }\n}\n```"
    },
    "Recommendation": {
      "Text": "Enforce a **POSIX user identity** on every access point using least-privilege `uid`/`gid` (avoid `0`). Apply **separation of duties** with dedicated access points per application and minimal groups. Use **IAM** to require access point usage and add **defense in depth** by enforcing a restricted root directory.",
      "Url": "https://hub.prowler.com/check/efs_access_point_enforce_user_identity"
    }
  },
  "Categories": [
    "identity-access"
  ],
  "DependsOn": [],
  "RelatedTo": [],
  "Notes": ""
}
