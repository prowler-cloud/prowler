{
  "Provider": "aws",
  "CheckID": "efs_encryption_at_rest_enabled",
  "CheckTitle": "EFS file system has encryption at rest enabled",
  "CheckType": [
    "Software and Configuration Checks/AWS Security Best Practices",
    "Software and Configuration Checks/Industry and Regulatory Standards/AWS Foundational Security Best Practices",
    "Software and Configuration Checks/Industry and Regulatory Standards/NIST 800-53 Controls (USA)",
    "Software and Configuration Checks/Industry and Regulatory Standards/NIST CSF Controls (USA)",
    "Software and Configuration Checks/Industry and Regulatory Standards/PCI-DSS",
    "Software and Configuration Checks/Industry and Regulatory Standards/HIPAA Controls (USA)",
    "Software and Configuration Checks/Industry and Regulatory Standards/ISO 27001 Controls",
    "Effects/Data Exposure"
  ],
  "ServiceName": "efs",
  "SubServiceName": "",
  "ResourceIdTemplate": "",
  "Severity": "medium",
  "ResourceType": "AwsEfsFileSystem",
  "Description": "**Amazon EFS file system** has **encryption at rest** enabled using AWS KMS to protect file data and metadata stored on the service",
  "Risk": "Without encryption at rest, EFS contents can be read from storage media, backups, or compromised hosts, eroding **confidentiality** and enabling offline exfiltration. Privileged compromise also allows covert data harvesting or manipulation, threatening **integrity** of files.",
  "RelatedUrl": "",
  "AdditionalURLs": [
    "https://repost.aws/knowledge-center/efs-turn-on-encryption-at-rest",
    "https://docs.aws.amazon.com/efs/latest/ug/EFSKMS.html",
    "https://docs.aws.amazon.com/efs/latest/ug/encryption-at-rest.html"
  ],
  "Remediation": {
    "Code": {
      "CLI": "",
      "NativeIaC": "```yaml\n# CloudFormation: Create an EFS file system with encryption at rest enabled\nResources:\n  <example_resource_name>:\n    Type: AWS::EFS::FileSystem\n    Properties:\n      Encrypted: true  # Critical: enables encryption at rest so the check passes\n```",
      "Other": "1. In the AWS Console, go to Amazon EFS\n2. Click Create file system\n3. Check Enable encryption (leave default key or choose a KMS key if required)\n4. Click Create\n5. Migrate data from the unencrypted file system to the new encrypted one\n6. Delete the unencrypted file system to clear the failing finding",
      "Terraform": "```hcl\n# Terraform: Create an EFS file system with encryption at rest enabled\nresource \"aws_efs_file_system\" \"<example_resource_name>\" {\n  encrypted = true  # Critical: enables encryption at rest so the check passes\n}\n```"
    },
    "Recommendation": {
      "Text": "Enable **encryption at rest** for all EFS file systems and prefer **customer-managed KMS keys** for control, rotation, and audit. Apply **least privilege** to key policies and separate key management duties. *For existing unencrypted data*, migrate to a new encrypted file system. Enforce creation policies (IAM/SCP) to prevent non-encrypted deployments.",
      "Url": "https://hub.prowler.com/check/efs_encryption_at_rest_enabled"
    }
  },
  "Categories": [
    "encryption"
  ],
  "DependsOn": [],
  "RelatedTo": [],
  "Notes": ""
}
