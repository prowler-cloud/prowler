{
  "Provider": "aws",
  "CheckID": "bedrock_api_key_no_long_term_credentials",
  "CheckTitle": "Amazon Bedrock API key is expired",
  "CheckType": [
    "Software and Configuration Checks/AWS Security Best Practices",
    "Software and Configuration Checks/Industry and Regulatory Standards/AWS Foundational Security Best Practices",
    "Software and Configuration Checks/Industry and Regulatory Standards/CIS AWS Foundations Benchmark",
    "TTPs/Initial Access/Valid Accounts"
  ],
  "ServiceName": "bedrock",
  "SubServiceName": "",
  "ResourceIdTemplate": "",
  "Severity": "high",
  "ResourceType": "AwsIamUser",
  "Description": "**Amazon Bedrock API keys** are evaluated for **lifetime** and **expiration**.\n\nThe finding identifies keys that are long-lived, set to expire far in the future, or configured to `never expire`, and distinguishes them from keys that have already expired.",
  "Risk": "Long-lived or non-expiring keys enable persistent access if compromised.\n- Confidentiality: unauthorized inference and exposure of prompts/outputs\n- Availability/Cost: uncontrolled usage and spend spikes\n- Integrity: actions can continue without timely revocation or rotation",
  "RelatedUrl": "",
  "AdditionalURLs": [
    "https://prowler.com/blog/bedrocks-new-api-keys-convenience-at-a-hidden-security-cost/",
    "https://docs.aws.amazon.com/ja_jp/bedrock/latest/userguide/getting-started-api-keys.html",
    "https://dev.to/aws/amazon-bedrock-api-keys-simplified-authentication-for-developers-1ig0",
    "https://docs.aws.amazon.com/IAM/latest/UserGuide/best-practices.html#rotate-credentials",
    "https://opentools.ai/news/amazon-bedrock-boosts-ai-development-with-new-api-key-feature",
    "https://docs.aws.amazon.com/bedrock/latest/userguide/api-keys.html"
  ],
  "Remediation": {
    "Code": {
      "CLI": "aws iam delete-service-specific-credential --user-name <username> --service-specific-credential-id <credential-id>",
      "NativeIaC": "",
      "Other": "1. Sign in to the AWS Management Console and open IAM\n2. Go to Users > select <example_resource_name> > Security credentials\n3. In \"API keys for Amazon Bedrock\", find the non-expired key and click Delete\n4. Confirm deletion to remove the key (removes the long-term credential so the check passes)",
      "Terraform": ""
    },
    "Recommendation": {
      "Text": "Prefer **short-term credentials** and **IAM roles**; avoid `never expire`.\n\nEnforce **least privilege**, strict **rotation**, and automatic **expiration** for any long-term key. Store secrets securely, monitor with audit logs, and revoke unused or stale keys quickly.",
      "Url": "https://hub.prowler.com/check/bedrock_api_key_no_long_term_credentials"
    }
  },
  "Categories": [
    "secrets"
  ],
  "DependsOn": [],
  "RelatedTo": [],
  "Notes": "This check verifies that Amazon Bedrock API keys have expiration dates set. API keys without expiration dates are considered long-term credentials and pose a security risk. The check follows security best practices for credential management and the principle of least privilege."
}
