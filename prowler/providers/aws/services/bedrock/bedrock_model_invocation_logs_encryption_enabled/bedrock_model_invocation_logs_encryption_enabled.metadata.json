{
  "Provider": "aws",
  "CheckID": "bedrock_model_invocation_logs_encryption_enabled",
  "CheckTitle": "Amazon Bedrock model invocation logs are encrypted in the S3 bucket and KMS-encrypted in the CloudWatch log group",
  "CheckType": [
    "Software and Configuration Checks/AWS Security Best Practices",
    "Software and Configuration Checks/Industry and Regulatory Standards/AWS Foundational Security Best Practices",
    "Software and Configuration Checks/Industry and Regulatory Standards/CIS AWS Foundations Benchmark",
    "Effects/Data Exposure"
  ],
  "ServiceName": "bedrock",
  "SubServiceName": "",
  "ResourceIdTemplate": "",
  "Severity": "high",
  "ResourceType": "AwsS3Bucket",
  "Description": "**Amazon Bedrock model invocation logs** are stored in encrypted destinations: **S3 buckets** with bucket encryption and **CloudWatch Logs** groups protected by an AWS KMS key.\n\nThis evaluates whether configured log targets enforce encryption at rest for request/response content and associated metadata.",
  "Risk": "Without encryption at rest, prompts, outputs, images, and token/usage metadata in logs can be read if S3 or CloudWatch storage or replicas are accessed by unauthorized principals.\n\nImpacts:\n- Loss of data **confidentiality**\n- Secret or PII exposure enabling **account abuse**\n- Operational intel for **lateral movement**",
  "RelatedUrl": "",
  "AdditionalURLs": [
    "https://docs.aws.amazon.com/es_es/bedrock/latest/userguide/model-invocation-logging.html",
    "https://medium.com/@binaya.puri/leveraging-cloudwatch-insights-for-real-time-analysis-of-model-invocation-logs-in-generative-ai-841cf7296ef3",
    "https://docs.aws.amazon.com/bedrock/latest/userguide/data-protection.html",
    "https://aws-blogs-artifacts-public.s3.amazonaws.com/ML-15986/AmazonBedrock_UserGuide.pdf",
    "https://docs.aws.amazon.com/bedrock/latest/userguide/model-invocation-logging.html",
    "https://support.icompaas.com/support/solutions/articles/62000233532-ensure-that-amazon-bedrock-model-invocation-logs-are-encrypted-with-kms",
    "https://docs.aws.amazon.com/ja_jp/bedrock/latest/userguide/model-invocation-logging.html",
    "https://docs.aws.amazon.com/prescriptive-guidance/latest/patterns/configure-bedrock-invocation-logging-cloudformation.html"
  ],
  "Remediation": {
    "Code": {
      "CLI": "",
      "NativeIaC": "```yaml\nResources:\n  EncryptedLogsBucket:\n    Type: AWS::S3::Bucket\n    Properties:\n      BucketName: <example_resource_name>\n      BucketEncryption:  # critical: enables default encryption for the bucket (SSE-S3)\n        ServerSideEncryptionConfiguration:\n          - ServerSideEncryptionByDefault:\n              SSEAlgorithm: AES256\n\n  EncryptedLogGroup:\n    Type: AWS::Logs::LogGroup\n    Properties:\n      LogGroupName: <example_resource_name>\n      KmsKeyId: <example_kms_key_arn>  # critical: encrypts the CloudWatch log group with a KMS key\n```",
      "Other": "1. In the Bedrock console, go to Settings and note the S3 bucket and CloudWatch log group used for Model invocation logging.\n2. S3 bucket: AWS Console > S3 > Buckets > <bucket> > Properties > Default encryption > Enable > Choose SSE-S3 (AES-256) > Save.\n3. CloudWatch Logs: AWS Console > CloudWatch > Logs > Log groups > select <log group> > Actions > Edit > KMS encryption > select <KMS key> > Save.",
      "Terraform": "```hcl\nresource \"aws_s3_bucket\" \"example\" {\n  bucket = \"<example_resource_name>\"\n}\n\nresource \"aws_s3_bucket_server_side_encryption_configuration\" \"example\" {\n  bucket = aws_s3_bucket.example.id\n  rule {\n    apply_server_side_encryption_by_default {\n      sse_algorithm = \"AES256\"  # critical: enables default encryption for the S3 bucket\n    }\n  }\n}\n\nresource \"aws_cloudwatch_log_group\" \"example\" {\n  name       = \"<example_resource_name>\"\n  kms_key_id = \"<example_kms_key_arn>\"  # critical: encrypts the log group with a KMS key\n}\n```"
    },
    "Recommendation": {
      "Text": "Ensure all invocation logs are encrypted end to end:\n- Enable S3 default encryption, preferably `SSE-KMS`, and restrict key usage\n- Assign a KMS key to CloudWatch log groups\n- Enforce **least privilege** on keys and logs, rotate keys, and monitor access for **defense in depth**",
      "Url": "https://hub.prowler.com/check/bedrock_model_invocation_logs_encryption_enabled"
    }
  },
  "Categories": [
    "encryption",
    "logging",
    "gen-ai"
  ],
  "DependsOn": [],
  "RelatedTo": [],
  "Notes": ""
}
