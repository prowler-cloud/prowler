{
  "Provider": "aws",
  "CheckID": "appsync_field_level_logging_enabled",
  "CheckTitle": "AWS AppSync API has field-level logging set to ALL or ERROR",
  "CheckType": [
    "Software and Configuration Checks/AWS Security Best Practices",
    "Software and Configuration Checks/Industry and Regulatory Standards/AWS Foundational Security Best Practices"
  ],
  "ServiceName": "appsync",
  "SubServiceName": "",
  "ResourceIdTemplate": "",
  "Severity": "medium",
  "ResourceType": "AwsAppSyncGraphQLApi",
  "Description": "**AWS AppSync GraphQL APIs** have **field-level logging** configured at the resolver level. The check looks for log levels of `ERROR` or `ALL` to confirm field resolution events are recorded.",
  "Risk": "Without **field-level logs**, resolver access and mutations lack **auditability**, reducing detection of data exfiltration and tampering (**confidentiality and integrity**). Limited traces hinder incident response and root-cause analysis, increasing recovery time.",
  "RelatedUrl": "",
  "AdditionalURLs": [
    "https://theburningmonk.com/2020/09/how-to-sample-appsync-resolver-logs/",
    "https://lumigo.io/blog/how-to-monitor-and-debug-appsync-apis/",
    "https://docs.aws.amazon.com/securityhub/latest/userguide/appsync-controls.html#appsync-2",
    "https://docs.aws.amazon.com/appsync/latest/APIReference/API_LogConfig.html",
    "https://blog.graphbolt.dev/debugging-aws-appsync-apis-with-cloudwatch",
    "https://support.icompaas.com/support/solutions/articles/62000233678-ensure-aws-appsync-should-have-field-level-logging-enabled"
  ],
  "Remediation": {
    "Code": {
      "CLI": "aws appsync update-graphql-api --api-id <example_resource_id> --name <api-name> --authentication-type AWS_IAM --log-config fieldLogLevel=ERROR,cloudWatchLogsRoleArn=<cloudwatch_logs_role_arn>",
      "NativeIaC": "```yaml\n# CloudFormation - Enable field-level logging for AppSync API\nResources:\n  <example_resource_name>:\n    Type: AWS::AppSync::GraphQLApi\n    Properties:\n      Name: <example_resource_name>\n      AuthenticationType: AWS_IAM\n      LogConfig:\n        CloudWatchLogsRoleArn: arn:aws:iam::<account-id>:role/<example_resource_name>  # CRITICAL: allows AppSync to write logs\n        FieldLogLevel: ERROR  # CRITICAL: sets field-level logging to a compliant level\n```",
      "Other": "1. In the AWS Console, go to AppSync and open your GraphQL API\n2. Go to Settings > Logging\n3. Turn on Enable logs\n4. Set Field resolver log level to ERROR (or ALL)\n5. Select an IAM role that allows AppSync to write to CloudWatch Logs\n6. Click Save",
      "Terraform": "```hcl\n# Terraform - Enable field-level logging for AppSync API\nresource \"aws_appsync_graphql_api\" \"<example_resource_name>\" {\n  name                = \"<example_resource_name>\"\n  authentication_type = \"AWS_IAM\"\n\n  log_config {\n    cloudwatch_logs_role_arn = \"<cloudwatch_logs_role_arn>\" # CRITICAL: permits logging to CloudWatch\n    field_log_level          = \"ERROR\"                        # CRITICAL: compliant field-level logging\n  }\n}\n```"
    },
    "Recommendation": {
      "Text": "- Enable field-level logging at least `ERROR`; raise to `INFO`/`DEBUG`/`ALL` only for troubleshooting.\n- Enforce **least privilege** on the logging role.\n- Avoid sensitive data in logs; limit verbose content.\n- Set retention and consider log **sampling** to balance visibility and cost.",
      "Url": "https://hub.prowler.com/check/appsync_field_level_logging_enabled"
    }
  },
  "Categories": [
    "logging"
  ],
  "DependsOn": [],
  "RelatedTo": [],
  "Notes": ""
}
