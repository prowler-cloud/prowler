{
  "Provider": "aws",
  "CheckID": "cloudformation_stacks_termination_protection_enabled",
  "CheckTitle": "CloudFormation stack has termination protection enabled",
  "CheckType": [
    "Software and Configuration Checks/AWS Security Best Practices",
    "Effects/Data Destruction",
    "Effects/Denial of Service"
  ],
  "ServiceName": "cloudformation",
  "SubServiceName": "",
  "ResourceIdTemplate": "",
  "Severity": "medium",
  "ResourceType": "AwsCloudFormationStack",
  "Description": "**AWS CloudFormation root stacks** are evaluated for **termination protection**. The detection identifies whether `termination protection` is enabled to block stack deletions on non-nested stacks.",
  "Risk": "Without **termination protection**, human error or automation can delete entire stacks, causing immediate **availability** loss and potential **data destruction** of managed resources.\n\nAttackers with delete rights can more easily trigger outages and hinder recovery.",
  "RelatedUrl": "",
  "AdditionalURLs": [
    "https://avd.aquasec.com/misconfig/aws/cloudformation/cloudformation-stack-termination-protection-enabled/",
    "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-protect-stacks.html",
    "https://aws.amazon.com/blogs/mt/use-aws-cloudformation-stack-termination-protection-and-rollback-triggers-to-maintain-infrastructure-availability/",
    "https://maxat-akbanov.com/termination-protection-in-aws-cloudformation",
    "https://lightrun.com/answers/aws-aws-cdk-enable-termination-protection-of-a-stack",
    "https://lumigo.io/blog/serverless-trenches-1-protect-stack-from-deletion/",
    "https://stackzone.com/feature/enable-cloudformation-stack-termination-protection-remediation/",
    "https://www.pulumi.com/registry/packages/aws-native/api-docs/cloudformation/stack/",
    "https://cloudlytics.com/compliance-controls/aws_cloudformation_3/",
    "https://seed.run/blog/how-to-prevent-accidentally-deleting-serverless-resources.html"
  ],
  "Remediation": {
    "Code": {
      "CLI": "aws cloudformation update-termination-protection --stack-name <STACK_NAME> --enable-termination-protection",
      "NativeIaC": "",
      "Other": "1. Open the AWS CloudFormation console\n2. Select the target stack\n3. Choose Stack actions > Edit termination protection\n4. Select Enable and Save",
      "Terraform": "```hcl\nresource \"aws_cloudformation_stack\" \"<example_resource_name>\" {\n  name                           = \"<example_resource_name>\"\n  template_url                   = \"https://s3.amazonaws.com/<bucket>/<template>.json\"\n  enable_termination_protection  = true # Critical: enables termination protection to prevent stack deletion\n}\n```"
    },
    "Recommendation": {
      "Text": "Enable **termination protection** on root stacks for critical workloads. Enforce **least privilege** on who can alter this setting or delete stacks, require **change review** via change sets, and apply **stack policies** plus `DeletionPolicy: Retain` for data stores for defense in depth.",
      "Url": "https://hub.prowler.com/check/cloudformation_stacks_termination_protection_enabled"
    }
  },
  "Categories": [
    "resilience"
  ],
  "DependsOn": [],
  "RelatedTo": [],
  "Notes": "Infrastructure Protection"
}
