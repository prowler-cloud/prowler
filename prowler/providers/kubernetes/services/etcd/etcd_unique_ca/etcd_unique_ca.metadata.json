{
  "Provider": "kubernetes",
  "CheckID": "etcd_unique_ca",
  "CheckTitle": "Etcd pod uses a unique Certificate Authority distinct from the Kubernetes API server CA",
  "CheckType": [],
  "ServiceName": "etcd",
  "SubServiceName": "",
  "ResourceIdTemplate": "",
  "Severity": "high",
  "ResourceType": "Pod",
  "Description": "**etcd** configuration is assessed to ensure it trusts a **unique Certificate Authority** via `--trusted-ca-file`, distinct from the API server's `--client-ca-file`. If the same CA file is used, etcd shares the cluster CA; differing files imply separation, though CA content should still be verified.",
  "Risk": "Using the Kubernetes CA for etcd allows any cert signed by that CA to authenticate to the datastore. Theft or mis-issuance enables unauthorized reads/writes, causing secret exposure (confidentiality), state tampering (integrity), and potential control-plane disruption (availability).",
  "RelatedUrl": "",
  "AdditionalURLs": [
    "https://etcd.io/docs/latest/op-guide/security/",
    "https://docs.mirantis.com/mke/3.8/cis-benchmarks.html",
    "https://plerion.com/resources/cloud-knowledge-base/k8s/ensure-that-a-unique-certificate-authority-is-used-for-etcd-manual",
    "https://kubernetes.io/docs/tasks/administer-cluster/configure-upgrade-etcd/#limiting-access-of-etcd-clusters",
    "https://www.tenable.com/audits/items/CIS_Kubernetes_v1.5.1_Level_2.audit:0a23cf1482e57883446ce3cb608c9e60",
    "https://docs.datadoghq.com/security/default_rules/cis-kubernetes-1.5.1-2.7/",
    "https://docs.rke2.io/security/cis_self_assessment16"
  ],
  "Remediation": {
    "Code": {
      "CLI": "",
      "NativeIaC": "",
      "Other": "1. SSH to a control-plane node that runs etcd\n2. Open the API server manifest: sudo vi /etc/kubernetes/manifests/kube-apiserver.yaml and note the value of --client-ca-file=<APISERVER_CA_PATH>\n3. Ensure an etcd-specific CA file exists at a different path (for example: /etc/kubernetes/pki/etcd/ca.crt) and is readable by the etcd container\n4. Edit the etcd manifest: sudo vi /etc/kubernetes/manifests/etcd.yaml\n   - In the etcd container command/args, add or update: --trusted-ca-file=/etc/kubernetes/pki/etcd/ca.crt (this path must NOT equal <APISERVER_CA_PATH>)\n   - Save the file; the kubelet will restart the etcd pod automatically\n5. Verify the change: kubectl -n kube-system get pods -o wide | grep etcd, then describe the etcd pod and confirm --trusted-ca-file points to a different path than the API server --client-ca-file",
      "Terraform": ""
    },
    "Recommendation": {
      "Text": "Adopt a **separate PKI** for etcd: issue client and peer certs from an etcd-only CA and trust only that CA. Enforce mTLS (`--client-cert-auth`, `--peer-client-cert-auth`), avoid `--auto-tls`, rotate keys independently, and apply **least privilege** to CA issuance with regular certificate audits.",
      "Url": "https://hub.prowler.com/check/etcd_unique_ca"
    }
  },
  "Categories": [
    "encryption",
    "cluster-security",
    "trust-boundaries"
  ],
  "DependsOn": [],
  "RelatedTo": [],
  "Notes": "This check is particularly important in environments where strict access control to the etcd database is required."
}
