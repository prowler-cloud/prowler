{
  "Framework": "KISA-ISMS-P",
  "Name": "KISA ISMS compliance real case analysis based on AWS framework (Korean) ",
  "Version": "Real case",
  "Provider": "AWS",
  "Description": "KISA ISMS-P 실제 사례 기반 AWS 보안 통제 프레임워크",
  "Requirements": [
    {
      "Id": "1.1",
      "Name": "IMDS 보안 통제 미적용으로 인한 임시 자격 증명 탈취",
      "Description": "IMDS(Instance Metadata Service)는 AWS에서 실행되는 EC2 인스턴스가 메타데이터 및 사용자 데이터를 조회할 수 있는 서비스입니다. IMDS 접근이 통제되지 않으면 단 한 번의 취약점으로도 임시 자격증명이 탈취되어 계정 전체가 악용될 수 있습니다. 특히 IMDS가 오래된 버전(IMDSv1)으로 남아 있거나, 인스턴스 역할에 권한이 과도하게 주어져 있으면 피해 규모가 커질 수 있습니다.",
      "Checks": [
        "ec2_launch_template_imdsv2_required",
        "ec2_instance_account_imdsv2_enabled",
        "ec2_instance_imdsv2_enabled",
        "autoscaling_group_launch_configuration_requires_imdsv2"
      ],
      "Attributes": [
        {
          "Domain": "1. EC2",
          "Subdomain": "1.1. IMDS 보안 통제 미적용으로 인한 임시 자격 증명 탈취",
          "Section": "1.1. IMDS 보안 통제 미적용으로 인한 임시 자격 증명 탈취",
          "AuditChecklist": [
            "EC2 인스턴스 메타데이터 옵션의 IMDSv2를 필수로 선택"
          ],
          "RelatedRegulations": [
            "2.6.2 정보 시스템 접근",
            "2.6.6 원격 접근 통제"
          ],
          "AuditEvidence": [
            "https://securityboulevard.com/2020/06/the-capital-one-data-breach-a-year-later-a-look-at-what-went-wrong-and-practical-guidance-to-avoid-a-breach-of-your-own/",
            "https://engineering.prezi.com/prezi-got-pwned-a-tale-of-responsible-disclosure-ccdc71bb6dd1",
            "https://www.sysdig.com/blog/cloud-breach-terraform-data-theft",
            "https://blog.qualys.com/vulnerabilities-threat-research/2024/09/12/totalcloud-insights-unmasking-aws-instance-metadata-service-v1-imdsv1-the-hidden-flaw-in-aws-security"
          ],
          "NonComplianceCases": []
        }
      ]
    },
    {
      "Id": "1.2",
      "Name": "EC2 User Data 내 민감 정보 관리 미흡",
      "Description": "EC2 User Data는 EC2 인스턴스가 처음 시작될 때 자동으로 실행되는 스크립트입니다. 부팅 시 루트 권한으로 실행되며 스크립트에 DB 비밀번호, API 키 같은 민감 정보가 평문으로 들어가 있으므로 누구든 쉽게 조회하거나 탈취할 수 있습니다. User Data에 민감 정보가 포함되어 있는 경우, 공격자는 이를 탈취 후 다른 서비스에서 크리덴셜 스터핑과 같은 공격에 악용할 수 있습니다.",
      "Checks": [
        "ec2_instance_secrets_user_data",
        "ec2_launch_template_no_secrets",
        "autoscaling_find_secrets_ec2_launch_configuration"
      ],
      "Attributes": [
          {
            "Domain": "1. EC2",
            "Subdomain": "1.2. EC2 User Data 내 민감 정보 관리 미흡",
            "Section": "1.2. EC2 User Data 내 민감 정보 관리 미흡",
            "AuditChecklist": [
              "민감 정보가 Parameter Store에서 SecureString(KMS 암호화) 형태로 저장"
            ],
            "RelatedRegulations": [
              "2.7.1 암호정책 적용",
              "2.7.2 암호키 관리"
            ],
            "AuditEvidence": [
              "https://hackingthe.cloud/aws/exploitation/local_ec2_priv_esc_through_user_data/",
              "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html",
              "https://rodelllemit.medium.com/aws-pentesting-ec2-user-data-761f5cd5ee89"
            ],
            "NonComplianceCases": [
              "인스턴스 부팅 시 외부 시크릿 저장소(SSM/KMS)에 의존하게 되어 초기화가 지연되거나 부팅에 실패할 수 있습니다."
            ]
          }
      ]
    },
    {
      "Id": "1.3",
      "Name": "AMI 공개 설정으로 인한 정보 노출",
      "Description": "AMI(Amazon Machine Image) 원본 이미지를 퍼블릭으로 설정하는 것은 전 세계 누구나 이 이미지를 가져가서 자신의 서버를 만들 수 있도록 완전히 공개하는 것을 의미합니다. 실수로 개발/테스트 과정에서 사용했던 비밀번호, 인증 키(AWS Access Key), 설정 파일, 개인 키(SSH Key), 또는 소스 코드 같은 정보가 이미지 안에 남아 있다면, 공격자는 공개된 AMI를 복사해서 내부 정보를 통째로 훔쳐갈 수 있습니다.",
      "Checks": [
        "ec2_ami_public"
      ],
      "Attributes": [
          {
            "Domain": "1. EC2",
            "Subdomain": "1.3. AMI 공개 설정으로 인한 정보 노출",
            "Section": "1.3. AMI 공개 설정으로 인한 정보 노출",
            "AuditChecklist": [
              "EC2 AMI 가용성이 프라이빗으로 설정"
            ],
            "RelatedRegulations": [
              "2.1.3 정보자산 관리",
              "2.6.2 정보 시스템 접근",
              "2.7.2 암호키 관리"
            ],
            "AuditEvidence": [
              "https://blog.lethalbit.com/hunting-for-sensitive-data-in-public-amazon-images-ami/",
              "https://seclab.nu/static/publications/sac2012ec2.pdf",
              "https://securitycafe.ro/2024/05/08/aws-cloudquarry-digging-for-secrets-in-public-amis",
              "https://www.bankinfosecurity.com/exposed-amis-hidden-risk-in-aws-environments-a-26017"
            ],
            "NonComplianceCases": [
              "타계정 배포 및 협력사 공유가 복잡해지고 지연될 수 있으며, 권한 또는 의존성 관련 오류가 발생할 수 있습니다."
            ]
          }
      ]
    },
    {
      "Id": "1.4",
      "Name": "AMI owner 속성 미설정 시 위험성",
      "Description": "AWS에서 서버를 자동으로 배포하기 위해 Terraform 같은 도구를 사용할 때, 보통 특정 AMI 소유자(Owner)를 지정하지 않고 가장 최신(most_recent) AMI를 사용하도록 설정하는 경우가 있습니다. 이 설정이 위험한 이유는, 공격자가 악의적인 목적을 가진 AMI를 만들어서 계정에서 사용하는 Owner와 동일한 AMI 이름으로 등록한 뒤, 그 AMI가 가장 최신인 것처럼 보이게 할 수 있기 때문입니다. 자동 배포 시스템은 소유자를 확인하지 않고 가장 최신인 그 악성 AMI를 선택하게 되고, 결국 공격자가 만든 서버 이미지가 시스템에 배포될 수 있습니다.",
      "Checks": [],
      "Attributes": [
        {
          "Domain": "1. EC2",
          "Subdomain": "1.4. AMI owner 속성 미설정 시 위험성",
          "Section": "1.4. AMI owner 속성 미설정 시 위험성",
          "AuditChecklist": [
            "Organizations SCP 정책 설정에서 사전 허용된 계정 목록의 AMI만 리스트에 등록"
          ],
          "RelatedRegulations": [
            "2.1.3 정보자산 관리"
          ],
          "AuditEvidence": [
            "https://securitylabs.datadoghq.com/articles/whoami-a-cloud-image-name-confusion-attack/",
            "https://web.archive.org/web/20210625192906/https://www.darkreading.com/cloud/cryptominer-found-embedded-in-aws-community-ami/d/d-id/1338713/",
            "https://www.csoonline.com/article/3825098/whoami-name-confusion-attacks-can-hack-into-aws-accounts-for-code-execution.html"
          ],
          "NonComplianceCases": [
            "공식/서드파티/신규 AMI 배포가 실패하거나 복구/테스트가 지연될 수 있습니다."
          ]
        }
      ]
    },
    {
      "Id": "1.5",
      "Name": "Public으로 공개된 SSH/RDP를 통한 자원 탈취",
      "Description": "RDP는 기본적으로 외부에서 접근 가능하도록 설정되어 있는 경우가 많아, 공격자가 이를 악용하여 클라우드 인프라를 침해할 수 있습니다. 퍼블릭에 노출된 SSH(포트 22)/RDP(포트 3389)는 브루트포스, 공개된 취약점, 약한 비밀번호, 재사용된 크리덴셜에 의해 쉽게 탈취될 수 있으므로 인스턴스가 초기에 기동된 후 공격자에게 루트/관리자 권한을 제공할 수 있습니다.",
      "Checks": [
        "ec2_securitygroup_allow_ingress_from_internet_to_tcp_port_22",
        "ec2_securitygroup_allow_ingress_from_internet_to_tcp_port_3389"
      ],
      "Attributes": [
        {
          "Domain": "1. EC2",
          "Subdomain": "1.5. Public으로 공개된 SSH/RDP를 통한 자원 탈취",
          "Section": "1.5. Public으로 공개된 SSH/RDP를 통한 자원 탈취",
          "AuditChecklist": [
            "보안그룹 인바운드 규칙이 원격(SSH, RDP), DB, 관리 포트 소스의 CIDR을 좁은 범위(/16~)로 설정"
          ],
          "RelatedRegulations": [
            "2.5.1 사용자 계정 관리",
            "2.6.1 네트워크 접근",
            "2.6.6 원격 접근 통제"
          ],
          "AuditEvidence": [
            "https://www.trendmicro.com/en_us/research/18/k/outlaw-group-distributes-botnet-for-cryptocurrency-mining-scanning-and-brute-force.html",
            "https://cloudsecurityalliance.org/blog/2023/02/06/exposed-remote-desktop-protocol-actively-targeted-by-threat-actors-to-deploy-ransomware",
            "https://www.paloaltonetworks.com/blog/2021/07/diagnosing-the-ransomware-deployment-protocol"
          ],
          "NonComplianceCases": [
            "운영자, 자동화 파이프라인, 외부 도구의 원격 접속이 중단되어 운영 지연이 발생할 수 있습니다."
          ]
        }
      ]
    },
    {
      "Id": "1.6",
      "Name": "EBS 스냅샷 공개 설정시 시스템 공격 위험",
      "Description": "EBS(Elastic Block Store) 스냅샷은 EC2 인스턴스의 디스크 백업본입니다. EBS 스냅샷을 공개로 설정하면 해당 스냅샷으로부터 EBS 볼륨을 복원하여 인스턴스 파일시스템(루트 포함)을 그대로 얻을 수 있으므로, 스냅샷에 포함된 평문 비밀 키, SSH 키, 구성 파일, 자격증명 등이 곧바로 노출될 수 있습니다.",
      "Checks": [
        "ec2_ebs_default_encryption",
        "ec2_ebs_public_snapshot",
        "ec2_ebs_snapshot_account_block_public_access",
        "ec2_ebs_snapshots_encrypted"
        ],
      "Attributes": [
        {
          "Domain": "1. EC2",
          "Subdomain": "1.6. EBS 스냅샷 공개 설정시 시스템 공격 위험",
          "Section": "1.6. EBS 스냅샷 공개 설정시 시스템 공격 위험",
          "AuditChecklist": [
            "EBS 스냅샷의 공유 옵션이 프라이빗으로 설정"
          ],
          "RelatedRegulations": [
            "2.5.6 접근권한 검토"
          ],
          "AuditEvidence": [
            "https://media.defcon.org/DEF%20CON%2027/DEF%20CON%2027%20presentations/DEFCON-27-Ben-Morris-More-Keys-Than-A-Piano-Finding-Secrets-In-Publicly-Exposed-Ebs-Volumes.pdf",
            "https://stratus-red-team.cloud/attack-techniques/AWS/aws.exfiltration.ec2-share-ebs-snapshot/",
            "https://techcrunch.com/2019/08/09/aws-ebs-cloud-backups-leak"
          ],
          "NonComplianceCases": []
        }
      ]
    },
    {
      "Id": "2.1",
      "Name": "S3 버킷 정책의 공개 설정과 Get/Put 권한으로 인한 데이터 탈취/악성코드 주입 위협",
      "Description": "Amazon S3(Simple Storage Service)는 파일(이미지, 자바스크립트, 백업 등)을 인터넷에 저장하고 꺼내 쓸 수 있게 해주는 서비스입니다. 웹사이트 정적 파일 호스팅, 로그/백업 보관 등의 용도로 자주 쓰이며, 파일 하나하나가 버킷(bucket) 이라는 폴더 모음에 들어갑니다. 버킷 정책을 모든 사용자 대상으로 공개하거나 Get/Put 권한을 허용하면 누구나 파일을 내려받거나 업로드/덮어쓰기를 할 수 있습니다.",
      "Checks": [
        "s3_access_point_public_access_block",
        "s3_account_level_public_access_blocks",
        "s3_bucket_policy_public_write_access",
        "s3_bucket_server_access_logging_enabled",
        "s3_bucket_public_access",
        "s3_bucket_public_list_acl",
        "s3_bucket_public_write_acl",
        "s3_bucket_level_public_access_block",
        "s3_multi_region_access_point_public_access_block"
      ],
      "Attributes": [
        {
          "Domain": "2. S3",
          "Subdomain": "2.1. S3 버킷 정책의 공개 설정과 Get/Put 권한으로 인한 데이터 탈취/악성코드 주입 위협",
          "Section": "2.1. S3 버킷 정책의 공개 설정과 Get/Put 권한으로 인한 데이터 탈취/악성코드 주입 위협",
          "AuditChecklist": [
            "퍼블릭 용도의 S3 버킷이 아닐 경우, 모든 퍼블릭 액세스 차단 활성화",
            "S3 버킷 정책 속 Principal이 특정 ARN으로 제한 되어있고 Resource는 버킷 안 특정 폴더로 지정"
          ],
          "RelatedRegulations": [
            "2.5.5 특수 계정 및 권한 관리",
            "2.5.6 접근권한 검토",
            "2.6.1 네트워크 접근"
          ],
          "AuditEvidence": [
            "https://medium.com/@red.whisperer/from-s3-bucket-to-internal-network-operation-8073954932b4",
            "https://web.archive.org/web/20210413201832/https://www.tripwire.com/state-of-security/security-data-protection/la-times-website-cryptojacking-attack/",
            "https://www.upguard.com/breaches/cloud-leak-accenture",
            "https://www.techtarget.com/searchsecurity/news/450422709/Misconfigured-AWS-S3-bucket-exposes-millions-of-Verizon-customers-data"
          ],
          "NonComplianceCases": [
            "정상적인 퍼블릭 호스팅, 프리사인드 URL, 외부 파트너, Cross-Account 백업/배포 등 워크플로에 영향을 주어 서비스 장애나 배포에 실패할 수 있습니다."
          ]
        }
      ]
    },
    {
      "Id": "2.2",
      "Name": "S3 객체/버킷 ACL에 의한 외부 접근 허용 및 정보유출 위험",
      "Description": "ACL(Access Control List)은 S3 버킷이나 객체에 누가 이 파일을 읽거나 쓸 수 있는지를 지정하는 오래된 권한 설정 방식입니다. 만약 ACL 객체/버킷 ACL에 All Users/Authenticated Users 또는 12자리 AWS 계정 ID가 Grantee로 포함되어 있으면 누구든지(또는 특정 계정이) 즉시 파일을 내려받을 수 있고, 쓰기 권한이 포함되면 파일을 덮어쓸 수 있습니다.",
      "Checks": [],
      "Attributes": [
        {
          "Domain": "2. S3",
          "Subdomain": "2.2. S3 객체/버킷 ACL에 의한 외부 접근 허용 및 정보유출 위험",
          "Section": "2.2. S3 객체/버킷 ACL에 의한 외부 접근 허용 및 정보유출 위험",
          "AuditChecklist": [
            "S3 ACL 설정 속 모든 사람, 인증된 사용자 그룹의 나열, 읽기, 쓰기 권한 체크 해제",
            "S3 ACL의 Grantee 목록에 12자리 숫자(외부 AWS 계정 ID)가 있으면 해당 공유를 검증"
          ],
          "RelatedRegulations": [
            "2.5.5 특수 계정 및 권한 관리",
            "2.5.6 접근권한 검토",
            "2.6.1 네트워크 접근"
          ],
          "AuditEvidence": [
            "https://hackingthe.cloud/aws/post_exploitation/s3_acl_persistence/",
            "https://hackerone.com/reports/128088"
          ],
          "NonComplianceCases": [
            "정상적인 퍼블릭 호스팅, 프리사인드 URL, 외부 파트너, Cross-Account 백업/배포 등 워크플로에 영향을 주어 서비스 장애나 배포에 실패할 수 있습니다."
          ]
        }
      ]
    },
    {
      "Id": "2.3",
      "Name": "S3 버킷 복제 권한 악용에 의한 데이터 유출 위험",
      "Description": "S3 버킷 복제는 한 버킷의 객체를 자동으로 다른 버킷으로 복사하는 기능이며, 원래 백업과 감사를 위한 것입니다. 복제 대상이 우리 조직에서 소유/관리하지 않는 버킷으로 잘못 설정되어 있으면 복제 통제가 불가능해질 수 있습니다.",
      "Checks": [
        "s3_bucket_cross_region_replication",
        "s3_bucket_server_access_logging_enabled",
        "s3_bucket_event_notifications_enabled"
      ],
      "Attributes": [
        {
          "Domain": "2. S3",
          "Subdomain": "2.3. S3 버킷 복제 권한 악용에 의한 데이터 유출 위험",
          "Section": "2.3. S3 버킷 복제 권한 악용에 의한 데이터 유출 위험",
          "AuditChecklist": [
            "S3 복제 규칙에 사용되는 IAM 역할의 정책 속 Resource에 대상 버킷 ARN 지정"
          ],
          "RelatedRegulations": [
            "2.5.5 특수 계정 및 권한 관리",
            "2.5.6 접근권한 검토"
          ],
          "AuditEvidence": [
            "https://bleemb.medium.com/data-exfiltration-with-native-aws-s3-features-c94ae4d13436",
            "https://hackingthe.cloud/aws/exploitation/s3-bucket-replication-exfiltration/",
            "https://www.vectra.ai/blog/abusing-the-replicator-silently-exfiltrating-data-with-the-aws-s3-replication-service"
          ],
          "NonComplianceCases": [
            "기존의 외부 연동된 백업/감사 파이프라인이나 CI/CD 자동화에 실패해 서비스 및 배포가 중단될 수 있습니다."
          ]
        }
      ]
    },
    {
      "Id": "3.1",
      "Name": "IAM 자격증명 평문 저장으로 인한 유출",
      "Description": "소스코드에 평문으로 저장된 AWS 자격증명은 누구나 해당 파일을 내려받아 즉시 재사용할 수 있으므로, 자격증명이 노출되면 계정 및 리소스에 대한 무단 접근이 즉각적으로 가능해집니다. 특히 이러한 자격증명은 자동화 파이프라인에 하드코딩되어 있는 경우가 많아, 노출 시 회수 및 교체가 지연될 수 있습니다.",
      "Checks": [
        "iam_root_credentials_management_enabled",
        "ec2_instance_secrets_user_data",
        "ec2_launch_template_no_secrets",
        "autoscaling_find_secrets_ec2_launch_configuration",
        "ssm_document_secrets"
      ],
      "Attributes": [
        {
          "Domain": "3. IAM",
          "Subdomain": "3.1. IAM 자격증명 평문 저장으로 인한 유출",
          "Section": "3.1. IAM 자격증명 평문 저장으로 인한 유출",
          "AuditChecklist": [
            "시크릿 스캐닝 도구를 통한 자격증명 평문 저장 여부 점검(ex. Trufflehog, Gitleaks 등으로 외부/공개 저장소 속 자격증명 평문 저장 점검)",
            "민감 정보가 Parameter Store에서 SecureString(KMS 암호화) 형태로 저장"
          ],
          "RelatedRegulations": [
            "2.7.1 암호정책 적용",
            "2.7.2 암호키 관리"
          ],
          "AuditEvidence": [
            "https://www.thestack.technology/infosys-leak-aws-key-exposed-on-pypi",
            "https://www.bleepingcomputer.com/news/security/thousands-of-images-on-docker-hub-leak-auth-secrets-private-keys",
            "https://blog.emberjs.com/security-incident-aws-s3-key-exposure/",
            "https://redhuntlabs.com/blog/scanning-millions-of-publicly-exposed-docker-containers-thousands-of-secrets-leaked/"
          ],
          "NonComplianceCases": [
            "파라미터 스토어는 API 기반 서비스이므로 컨테이너 수백 개가 동시에 파라미터를 조회하는 경우 지연 또는 실패가 발생할 수 있습니다. 또한 정기 스캔, 결과 검증, 키 폐기 자동화 절차를 사람이 반복 관리해야 하여 운영상의 부담이 야기될 수 있습니다."
          ]
        }
      ]
    },
    {
      "Id": "3.2",
      "Name": "장기 Access Key 보관 및 변경 주기 미흡",
      "Description": "AKIA로 시작하는 장기 액세스 키는 IAM 사용자 또는 AWS 계정 루트 사용자를 위한 고유한 ID입니다. 장기 액세스 키(AKIA)는 만료되지 않는 영구 자격증명이기 때문에 한 번 노출되면 지속적인 침투 수단이 됩니다.",
      "Checks": [
        "iam_rotate_access_key_90_days",
        "secretsmanager_automatic_rotation_enabled",
        "secretsmanager_secret_rotated_periodically"
      ],
      "Attributes": [
        {
          "Domain": "3. IAM",
          "Subdomain": "3.2. 장기 Access Key 보관 및 변경 주기 미흡",
          "Section": "3.2. 장기 Access Key 보관 및 변경 주기 미흡",
          "AuditChecklist": [
            "액세스 키가 생성된 후 90일 이내", 
            "민감 정보의 자동 교체 로직이 존재(ex. Secrets Manager의 보안 암호 자동 교체 구성 활성화)"
          ],
          "RelatedRegulations": [
            "2.5.1 사용자 계정 관리",
            "2.5.4 비밀번호 관리",
            "2.7.2 암호키 관리"
          ],
          "AuditEvidence": [
            "https://web.archive.org/web/20210127001214/https://threatpost.com/data-from-august-breach-of-amazon-partner-juspay-dumped-online/162740/",
            "https://www.invictus-ir.com/news/ransomware-in-the-cloud",
            "https://securitylabs.datadoghq.com/articles/tales-from-the-cloud-trenches-the-attacker-doth-persist-too-much"
          ],
          "NonComplianceCases": [
            "액세스 키를 삭제할 경우, 해당 키로 계정 및 리소스에 프로그래밍 방식으로 접근할 수 없으며 삭제된 키를 복구할 수 없습니다. 따라서 액세스 키를 삭제하기 전에 업무에 사용되고 있는지 점검해야 합니다."
          ]
        }
      ]
    },
    {
      "Id": "3.3",
      "Name": "IAM 루트 계정 Access Key 관리 실패",
      "Description": "루트 계정 Access Key는 계정 내 모든 권한을 행사할 수 있어 유출될 경우 즉시 전 범위의 리소스에 무단 접근이 가능해집니다. 많은 조직이 루트 계정에 MFA를 미적용하거나 키 변경 주기/권한 분리를 소홀히 하여, 키 유출 시 탐지/차단이 지연되거나 불가능한 상황이 발생합니다.",
      "Checks": [
        "iam_avoid_root_usage",
        "iam_no_root_access_key",
        "iam_root_credentials_management_enabled",
        "iam_root_mfa_enabled"
        ],
      "Attributes": [
        {
          "Domain": "3. IAM",
          "Subdomain": "3.3. IAM 루트 계정 Access Key 관리 실패",
          "Section": "3.3. IAM 루트 계정 Access Key 관리 실패",
          "AuditChecklist": [
            "루트 계정의 Active 액세스 키 비활성화", 
            "루트를 포함한 모든 사용자 계정에 MFA 활성화"
            ],
          "RelatedRegulations": [
            "2.5.3 사용자 인증",
            "2.5.5 특수 계정 및 권한 관리",
            "2.5.6 접근권한 검토"
            ],
          "AuditEvidence": [
            "https://www.breaches.cloud/incidents/chegg/",
            "https://web.archive.org/web/20210128055101/https://expel.io/blog/behind-the-scenes-expel-soc-alert-aws/",
            "https://medium.com/%40kariarce2377/my-horror-story-discovering-that-my-aws-root-account-was-hacked-2cf3ce41bc47" 
          ],
          "NonComplianceCases": [
            "액세스 키를 삭제할 경우, 해당 키로 계정 및 리소스에 프로그래밍 방식으로 접근할 수 없으며 삭제된 키를 복구할 수 없습니다. 따라서 액세스 키를 삭제하기 전에 업무에 사용되고 있는지 점검해야 합니다."
          ]
        }
      ]
    },
    {
      "Id": "3.4",
      "Name": "IAM Role의 Trust Policy 속 광범위한 Principal",
      "Description": "IAM Role의 Trust Policy 신뢰 대상을 Principal('*') 또는 광범위하게 허용하면 모든 AWS 계정의 주체가 해당 역할을 할당(AssumeRole)할 수 있으므로, 의도치 않은 외부 공격자가 즉시 권한을 획득할 수 있습니다. 조직/계정 경계가 무의미해지므로, 공격자가 다른 계정으로 권한을 넓혀 나가며 조직 내 약한 계정/설정을 통해 권한 상승이 쉬워집니다.",
      "Checks": [],
      "Attributes": [
        {
          "Domain": "3. IAM",
          "Subdomain": "3.4. IAM Role의 Trust Policy 속 광범위한 Principal",
          "Section": "3.4. IAM Role의 Trust Policy 속 광범위한 Principal",
          "AuditChecklist": [
            "신뢰 정책에 사용할 계정/역할/서비스의 ARN으로 Principal 제한 및 Condition 활용"
          ],
          "RelatedRegulations": [
            "2.5.1 사용자 계정 관리",
            "2.5.5 특수 계정 및 권한 관리",
            "2.5.6 접근 권한 검토"
          ],
          "AuditEvidence": [
            "https://hackingthe.cloud/aws/exploitation/Misconfigured_Resource-Based_Policies/misconfigured_iam_role_trust_policy_wildcard_principal/",
            "https://www.netspi.com/blog/technical-blog/cloud-penetration-testing/pivoting-clouds-aws-organizations-part-1/"
          ],
          "NonComplianceCases": [
            "기존에 할당된 권한을 제거할 경우, 특정 리소스에 접근이 불가능할 수 있습니다."
          ]
        }
      ]
    },
    {
      "Id": "3.5",
      "Name": "IAM PassRole으로 비인가자의 영구적 권한 획득",
      "Description": "iam:PassRole 권한이 있으면 공격자가 자신이 가진 권한 범위 밖의 역할(Role)을 AWS 서비스에 붙여 그 역할의 권한을 악용할 수 있습니다. 즉, 단순히 역할을 전달할 수 있는 권한만으로도 임시 자격증명 획득후 권한 상승이 가능해집니다. 특히 PassRole이 Resource:* 또는 광범위한 역할에 허용되어 있으면 공격 위험성이 크게 커집니다.",
      "Checks": [
        "iam_policy_allows_privilege_escalation"
      ],
      "Attributes": [
        {
          "Domain": "3. IAM",
          "Subdomain": "3.5. IAM PassRole으로 비인가자의 영구적 권한 획득",
          "Section": "3.5. IAM PassRole으로 비인가자의 영구적 권한 획득",
          "AuditChecklist": [
            "iam:PassRole 권한 사용 시, Resource를 특정 ARN으로 제한"
          ],
          "RelatedRegulations": [
            "2.5.1 사용자 계정 관리",
            "2.5.5 특수 계정 및 권한 관리",
            "2.5.6 접근권한 검토"
          ],
          "AuditEvidence": [
            "https://aws.amazon.com/ko/blogs/security/how-to-use-the-passrole-permission-with-iam-roles/",
            "https://www.tenable.com/blog/auditing-iampassrole-a-problematic-privilege-escalation-permission",
            "https://www.praetorian.com/blog/privilege-escalation-in-aws-with-passrole-attacks/"
          ],
          "NonComplianceCases": [
            "기존에 할당된 권한을 제거할 경우, 특정 리소스에 접근이 불가능할 수 있습니다."
          ]
        }
      ]
    },
    {
      "Id": "3.6",
      "Name": "Identity Federation을 통한 비인가자의 역할 취득 및 리소스 접근",
      "Description": "Identity Federation을 통해 외부 IdP(사내 AD/Okta/Google Workspace 등) 계정으로 AWS 역할을 취득하게 하면, 해당 IdP에서 인증된 사용자는 AWS 리소스에 접근할 수 있습니다 AssumeRolePolicy에 IdP 속성값(특정 SAML attribute 값, OIDC sub/aud/iss 등)에 대한 Condition 검사가 누락되거나, Principal이 광범위하게 허용되어 있으면 IdP 세션/토큰 탈취 시 누구나 역할을 취득하여 내부 권한을 악용할 수 있습니다.",
      "Checks": [],
      "Attributes": [
        {
          "Domain": "3. IAM",
          "Subdomain": "3.6. Identity Federation을 통한 비인가자의 역할 취득 및 리소스 접근",
          "Section": "3.6. Identity Federation을 통한 비인가자의 역할 취득 및 리소스 접근",
          "AuditChecklist": [
            "IdP 연동 시, AssumeRole 정책 속 Principal은 특정 IdP의 ARN으로, Condition은 허용되는 IdP속성 값으로 제한"
          ],
          "RelatedRegulations": [
            "2.5.3 사용자 인증",
            "2.5.6 접근권한 검토"
          ],
          "AuditEvidence": [
            "https://www.crowdstrike.com/en-us/blog/how-adversaries-persist-with-aws-user-federation/",
            "https://expel.com/wp-content/uploads/2025/01/Expel-Annual-Threat-Report-2025-013025.pdf"
          ],
          "NonComplianceCases": [
            "정상 사용자/자동화(빌드 및 배포)/협력 파트너의 접근이 차단되거나, IdP 메타데이터 변경, 운영/복구 복잡도 증가와 같은 부작용이 발생할 수 있습니다."
          ]
        }
      ]
    },
    {
      "Id": "3.7",
      "Name": "Cross-Account 접근 설정 미흡",
      "Description": "Cross-Account 신뢰 정책을 단순히 계정 ID나 역할 ARN만으로 넓게 허용하면, 제3자(예: SaaS)가 정상적으로 행하는 역할 획득 흐름이 공격자에게도 열려 있게 됩니다. 이 경우 공격자는 정상 서비스의 기능을 악용하여 고객 계정의 권한을 대신 받아 민감 자원에 접근하거나 다른 계정으로 권한을 전파할 수 있습니다. 또한 External ID 같은 추가 검증을 하지 않으면 권한이 오남용될 위험이 큽니다.",
      "Checks": [
        "iam_role_cross_account_readonlyaccess_policy"
      ],
      "Attributes": [
        {
          "Domain": "3. IAM",
          "Subdomain": "3.7. Cross-Account 접근 설정 미흡",
          "Section": "3.7. Cross-Account 접근 설정 미흡",
          "AuditChecklist": [
            "Cross-Account용 IAM 역할의 AssumeRole 정책 속 Principal은 특정 Provider/역할의 ARN으로,  Condition은 sts:ExternalId로 제한"
          ],
          "RelatedRegulations": [
            "2.5.1 사용자 계정 관리",
            "2.5.5 특수 계정 및 권한 관리",
            "2.5.6 접근권한 검토"
          ],
          "AuditEvidence": [
            "https://www.slideshare.net/slideshow/saaspocalypse-the-complexity-and-power-of-aws-cross-account-access/237678222"
          ],
          "NonComplianceCases": [
            "정상 SaaS 연동이나 기존 자동화 흐름이 실패해 서비스 중단 또는 CI/CD 장애가 발생할 수 있습니다."
          ]
        }
      ]
    },
    {
      "Id": "3.8",
      "Name": "퇴직자의 IAM 권한 미철회로 인한 유출 위험",
      "Description": "퇴직자 또는 더 이상 필요하지 않은 IAM 사용자, 그룹 또는 역할의 권한이 철회되지 않고 남아 있을 경우, 해당 자격 증명이 악용되거나 유출되어 무단 접근 통로로 사용될 위험이 있다.",
      "Checks": [],
      "Attributes": [
        {
          "Domain": "3. IAM",
          "Subdomain": "3.8. 퇴직자의 IAM 권한 미철회로 인한 유출 위험",
          "Section": "3.8. 퇴직자의 IAM 권한 미철회로 인한 유출 위험",
          "AuditChecklist": [
            "퇴직자 계정 권한 철회(콘솔 로그인 프로필, 액세스 키, 연결된 권한 정책, MFA, 인증서, 서비스 자격증명을 모두 해제)",
            "퇴직자 계정 활동 모니터링 및 로그 관리 운영체계 수립(ex. ConsoleLogin, CreateAccessKey 등의 잔여된 의심 활동을 탐지하기 위한 CloudTrail 쿼리 작성)"
          ],
          "RelatedRegulations": [
            "2.2.5 퇴직 및 직무변경 관리",
            "2.5.1 사용자 계정 관리",
            "2.5.6 접근권한 검토",
            "2.11.3 이상행위 분석 및 모니터링"
          ],
          "AuditEvidence": [
            "https://www.breaches.cloud/incidents/first-republic/",
            "https://rubycentral.org/news/rubygems-org-aws-root-access-event-september-2025/"
          ],
          "NonComplianceCases": [
            "사전 확인 없이 퇴직자 계정을 비활성화하면 그 계정의 자격증명에 의존하던 자동화, CI/CD, 서비스가 중단되어 배포 및 작업 실패와 서비스 가용성이 저하될 수 있습니다."
          ]
        }
      ]
    },
    {
      "Id": "3.9",
      "Name": "MFA 미설정",
      "Description": "MFA가 설정되어 있지 않은 계정은 비밀번호 유출/재사용/브루트포스 공격으로 즉시 탈취될 수 있으므로, 콘솔 로그인 보호의 최종 방어선이 부재한 상태입니다. 또한 일부 인증 환경에서 요청 제한이 충분히 적용되지 않아 브루트포스 공격이 가능하며, MFA가 설정되지 않은 계정은 쉽게 침해될 수 있습니다.",
      "Checks": [
        "iam_root_mfa_enabled",
        "iam_root_hardware_mfa_enabled",
        "iam_user_hardware_mfa_enabled",
        "iam_administrator_access_with_mfa",
        "iam_user_mfa_enabled_console_access",
        "directoryservice_supported_mfa_radius_enabled"
        ],
      "Attributes": [
        {
          "Domain": "3. IAM",
          "Subdomain": "3.9. MFA 미설정", 
          "Section": "3.9. MFA 미설정", 
          "AuditChecklist": [
            "루트를 포함한 모든 사용자 계정에 MFA 활성화"
          ],
          "RelatedRegulations": [
            "2.5.3 사용자 인증",
            "2.5.5 특수 계정 및 권한 관리"
          ],
          "AuditEvidence": [
            "https://news.sophos.com/en-us/2019/03/22/sacked-it-guy-annihilates-23-of-his-ex-employers-aws-servers/",
            "https://securitylabs.datadoghq.com/articles/aws-console-rate-limit-bypass/"
          ],
          "NonComplianceCases": []
        }
      ]
    },
    {
      "Id": "4.1",
      "Name": "Security Group의 광범위한 공개 규칙 설정으로 인한 서비스 노출 및 권한 탈취 위험",
      "Description": "Security Group은 인스턴스에 붙이는 상태 기반(stateful) 방화벽입니다. 특정 포트(예: SSH 22, RDP 3389, DB 포트 등)를 불필요하게 /16보다 넓은 광범위한 CIDR로 허용하면 누구나 해당 서비스에 접근 시도(브루트포스/익스플로잇)를 할 수 있습니다.",
      "Checks": [
        "ec2_securitygroup_allow_ingress_from_internet_to_all_ports",
        "ec2_securitygroup_allow_ingress_from_internet_to_any_port",
        "ec2_securitygroup_allow_ingress_from_internet_to_high_risk_tcp_ports", 
        "ec2_securitygroup_allow_ingress_from_internet_to_tcp_port_22",
        "ec2_securitygroup_allow_ingress_from_internet_to_tcp_port_3389",
        "ec2_securitygroup_allow_ingress_from_internet_to_tcp_port_cassandra_7199_9160_8888",
        "ec2_securitygroup_allow_ingress_from_internet_to_tcp_port_elasticsearch_kibana_9200_9300_5601",
        "ec2_securitygroup_allow_ingress_from_internet_to_tcp_port_ftp_20_21",
        "ec2_securitygroup_allow_ingress_from_internet_to_tcp_port_kafka_9092",
        "ec2_securitygroup_allow_ingress_from_internet_to_tcp_port_memcached_11211",
        "ec2_securitygroup_allow_ingress_from_internet_to_tcp_port_mongodb_27017_27018",
        "ec2_securitygroup_allow_ingress_from_internet_to_tcp_port_mysql_3306", 
        "ec2_securitygroup_allow_ingress_from_internet_to_tcp_port_oracle_1521_2483", 
        "ec2_securitygroup_allow_ingress_from_internet_to_tcp_port_postgres_5432", 
        "ec2_securitygroup_allow_ingress_from_internet_to_tcp_port_redis_6379", 
        "ec2_securitygroup_allow_ingress_from_internet_to_tcp_port_sql_server_1433_1434",
        "ec2_securitygroup_allow_ingress_from_internet_to_tcp_port_telnet_23"
      ],
      "Attributes": [
        {
          "Domain": "4. VPC",
          "Subdomain": "4.1. Security Group의 광범위한 공개 규칙 설정으로 인한 서비스 노출 및 권한 탈취 위험",
          "Section": "4.1. Security Group의 광범위한 공개 규칙 설정으로 인한 서비스 노출 및 권한 탈취 위험",
          "AuditChecklist": [
            "보안그룹 인바운드 규칙의 원격(SSH, RDP), DB, 관리 포트 소스의 CIDR을 좁은 범위(/16~)로 설정"
          ],
          "RelatedRegulations": [
            "2.5.6 접근권한 검토",
            "2.6.1 네트워크 접근"
          ],
          "AuditEvidence": [
            "https://frichetten.com/blog/abusing-aws-connection-tracking/",
            "https://www.boannews.com/media/view.asp?idx=101097",
            "https://cybersapiens.com.au/identifying-misconfigured-security-groups-unrestricted-traffic-and-public-facing-endpoints"
          ],
          "NonComplianceCases": [
            "모니터링/배포/백업/서드파티 연동/운영자 원격 접속 등이 차단되어 서비스 접근 실패나 배포 중단, 긴급 복구 지연과 같은 운영 장애가 발생할 수 있습니다."
          ]
        }
      ]
    },
    {
      "Id": "4.2",
      "Name": "배스천 호스트 미사용으로 인한 프라이빗 서브넷 자원 직접 접근 위험",
      "Description": "배스천 호스트는 인터넷에서 프라이빗 서브넷으로 접근할 때 안전한 관문 역할을 하는 전용 접속 서버입니다. 배스천 호스트를 사용하지 않으면 인스턴스를 퍼블릭 서브넷에 배치해 공인 IP를 할당해야 하므로 외부에서 직접 접근 가능해져 공격에 취약합니다.",
      "Checks": [],
      "Attributes": [
        {
          "Domain": "4. VPC",
          "Subdomain": "4.2. 배스천 호스트 미사용으로 인한 프라이빗 서브넷 자원 직접 접근 위험",
          "Section": "4.2. 배스천 호스트 미사용으로 인한 프라이빗 서브넷 자원 직접 접근 위험",
          "AuditChecklist": [
            "외부 노출이 강력히 제한되어야 하는 내부 네트워크 운영 시, 배스천 호스트 구축"
          ],
          "RelatedRegulations": [
            "2.6.1 네트워크 접근",
            "2.5.6 접근권한 검토",
            "2.6.6 원격 접근 통제"
          ],
          "AuditEvidence": [
            "https://www.wired.com/story/cryptojacking-tesla-amazon-cloud/",
            "https://www.boannews.com/media/view.asp?idx=122816&direct=mobile"
          ],
          "NonComplianceCases": [
            "배스천 호스트를 거쳐서 내부 서버에 접속하므로 접속 경로가 한 단계 늘어나며 약간의 지연이 발생할 수 있습니다. 또한 계속해서 패치, 하드닝, 사용자 계정 관리 등이 필요하며 운영자가 많아질수록 계정/키/정책 관리는 복잡해집니다."
          ]  
        }
      ]
    },
    {
      "Id": "5.1",
      "Name": "Lambda 코드/환경변수에 중요정보 노출",
      "Description": "Lambda 환경에는 함수가 실행될 때 사용되는 임시 IAM 자격증명과 함수를 호출한 요청 데이터가 존재합니다. 이 정보들이 함수의 환경변수나 런타임에서 평문으로 남아 있거나, 함수가 외부 입력을 통해 내부 파일이나 내부 서비스에 접근하도록 허용하면, 공격자는 그 정보를 탈취해 S3/EC2/IAM 등 다른 AWS 리소스에 접근할 수 있습니다.",
      "Checks": [
        "awslambda_function_no_secrets_in_variables",
        "awslambda_function_no_secrets_in_code"
      ],
      "Attributes": [
        {
          "Domain": "5. Lambda",
          "Subdomain": "5.1. Lambda 코드/환경변수에 중요정보 노출",
          "Section": "5.1. Lambda 코드/환경변수에 중요정보 노출",
          "AuditChecklist": [
            "민감 정보가 안전하게 보관(ex. 환경변수에 민감정보를 평문 저장하지 말고 Secrets Manager에서 보안 암호 형태로 저장)", 
            "Lambda 함수 실행 시, 환경 변수를 KMS의 고객 마스터 키로 사용"
          ],
          "RelatedRegulations": [
            "2.5.5 특수 계정 및 권한 관리",
            "2.7.1 암호정책 적용",
            "2.7.2 암호키 관리"
          ],
          "AuditEvidence": [
            "https://unit42.paloaltonetworks.com/compromised-cloud-compute-credentials",
            "https://hackingthe.cloud/aws/exploitation/lambda-steal-iam-credentials/"
          ],
          "NonComplianceCases": [
            "Lambda 환경변수의 자격증명이나 API Key를 SSM Parameter Store(KMS 암호화)로 옮기면, Lambda 실행 역할에 ssm:GetParameter 및 kms:Decrypt 권한이 없을 경우 런타임에서 자격증명을 가져오지 못해 함수가 실패하거나 기능이 중단될 수 있으므로, 필요한 SSM/Secrets/KMS 권한을 사전에 부여하고 호출량/회전/로그 노출을 고려한 설계를 병행해야 합니다."
          ]
        }
      ]
    },
    {
      "Id": "5.2",
      "Name": "Lambda 함수 내부 입력값 미검증으로 인한 인젝션 위험 노출",
      "Description": "Lambda 함수는 권한을 가진 실행 역할으로 AWS API를 호출할 수 있으므로, 함수 내부의 입력값 검증 실패로 인젝션이 발생하면 단순 입력을 통해 함수 권한 범위 내에서 민감 리소스에 접근하고 조작할 수 있습니다. 즉, 취약한 결함이 곧 클라우드 권한 남용으로 연결됩니다.",
      "Checks": [],
      "Attributes": [
        {
          "Domain": "5. Lambda",
          "Subdomain": "5.2. Lambda 함수 내부 입력값 미검증으로 인한 인젝션 위험 노출",
          "Section": "5.2. Lambda 함수 내부 입력값 미검증으로 인한 인젝션 위험 노출",
          "AuditChecklist": [
            "Lambda 함수에 결함이 존재하는 코드 스캔(ex. Inspector 연동 및 사용 후 결과에서 심각도 HIGH, CRITICAL 미포함)"
          ],
          "RelatedRegulations": [
            "2.8.5 소스 프로그램 관리"
          ],
          "AuditEvidence": [
            "https://github.com/RhinoSecurityLabs/cloudgoat/tree/master/cloudgoat/scenarios/aws/vulnerable_lambda",
            "https://rhinosecuritylabs.com/cloud-security/cloudgoat-vulnerable-lambda-functions/",
            "https://docs.aws.amazon.com/inspector/latest/user/scanning_resources_lambda_code.html"
          ],
          "NonComplianceCases": []
        }
      ]
    },
    {
      "Id": "6.1",
      "Name": "RDS 스냅샷 공개 오설정으로 인한 데이터 유출",
      "Description": "Amazon RDS의 스냅샷은 데이터베이스 전체 상태를 통째로 저장한 백업입니다. 이 스냅샷은 원래 특정 AWS 계정과만 공유할 수 있도록 설계되어 있습니다. 하지만 관리자가 실수로 스냅샷을 Public으로 공유하면 모든 AWS 계정이 그 스냅샷을 복사하거나 복원해 내부 데이터를 볼 수 있게 됩니다.",
      "Checks": [
        "rds_snapshots_public_access",
        "rds_snapshots_encrypted"
      ],
      "Attributes": [
        {
          "Domain": "6. RDS",
          "Subdomain": "6.1. RDS 스냅샷 공개 오설정으로 인한 데이터 유출",
          "Section": "6.1. RDS 스냅샷 공개 오설정으로 인한 데이터 유출",
          "AuditChecklist": [
            "RDS 스냅샷 권한의 DB 스냅샷 가시성이 프라이빗으로 설정"
          ],
          "RelatedRegulations": [
            "2.5.5 특수 계정 및 권한 관리",
            "2.6.4 데이터베이스 접근",
            "2.9.3 백업 및 복구관리"
          ],
          "AuditEvidence": [
            "https://www.mitiga.io/blog/how-mitiga-found-pii-in-exposed-amazon-rds-snapshots",
            "https://www.clouddefense.ai/compliance-rules/cisa-cyber-essentials/systems/rds-db-snapshot-prohibit-public-access",
            "https://gbhackers.com/amazon-rds-instances-leaking-user-data",
            "https://www.secureblink.com/cyber-security-news/millions-of-corporate-pi-is-leaked-from-vulnerable-amazon-rds-snapshots"
          ],
          "NonComplianceCases": [
            "기존에 내부/외부에서 자동으로 복원/배포/검증하던 파이프라인이나 테스트 환경이 실패할 수 있으므로, 변경 전 영향평가와 관련 공지 및 전달 절차를 준비해야 합니다."
          ]
        }
      ]
    },
    {
      "Id": "6.2",
      "Name": "공개 RDS 인스턴스로 인한 데이터 유출",
      "Description": "RDS 인스턴스가 Publicly Accessible(인터넷 노출) 상태이면 누구나 데이터베이스 엔드포인트를 찾아 연결을 시도할 수 있습니다. 퍼블릭 서브넷 연결과 잘못된 보안그룹 규칙이 함께 있으면 DB가 외부 스캐닝/브루트포스/크리덴셜 스터핑의 표적이 됩니다.",
      "Checks": [
        "rds_instance_no_public_access",
        "rds_instance_inside_vpc",
        "rds_instance_non_default_port"
      ],
      "Attributes": [
        {
          "Domain": "6. RDS",
          "Subdomain": "6.2. 공개 RDS 인스턴스로 인한 데이터 유출",
          "Section": "6.2. 공개 RDS 인스턴스로 인한 데이터 유출",
          "AuditChecklist": [
            "보안그룹 인바운드 규칙의 원격(SSH, RDP), DB, 관리 포트 소스의 CIDR을 좁은 범위(/16~)로 설정",
            "RDS의 퍼블릭 액세스 항목이 아니오로 설정",
            "RDS DB 서브넷 그룹에 포함된 모든 서브넷을 프라이빗으로 설정"
          ],
          "RelatedRegulations": [
            "2.6.1 네트워크 접근",
            "2.6.4 데이터베이스 접근",
            "2.6.7 인터넷 접속 통제"
          ],
          "AuditEvidence": [
            "https://www.sysdig.com/blog/aws-rds-security-events-sysdig",
            "https://www.blinkops.com/blog/tracking-down-amazon-rds-instances-that-are-publicly-accessible"
          ],
          "NonComplianceCases": [
            "접근하려면 배스천 호스트, SSM Session Manager, 또는 VPN을 거쳐야 하기 때문에 운영 편의성이 저하될 수 있습니다."
          ]
        }
      ]
    },
    {
      "Id": "7.1",
      "Name": "CloudTrail 비활성화 시 로그 미수집으로 인한 추적 불가 위험성",
      "Description": "CloudTrail은 AWS 계정에서 발생하는 모든 활동(누가, 언제, 무엇을 했는지)을 기록하는 '보안 블랙박스'와 같습니다. 이 기록은 해킹 사고가 발생했을 때 공격 경로를 파악하고 피해를 복구하는 데 결정적인 증거가 됩니다. 만약 공격자가 AWS 자격증명을 탈취한 뒤, 가장 먼저 CloudTrail 로깅(기록) 기능을 비활성화하거나 기록되지 않는 방식으로 작업을 시도하면, 공격 흔적이 사라지게 되고, 추적할 수 없게 됩니다.",
      "Checks": [
        "cloudtrail_log_file_validation_enabled",
        "cloudtrail_is_logging",
        "cloudtrail_insights_exist",
        "cloudtrail_multi_region_enabled",
        "cloudtrail_multi_region_enabled_logging_management_events",
        "cloudtrail_logs_s3_bucket_access_logging_enabled"
      ],
      "Attributes": [
        {
          "Domain": "7. CloudTrail",
          "Subdomain": "7.1. CloudTrail 비활성화 시 로그 미수집으로 인한 추적 불가 위험성",
          "Section": "7.1. CloudTrail 비활성화 시 로그 미수집으로 인한 추적 불가 위험성",
          "AuditChecklist": [
            "CloudTrail 추적의 Organization 계층을 포함한 추적 로깅 활성화"
          ],
          "RelatedRegulations": [
            "2.9.4 로그 및 접속기록 관리",
            "2.9.5 로그 및 접속기록 점검",
            "2.11.3 이상행위 분석 및 모니터링"
          ],
          "AuditEvidence": [
            "https://www.sysdig.com/blog/cloud-breach-terraform-data-theft",
            "https://medium.com/starting-up-security/investigating-cloudtrail-logs-c2ecdf578911",
            "https://expel.com/blog/finding-evil-in-aws/"
          ],
          "NonComplianceCases": []
        }
      ]
    },
    {
      "Id": "7.2",
      "Name": "CloudTrail 비정상적인 API 호출 감시 미흡",
      "Description": "CloudTrail은 계정에서 발생한 모든 API 호출을 기록해 사고 탐지/조사/대응의 근거를 제공합니다. 만약 CloudTrail이 다중 리전(Multi-Region)으로 설정되어 있지 않거나 이벤트 선택이 모든 API 활동으로 되어 있지 않으면 공격자가 다른 리전이나 관리형 API를 이용해 활동을 숨기거나 탐지를 회피할 수 있습니다.",
      "Checks": [
        "cloudtrail_insights_exist",
        "cloudtrail_threat_detection_enumeration", 
        "cloudtrail_threat_detection_privilege_escalation",
        "cloudtrail_threat_detection_llm_jacking"
      ],
      "Attributes": [
        {
          "Domain": "7. CloudTrail",
          "Subdomain": "7.2. CloudTrail 비정상적인 API 호출 감시 미흡",
          "Section": "7.2. CloudTrail 비정상적인 API 호출 감시 미흡",
          "AuditChecklist": [
            "CloudTrail 추적의 API 활동(읽기/쓰기) 모두 활성화",
            "비정상적인 API 호출 모니터링 및 로그 관리 운영체계 수립(ex. 대량 호출 RunInstances를 탐지 가능한 CloudTrail 쿼리 작성)"
          ],
          "RelatedRegulations": [
            "2.9.4 로그 및 접속기록 관리",
            "2.9.5 로그 및 접속기록 점검"
          ],
          "AuditEvidence": [
            "https://expel.com/blog/incident-report-from-cli-to-console-chasing-an-attacker-in-aws/",
            "https://www.sysdig.com/blog/cloud-threats-deploying-crypto-cdn"
          ],
          "NonComplianceCases": [
            "멀티리전/모든 이벤트 수집으로 로그량이 급증해 CloudTrail 로그 전송, 처리 지연, 쿼리 성능 저하가 발생할 수 있습니다."
          ]
        }
      ]
    },
    {
      "Id": "8.1",
      "Name": "EKS 과도한 권한 설정으로 인한 Pod 침투와 자격증명 탈취",
      "Description": "EKS에서 과도한 IAM 권한이 부여되면, 한 Pod에서 다른 Pod나 서버의 영역까지 접근할 수 있게 됩니다. 이러한 설정 실수는 공격자가 한 부분만 뚫어도 전체 클러스터를 장악하거나, Pod 내부에서 AWS 자격증명(임시 인증 키)을 훔쳐내 S3/EC2 같은 다른 서비스까지 침투하게 만듭니다.",
      "Checks": [],
      "Attributes": [
        {
          "Domain": "8. EKS",
          "Subdomain": "8.1. EKS 과도한 권한 설정으로 인한 Pod 침투와 자격증명 탈취",
          "Section": "8.1. EKS 과도한 권한 설정으로 인한 Pod 침투와 자격증명 탈취",
          "AuditChecklist": [
            "EKS 서비스 계정에 연결된 IAM 역할 정책 속 Action은 필요 권한으로, Resource는 특정 ARN으로 제한", 
            "EKS 사용 시, 쿠버네티스 서비스 계정별로 IAM 역할 할당"
          ],
          "RelatedRegulations": [
            "2.5.5 특수 계정 및 권한 관리",
            "2.5.6 접근권한 검토",
            "2.6.1 네트워크 접근"
          ],
          "AuditEvidence": [
            "https://aws.amazon.com/ko/blogs/security/how-to-detect-security-issues-in-amazon-eks-clusters-using-amazon-guardduty-part-1",
            "https://www.slideshare.net/slideshow/exploit-k8s-via-misconfiguration-yaml-in-csp-environments/273379601#11",
            "https://www.crn.com/news/cloud/2025/aws-eks-kubernetes-critical-security-flaw-exposes-credentials1"
          ],
          "NonComplianceCases": [
            "기존 Pod나 CI/CD 파이프라인이 필요한 권한을 잃어 기능 장애나 배포에 실패할 수 있습니다."
          ]
        }
      ]
    },
    {
      "Id": "9.1",
      "Name": "KMS 권한/키 관리 오설정으로 인한 랜섬웨어 위협",
      "Description": "KMS는 데이터 복호화의 핵심 제어점이라 공격자가 KMS 관련 권한을 얻으면 키를 교체/삭제/재지정해 복호화를 불가능하게 만들 수 있습니다. 즉, 암호화된 데이터를 클라우드 환경 안에서 잠금 또는 노출 상태로 만들 수 있어 전통적인 랜섬웨어보다 탐지 및 복구가 더 어렵습니다.",
      "Checks": [
        "iam_policy_no_full_access_to_kms",
        "iam_inline_policy_no_full_access_to_kms"
      ],
      "Attributes": [
        {
          "Domain": "9. KMS",
          "Subdomain": "9.1. KMS 권한/키 관리 오설정으로 인한 랜섬웨어 위협",
          "Section": "9.1. KMS 권한/키 관리 오설정으로 인한 랜섬웨어 위협",
          "AuditChecklist": [
            "KMS에서 외부 고객 관리형 키 Import 시, 만료 기간 설정", 
            "KMS에서 외부 고객 관리형 키 Reimport/삭제 시, 키 정책 속 Action은 특정 권한으로 제한되어 있고, Resource는 해당 고객 관리형 키의 ARN으로 제한하고, MFA를 강제",
            "KMS에서 외부 고객 관리형 키의 키 정책 속 Principal의 KMS 관련 고위험 권한(ex. kms:ImportKeyMaterial, kms:decrypt)을 특정 고객 관리형 키의 역할 ARN으로 제한"
          ],
          "RelatedRegulations": [
            "2.7.2 암호키 관리",
            "2.5.5 특수 계정 및 권한 관리"
          ],
          "AuditEvidence": [
            "https://www.youtube.com/watch?v=8QdZ2-sAQFs",
            "https://blog.pwnedlabs.io/ransomwhen-the-hidden-risks-of-aws-kms-in-ransomware-attacks?utm_source",
            "https://permiso.io/blog/ransomwhen-i-did-not-even-notice-it"
          ],
          "NonComplianceCases": [
            "키 임포트/삭제에 MFA 및 승인 워크플로를 요구하면 복잡한 수동 절차가 잦아져 긴급 복구나 자동화 흐름이 지연될 수 있습니다."
          ]
        }
      ]
    },
    {
      "Id": "10.1",
      "Name": "SNS 주제 액세스 정책 과다 허용으로 인한 SMS 스미싱 악용",
      "Description": "SNS는 특정 주제에 대해서 구독자가 있고, 그 주제에 새로운 정보를 Publish하면 그 구독자가 그 정보를 받아갈 수 있습니다. SNS 주제에 대한 접근 정책을 설정할 때, 실수로 Principal을 전체(*)로 설정하면 인터넷상의 누구나 해당 주제에 메시지를 마음대로 Publish하거나 주제를 Subscribe하여 모든 메시지를 받아볼 수 있게 됩니다.",
      "Checks": [
        "sns_topics_not_publicly_accessible"
      ],
      "Attributes": [
        {
          "Domain": "10. SNS",
          "Subdomain": "10.1. SNS 주제 액세스 정책 과다 허용으로 인한 SMS 스미싱 악용",
          "Section": "10.1. SNS 주제 액세스 정책 과다 허용으로 인한 SMS 스미싱 악용",
          "AuditChecklist": [
            "SNS 주제 액세스 정책에서 sns:Publish, sns:Subscribe을 포함한 SNS 관련 권한이 Principal은 특정 ARN으로, Resource는 해당 주제의 ARN으로 제한"
          ],
          "RelatedRegulations": [
            "2.5.5 특수 계정 및 권한 관리",
            "2.6.3 응용프로그램 접근"
          ],
          "AuditEvidence": [
            "https://securitylabs.datadoghq.com/articles/tales-from-the-cloud-trenches-aws-activity-to-phishing/",
            "https://tutorgeeks.blogspot.com/2019/11/publicly-exposed-aws-sns-topics.html"
          ],
          "NonComplianceCases": [
            "정상적인 서비스 연동과 자동화 파이프라인의 일부가 끊어질 수 있습니다."
          ]
        }
      ]
    },
    {
      "Id": "11.1",
      "Name": "SQS 큐 정책 과도 권한",
      "Description": "서버들 사이에 처리해야 할 중요한 작업 목록(메시지)을 안전하게 전달하는 SQS 큐에 Queue Policy(큐 정책)를 설정할 때, 실수로 Principal을 전체(*)로 설정하거나 조건을 너무 넓게 허용하는 경우가 있습니다. 이렇게 되면 누구나 큐에 메시지를 마음대로 보내거나 큐에 담긴 민감한 메시지를 읽고 삭제할 수 있게 됩니다.",
      "Checks": [
        "sqs_queues_not_publicly_accessible"
      ],
      "Attributes": [
        {
          "Domain": "11. SQS",
          "Subdomain": "11.1. SQS 큐 정책 과도 권한",
          "Section": "11.1. SQS 큐 정책 과도 권한",
          "AuditChecklist": [
            "SQS 큐 정책 속 Principal이 특정 계정/역할/서비스의 ARN으로 제한"
          ],
          "RelatedRegulations": [
            "2.5.5 특수 계정 및 권한 관리",
            "2.6.3 응용프로그램 접근"
          ],
          "AuditEvidence": [
            "https://rodelllemit.medium.com/aws-pentesting-abusing-overly-permissive-sqs-queue-156297205afe",
            "https://www.plerion.com/blog/your-queues-your-responsibility"
          ],
          "NonComplianceCases": [
            "내부 AWS 서비스/다른 계정/자동화 시스템 등이 SQS 접근 권한을 잃어 이벤트 전달 체인 자체가 끊길 수 있으므로, 필요한 ARN만 정책에 남기고 알림 동작을 검증한 후 이상이 없을 때에만 Principal:*을 최종 제거합니다"
          ]
        }
      ]
    },
    {
      "Id": "12.1",
      "Name": "Route 53 DNS 레코드 미정리로 인한 Takeover",
      "Description": "사용자가 S3 버킷, EC2 인스턴스 같은 AWS 클라우드 자원을 삭제할 때, 해당 자원을 가리키던 DNS 레코드(CNAME)나 CloudFront 배포 설정을 함께 삭제하는 것을 잊어버리면 DNS 레코드는 '댕글링(Dangling)' 상태, 즉, 존재하지 않는 주소를 계속 가리키는 상태로 남아있게 됩니다.",
      "Checks": [
        "route53_dangling_ip_subdomain_takeover"
      ],
      "Attributes": [
        {
          "Domain": "12. Route 53",
          "Subdomain": "12.1. Route 53 DNS 레코드 미정리로 인한 Takeover",
          "Section": "12.1. Route 53 DNS 레코드 미정리로 인한 Takeover",
          "AuditChecklist": [
            "Route 53 레코드에 실제 소유/운영 중인 리소스만 존재"
          ],
          "RelatedRegulations": [
            "2.1.3 정보자산 관리",
            "2.6.1 네트워크 접근",
            "2.10.3 공개서버 보안"
          ],
          "AuditEvidence": [
            "https://hackerone.com/reports/1179193",
            "https://hackingthe.cloud/aws/exploitation/orphaned_cloudfront_or_dns_takeover_via_s3/"
          ],
          "NonComplianceCases": [
            "정리 작업을 검증없이 수행하면 실제로는 여전히 사용중인 서비스나 서브도메인의 연결이 끊겨 서비스 중단/페이지 오류가 발생할 수 있습니다."
          ]
        }
      ]
    },
    {
      "Id": "13.1",
      "Name": "Organizations Trusted Access 관리 미흡으로 조직 전체 계정 장악",
      "Description": "신뢰할 수 있는 액세스(Trusted Access)를 활성화하면 특정 AWS 서비스가 조직 전체에 대해 자동으로 서비스 전용 권한을 획득해 멤버 계정에서 리소스를 생성하고 변경할 수 있습니다. 최상위 계정(Management Account)이 탈취되거나 관리자가 고의 또는 실수로 신뢰할 수 있는 액세스를 활성화하면, 중앙에서 조직 내 모든 하위 계정(Member Account)에 관리자 권한을 가진 역할을 자동으로 생성하고 침투할 수 있습니다.",
      "Checks": [],
      "Attributes": [
        {
          "Domain": "13. Organizations",
          "Subdomain": "13.1. Organizations Trusted Access 관리 미흡으로 조직 전체 계정 장악",
          "Section": "13.1. Organizations Trusted Access 관리 미흡으로 조직 전체 계정 장악",
          "AuditChecklist": [
            "Organizations의 신뢰할 수 있는 액세스가 업무상 필요한 서비스에만 활성화"
          ],
          "RelatedRegulations": [
            "2.5.5 특수 계정 및 권한 관리",
            "2.5.6 접근권한 검토",
            "2.6.2 정보 시스템 접근"
          ],
          "AuditEvidence": [
            "https://securitylabs.datadoghq.com/articles/tales-from-the-cloud-trenches-the-attacker-doth-persist-too-much/",
            "https://hackingthe.cloud/aws/general-knowledge/aws_organizations_defaults/",
            "https://www.netspi.com/blog/technical-blog/cloud-pentesting/pivoting-clouds-aws-organizations-part-1/"
          ],
          "NonComplianceCases": [ 
            "Trusted Access 비활성화로 인해 조직 통합 기능(조직 단위 스캔/배포/집계)이 일부 중단될 수 있으며, 배포/운영 자동화 실패로 수동 작업이 증가할 수 있습니다."
          ]
        }
      ]
    },
    {
      "Id": "13.2",
      "Name": "Organizations SCP 미적용으로 인한 불필요 API 호출",
      "Description": "서비스 제어 정책(Service Control Policy)를 적용하지 않으면 조직 차원의 최상위 가드레일이 사라져 멤버 계정에서 실행 가능한 API 범위를 중앙에서 제한할 수 없습니다. 그 결과 멤버 계정에서 본래 업무상 불필요하거나 영구적 변경을 야기하는 API 호출이 가능해져 데이터 유출, 모니터링 무력화, 권한 오남용 등 조직 전체 리스크로 빠르게 확산될 수 있습니다.",
      "Checks": [],
      "Attributes": [
        {
          "Domain": "13. Organizations",
          "Subdomain": "13.2. Organizations SCP 미적용으로 인한 불필요 API 호출",
          "Section": "13.2. Organizations SCP 미적용으로 인한 불필요 API 호출",
          "AuditChecklist": [
            "Organizations SCP 정책 속 불필요한 API(ex. ModifyReservedInstances, aws-marketplace:Subscribe)에 대해 Deny로 설정"
          ],
          "RelatedRegulations": [
            "2.5.5 특수 계정 및 권한 관리",
            "2.6.2 정보 시스템 접근"
          ],
          "AuditEvidence": [
            "https://hackingthe.cloud/aws/general-knowledge/block-expensive-actions-with-scps/"
          ],
          "NonComplianceCases": [
            "SCP를 과도하거나 무분별하게 적용하면 정상 운영이 중단될 수 있으므로, SCP 적용은 차단과 허용되는 관리 기능 간 영향 평가를 반드시 선행해야 합니다."
          ]
        }
      ]
    },
    {
      "Id": "14.1",
      "Name": "잘못된 ECR 관련 정책으로 인한 악성코드 위협",
      "Description": "ECR 리포지토리는 리소스 기반 정책을 지원합니다. 여기서 Principal을 전체(*)로 설정하면 누구나 Push/Pull 할 수 있는 리포지토리가 됩니다. 쓰기(Push) 권한이 외부에 열려 있으면 악성 이미지 업로드, 기존 태그 덮어쓰기(태그 하이재킹), 이미지 삭제가 가능해집니다. 특히 CI/CD나 개발 계정에 이런 권한이 풀려 있으면 공격자가 손쉽게 악성 이미지를 주입할 수 있습니다.",
      "Checks": [
        "ecr_repositories_not_publicly_accessible",
        "ecr_repositories_tag_immutability", 
        "ecr_repositories_scan_images_on_push_enabled", 
        "ecr_repositories_scan_vulnerabilities_in_latest_image"
      ],
      "Attributes": [
        {
          "Domain": "14. ECR",
          "Subdomain": "14.1. 잘못된 ECR 관련 정책으로 인한 악성코드 위협",
          "Section": "14.1. 잘못된 ECR 관련 정책으로 인한 악성코드 위협",
          "AuditChecklist": [
            "ECR 리포지토리 정책 속 Principal이 리소스에 접근할 역할의 ARN으로 제한",
            "ECR 이미지 스캔과 태그 불변성 활성화"
          ],
          "RelatedRegulations": [
            "2.5.5 특수 계정 및 권한 관리",
            "2.5.6 접근권한 검토"
          ],
          "AuditEvidence": [
            "https://medium.com/ironsource-tech-blog/abusing-elastic-container-registry-ecr-to-own-aws-environments-47534ad61729",
            "https://hackingthe.cloud/aws/exploitation/Misconfigured_Resource-Based_Policies/misconfigured_ecr_resource_policy/"
          ],
          "NonComplianceCases": [
            "기존 CI/CD 파이프라인이 실패하거나 Cross-Account 배포에 역할 위임/허용 목록 구성이 추가되어 운영이 복잡해질 수 있습니다."
          ]
        }
      ]
    },
    {
      "Id": "15.1",
      "Name": "SendCommand(RunCommand)를 통한 EC2에서의 악성 셸 명령 실행",
      "Description": "AWS Systems Manager의 RunCommand 기능은 EC2 인스턴스에 스크립트나 명령을 비대화형으로 전송할 수 있는 기능입니다. RunCommand를 실행할 수 있는 권한인 SendCommand 권한을 실행 액션 권한을 확보하면, 서버에 명령을 전송할 수 있어 대규모 데이터 탈취, 로그 삭제, 랜섬 행위 등 공격에 활용될 수 있습니다.",
      "Checks": [],
      "Attributes": [
        {
          "Domain": "15. SSM",
          "Subdomain": "15.1. SendCommand(RunCommand)를 통한 EC2에서의 악성 셸 명령 실행",
          "Section": "15.1. SendCommand(RunCommand)를 통한 EC2에서의 악성 셸 명령 실행",
          "AuditChecklist": [
            "ssm:SendCommand 권한 사용 시, 실행 대상의 리소스 ARN으로 제한"
          ],
          "RelatedRegulations": [
            "2.5.5 특수 계정 및 권한 관리",
            "2.6.6 원격 접근 통제"
          ],
          "AuditEvidence": [
            "https://medium.com/%40adammesser_51095/cloud-digital-forensics-and-incident-response-aws-iam-privilege-escalation-leads-to-ec2-2d787a4e99a7",
            "https://hackingthe.cloud/aws/post_exploitation/run_shell_commands_on_ec2/",
            "https://www.elastic.co/guide/en/security/8.19/aws-ssm-sendcommand-with-run-shell-command-parameters.html",
            "https://securitycafe.ro/2023/01/17/aws-post-explitation-with-ssm-sendcommand"
          ],
          "NonComplianceCases": [
            "명령 실행이 정책 또는 허용 목록에 막혀 긴급 조치가 지연될 수 있습니다."
          ]
        }
      ]
    },
    {
      "Id": "15.2",
      "Name": "SSM 문서 공개 설정으로 인한 자격 증명 노출",
      "Description": "AWS Systems Manager는 클라우드 자원에 대한 자동화 작업을 정의하는 문서(SSM Document)를 생성할 수 있습니다. 기본적으로 이러한 문서는 비공개로 설정되지만, 실수로 공개되거나 다른 AWS 계정과 공유될 수 있습니다. 문서에는 내부 자원 정보, 배포 절차, 백업 방식 등 민감한 정보가 포함될 수 있으며, 이는 공격자에게 유용한 정보를 제공합니다.",
      "Checks": [
        "ssm_documents_set_as_public",
        "ssm_document_secrets"
      ],
      "Attributes": [
        {
          "Domain": "15. SSM",
          "Subdomain": "15.2. SSM 문서 공개 설정으로 인한 자격 증명 노출",
          "Section": "15.2. SSM 문서 공개 설정으로 인한 자격 증명 노출",
          "AuditChecklist": [
            "SSM 문서의 프라이빗으로 설정"
          ],
          "RelatedRegulations": [
            "2.1.3 정보자산 관리",
            "2.5.6 접근권한 검토",
            "2.6.2 정보 시스템 접근"
          ],
          "AuditEvidence": [
            "https://research.checkpoint.com/2021/the-need-to-protect-public-aws-ssm-documents-what-the-research-shows/",
            "https://ramimac.me/ssm-command-docs",
            "https://hackernoon.com/how-aws-misconception-resulted-in-detection-of-5-million-personal-records"
          ],
          "NonComplianceCases": [
            "공유/협업을 위해 공개 문서에 의존하던 자동화가 중단되고, 타 계정/조직 간 공통 문서 재사용성이 낮아질 수 있습니다."
          ]
        }
      ]
    },
    {
      "Id": "16.1",
      "Name": "GuardDuty 비활성화로 인한 위협 탐지 실패",
      "Description": "GuardDuty는 계정/리전 전반에서 VPC 플로우/CloudTrail 관리/S3 데이터 이벤트/DNS 로그 등을 상시 분석해 위협을 탐지하는 기본 방어선입니다. GuardDuty가 활성화되어 있지 않거나 조직 단위로 배포/자동 활성화되지 않으면 이러한 이상 징후를 놓쳐 초기 침해를 식별/차단하지 못해 공격자가 장기간 잠복 활동할 수 있기 때문에 위험합니다.",
      "Checks": [
        "guardduty_is_enabled",
        "guardduty_no_high_severity_findings"
      ],
      "Attributes": [
        {
          "Domain": "16. GuardDuty",
          "Subdomain": "16.1. GuardDuty 비활성화로 인한 위협 탐지 실패",
          "Section": "16.1. GuardDuty 비활성화로 인한 위협 탐지 실패",
          "AuditChecklist": [
            "GuardDuty에서 모든 멤버 계정과 모든 사용 리전에 일괄 활성화 적용 및 신규 계정 자동 가입 설정"
          ],
          "RelatedRegulations": [
            "2.11.3 이상행위 분석 및 모니터링",
            "2.10.1 보안시스템 운영",
            "2.11.3 이상행위 분석 및 모니터링"
          ],
          "AuditEvidence": [
            "https://veriti.ai/blog/inside-amazon-guardduty-what-the-logs-reveal-about-cloud-security",
            "https://github.com/aws-samples/aws-incident-response-playbooks/tree/master/playbooks",
            "https://aws.github.io/aws-security-services-best-practices/guides/guardduty/"
          ],
          "NonComplianceCases": []
        }
      ]
    },
    {
      "Id": "17.1",
      "Name": "Cognito Identity Pool에 연결된 IAM Role의 과도 권한",
      "Description": "Cognito Identity Pool은 인증된(또는 인증되지 않은) 사용자를 IAM 역할과 매핑하여 임시 AWS 자격증명을 발급하므로, 연결된 역할에 과도한 권한이 있으면 인증된 사용자 또는 익명 사용자가 즉시 광범위한 AWS 리소스에 접근할 수 있습니다.",
      "Checks": [
        "cognito_identity_pool_guest_access_disabled"
      ],
      "Attributes": [
        {
          "Domain": "17. Cognito",
          "Subdomain": "17.1. Cognito Identity Pool에 연결된 IAM Role의 과도 권한",
          "Section": "17.1. Cognito Identity Pool에 연결된 IAM Role의 과도 권한",
          "AuditChecklist": [
            "Cognito Identity Pool에 연결된 IAM 역할 정책 속 Action은 필요 권한으로, Resource는 해당 역할이 접근 가능한 리소스의 ARN으로, Condition은 비인증(Unauthenticated) 역할에 대한 민감 리소스 접근 권한을 제한"
          ],
          "RelatedRegulations": [
            "2.5.1 사용자 계정 관리", 
            "2.5.5 특수 계정 및 권한 관리",
            "2.5.6 접근권한 검토"
          ],
          "AuditEvidence": [
            "https://hackingthe.cloud/aws/exploitation/cognito_identity_pool_excessive_privileges/",
            "https://blog.appsecco.com/exploiting-weak-configurations-in-amazon-cognito-in-aws-471ce761963"
          ],
          "NonComplianceCases": [
            "축소된 권한으로 인해 역할 정책에서 실제 애플리케이션이 사용하는 API 권한이 제거되어 서비스 오류가 발생할 수 있습니다."
          ]
        }
      ]
    },
    {
      "Id": "17.2",
      "Name": "Cognito Self-sign-up 허용으로 인한 비인가 계정 생성 위험",
      "Description": "Cognito Self-sign-up을 허용하면 외부의 누구나(스팸/봇/공격자 포함) 사용자 계정을 생성할 수 있으므로, 악성 계정이 대량으로 생성되어 서비스 오용/스팸/브루트포스/자격증명 남용의 발판이 됩니다. 또한 이메일/전화번호 검증이나 관리 승인 절차가 없으면 비인가자가 쉽게 인증 토큰을 받아 애플리케이션 로직을 악용할 수 있습니다.",
      "Checks": [
        "cognito_user_pool_self_registration_disabled"
      ],
      "Attributes": [
        {
          "Domain": "17. Cognito",
          "Subdomain": "17.2. Cognito Self-sign-up 허용으로 인한 비인가 계정 생성 위험",
          "Section": "17.2. Cognito Self-sign-up 허용으로 인한 비인가 계정 생성 위험",
          "AuditChecklist": [
            "Cognito를 통한 사용자 관리 시, 내부 서비스거나 관리자 계정만 발급해야 하는 경우 Self Sign Up 비활성화"
          ],
          "RelatedRegulations": [
            "2.5.1 사용자 계정 관리", 
            "2.5.3 사용자 인증", 
            "2.5.4 비밀번호 관리"
          ],
          "AuditEvidence": [
            "https://hackingthe.cloud/aws/exploitation/cognito_user_self_signup/",
            "https://security.theodo.com/en/blog/aws-cognito-pentest"
          ],
          "NonComplianceCases": [
            "비활성화 시 정상 사용자의 가입 절차가 중단될 수 있고, 오프라인 또는 게스트 기능을 제공하던 일부 서비스가 동작하지 않을 수 있습니다."
          ]
        }
      ]
    },
    {
      "Id": "17.3",
      "Name": "Cognito 토큰 클레임 신뢰 오류로 인한 계정 하이재킹",
      "Description": "Cognito가 발급하는 JWT(JSON Web Token)의 access_token은 발급 시점의 클레임(사용자/권한/만료 등 속성)을 포함합니다. 공격자가 Cognito API로 자신의 유저 속성(예: email)을 변경하면 User Pool의 유저 레코드는 즉시 갱신됩니다. 하지만 발급된 access_token은 여전히 이전 이메일을 담고 있어, 이 토큰을 사용하면 이전 값을 볼 수 있습니다. refresh_token으로 새 토큰을 발급받으면, Cognito는 현재 사용자 속성을 반영해 새 토큰을 생성하고 토큰 내 email은 공격자 의도대로 바뀐 값으로 나타납니다.",
      "Checks": [],
      "Attributes": [
        {
          "Domain": "17. Cognito",
          "Subdomain": "17.3. Cognito 토큰 클레임 신뢰 오류로 인한 계정 하이재킹",
          "Section": "17.3. Cognito 토큰 클레임 신뢰 오류로 인한 계정 하이재킹",
          "AuditChecklist": [
            "Cognito에서 토큰 만료 시간을 애플리케이션 운영에 필요한 최소 시간으로 설정(ex. 액세스/ID 토큰은 15분~60분, 갱신 토큰은 7일~30일, 기준은 조직 정책에 따라 정의)"
          ],
          "RelatedRegulations": [
            "2.5.1 사용자 계정 관리",
            "2.5.3 사용자 인증"
          ],
          "AuditEvidence": [
            "https://security.lauritz-holtmann.de/advisories/flickr-account-takeover/",
            "https://medium.com/@mukundbhuva/account-takeover-due-to-cognito-misconfiguration-earns-me-xxxx-3a7b8bb9a619"
          ],
          "NonComplianceCases": [
            "access_token 만료가 너무 짧을 경우, 사용자가 자주 로그아웃되거나 “세션이 만료되었습니다” 메시지를 자주 보게 됩니다. 또한 토큰이 자주 만료되면 refresh_token 요청 빈도가 폭증합니다."
          ]
        }
      ]
    },
    {
      "Id": "18.1",
      "Name": "CloudFormation의 PassRole으로 인한 권한 상승",
      "Description": "CloudFormation은 스택 실행 시 호출 주체가 PassRole로 지정한 실행 역할(RoleARN)의 권한으로 리소스를 만들고 바꿉니다. 따라서 CreateStack 요청에 고권한 역할을 전달하면, CloudFormation이 그 역할을 대신 사용해 권한 상승과 IAM 리소스 생성까지 수행할 수 있습니다.",
      "Checks": [],
      "Attributes": [
        {
          "Domain": "18. CloudFormation",
          "Subdomain": "18.1. CloudFormation의 PassRole으로 인한 권한 상승",
          "Section": "18.1. CloudFormation의 PassRole으로 인한 권한 상승",
          "AuditChecklist": [
            "iam:PassRole 권한 사용 시, Resource를 특정 ARN으로 제한",
            "CloudFormation을 위한 IAM 역할 정책 속 두개의 권한(CloudFormation:CreateStack, iam:PassRole)을 동시 부여 제한"
          ],
          "RelatedRegulations": [
            "2.5.5 특수 계정 및 권한 관리", 
            "2.5.6 접근권한 검토"
          ],
          "AuditEvidence": [
            "https://www.prodefense.io/blog/aws-cloudformation-takeover?utm_source",
            "https://docs.datadoghq.com/ko/security/code_security/iac_security/iac_rules/terraform/aws/role_with_privilege_escalation_by_actions_iam_passrole_and_cloudformation_createstack/?utm_source",
            "https://infosecwriteups.com/passing-a-role-to-cloudformation-to-escalate-privileges-602010d26f55",
            "https://blog.prodefense.io/how-abusing-aws-cloudformation-led-to-a-total-takeover-of-an-aws-environment-7f94cabd671d"
          ],
          "NonComplianceCases": [
            "기존 CI/CD 및 자동화가 권한 부족으로 실패하여 배포 중단/서비스 장애가 발생할 수 있습니다."
          ]
        }
      ]
    },
    {
      "Id": "19.1",
      "Name": "OpenSearch 도메인 공개 접근 및 광범위 권한 정책으로 인한 데이터 유출",
      "Description": "OpenSearch 도메인이 퍼블릭으로 직접 노출되어 있거나, 보안 설정이 비활성화되어 있으면, 누구나 데이터를 조회/검색/삭제 및 덮어쓸 수 있게 됩니다. 이렇게 되면 공격자는 저장된 비밀번호/토큰/백업 정보 등을 내려받아 계정 전체를 장악하거나, 악성 쿼리로 시스템을 느려지게 하거나, 저장된 데이터 자체를 바꿔버려 사용자에게 악성코드를 보내게 만들 수도 있습니다.",
      "Checks": [
        "opensearch_service_domains_not_publicly_accessible"
      ],
      "Attributes": [
        {
          "Domain": "19. OpenSearch",
          "Subdomain": "19.1. OpenSearch 도메인 공개 접근 및 광범위 권한 정책으로 인한 데이터 유출",
          "Section": "19.1. OpenSearch 도메인 공개 접근 및 광범위 권한 정책으로 인한 데이터 유출",
            "AuditChecklist": [
            "OpenSearch 도메인의 네트워크가 VPC 액세스 전용으로 설정",
            "OpenSearch 도메인의 액세스 정책이 IP 또는 특정 IAM 역할/사용자로 제한"
          ],
          "RelatedRegulations": [
            "2.6.1 네트워크 접근",
            "2.5.5 특수 계정 및 권한 관리"
          ],
          "AuditEvidence": [
            "https://www.clouddefense.ai/compliance-rules/aws-fs-practices/opensearch/opensearch-in-vpc-only",
            "https://www.trendmicro.com/cloudoneconformity/knowledge-base/aws/Elasticsearch/domain-exposed.html"
          ],
          "NonComplianceCases": [
            "외부에서 직접 접속하던 Dashboards/애플리케이션 워크플로가 중단될 수 있으며, 운영자 접근 경로도 복잡해져 운영 효율성이 저하될 수 있습니다."
          ]
        }
      ]
    },
    {
      "Id": "20.1",
      "Name": "Elastic Beanstalk 환경 속성/애플리케이션 번들 내 민감정보 노출로 인한 데이터 유출",
      "Description": "Elastic Beanstalk는 애플리케이션 배포를 간편하게 해 주는 관리형 플랫폼이지만, 환경 속성 이나 S3에 비밀번호, API 키, 토큰, 인증서와 같은 민감정보들이 남기 쉬워서 민감정보/자격증명이 노출될 수 있습니다. Elastic Beanstalk 환경은 여러 AWS 리소스를 자동으로 생성 및 관리하므로 한 곳의 실수가 계정 전체로 권한을 넓혀 다른 서비스로 침투할 수 있습니다.",
      "Checks": [],
      "Attributes": [
        {
          "Domain": "20. Elastic Beanstalk",
          "Subdomain": "20.1. Elastic Beanstalk 환경 속성/애플리케이션 번들 내 민감정보 노출로 인한 데이터 유출",
          "Section": "20.1. Elastic Beanstalk 환경 속성/애플리케이션 번들 내 민감정보 노출로 인한 데이터 유출",
          "AuditChecklist": [
            "Elastic Beanstalk 환경 속성 속 소스가 Secrets Manager 혹은 SSM Parameter Store로 지정"
          ],
          "RelatedRegulations": [
            "2.5.4 비밀번호 관리",
            "2.8.5 소스 프로그램 관리",
            "2.7.1 암호정책 적용",
            "2.7.2 암호키 관리"
          ],
          "AuditEvidence": [
            "https://aws.plainenglish.io/hacking-aws-beanstalk-cloudgoat-scenario-4da1fac6a4cf",
            "https://medium.com/%40mauzware/day-6-of-my-aws-pentesting-journey-exploring-elastic-beanstalk-adc28ea74f0d",
            "https://rhinosecuritylabs.com/tools/new-pacu-module-enumerating-elastic-beanstalk/"
          ],
          "NonComplianceCases": []
        }
      ]
    },
    {
      "Id": "21.1",
      "Name": "Redshift 클러스터 암호화 미설정으로 인한 운영/보안 리스크",
      "Description": "Amazon Redshift는 2025년부터 기본적으로 암호화 활성화(KMS 사용)와 보안 기본값 강화가 적용됐지만, 기존(레거시) 클러스터/스냅샷이나 일부 복원/워크플로우는 여전히 비암호화 상태로 남아 있을 수 있습니다. 점검 주기가 느슨하면 새로 생성된 건 안전하리라는 가정 때문에 과거 리소스가 사각지대가 되고, 스냅샷/백업 유출 시 평문 데이터 노출로 이어집니다.",
      "Checks": [
        "redshift_cluster_encrypted_at_rest"
      ],
      "Attributes": [
        {
          "Domain": "21. Redshift",
          "Subdomain": "21.1. Redshift 클러스터 암호화 미설정으로 인한 운영/보안 리스크",
          "Section": "21.1. Redshift 클러스터 암호화 미설정으로 인한 운영/보안 리스크",
          "AuditChecklist": [
            "Redshift 클러스터 암호화"
          ],
          "RelatedRegulations": [
            "2.7.1 암호정책 적용", 
            "2.7.2 암호키 관리", 
            "2.9.3 백업 및 복구관리"
          ],
          "AuditEvidence": [
            "https://www.fogsecurity.io/blog/shifty-business-redshift-encryption-aws",
            "https://aws.amazon.com/ko/blogs/security/amazon-redshift-enhances-security-by-changing-default-behavior-in-2025/"
          ],
          "NonComplianceCases": [
            "Redshift 클러스터를 암호화로 전환하면 내부적으로 새 암호화된 클러스터로 데이터를 마이그레이션하기 때문에, 전환 과정에서 일시적인 성능 저하나 연결 중단이 발생할 수 있습니다. 또한 마이그레이션 작업 중에는 클러스터를 읽기 전용 모드로만 사용 가능합니다."
          ]
        }
      ]
    },
    {
      "Id": "22.1",
      "Name": "Glue 개발 엔드포인트 생성/수정 시 PassRole을 통한 권한 상승",
      "Description": "Glue DevEndpoint는 개발용 원격 실행환경을 생성할 수 있고, 생성 시 실행 역할(Execution Role)을 전달합니다. 따라서 호출 주체가 glue:CreateDevEndpoint 또는 glue:UpdateDevEndpoint 권한과 함께 iam:PassRole 권한을 보유하면, 악의적 템플릿이나 요청으로 고권한 실행 역할을 DevEndpoint에 전달해 권한 상승 및 민감 리소스에 접근할 수 있습니다.",
      "Checks": [],
      "Attributes": [
        {
          "Domain": "22. Glue",
          "Subdomain": "22.1. Glue 개발 엔드포인트 생성/수정 시 PassRole을 통한 권한 상승",
          "Section": "22.1. Glue 개발 엔드포인트 생성/수정 시 PassRole을 통한 권한 상승",
          "AuditChecklist": [
            "Glue를 위한 IAM 역할 속 두 개의 권한(glue:CreateDevEndpoint, iam:PassRole)의 동시 부여 제한",
            "iam:PassRole 권한 사용 시, Resource를 특정 ARN으로 제한", 
            "iam:PassRole 권한 사용 시, Condition의 iam:PassedToService를 활용해 해당 역할이 연결 될 서비스만 허용"
          ],
          "RelatedRegulations": [
            "2.5.5 특수 계정 및 권한 관리",
            "2.5.6 접근권한 검토", 
            "2.6.6 원격 접근 통제"
          ],
          "AuditEvidence": [
            "https://hackingthe.cloud/aws/exploitation/iam_privilege_escalation/",
            "https://docs.kics.io/develop/queries/terraform-queries/aws/94fbe150-27e3-4eba-9ca6-af32865e4503/",
            "https://bishopfox.com/blog/5-privesc-attack-vectors-in-aws"
          ],
          "NonComplianceCases": [
            "합법적 개발 및 디버깅 워크플로가 중단될 수 있으므로 파이프라인/운영 절차 조정과 예외 관리가 필요합니다."
          ]
        }
      ]
    },
    {
      "Id": "23.1",
      "Name": "Service Catalog 관리자 권한 탈취 시 Launch Constraint 악용으로 IAM 권한 상승",
      "Description": "AWS Service Catalog의 Launch Constraint은 제품을 실행할 때 Service Catalog가 대신 맡아 수행할 IAM 역할(launch role)을 지정합니다. 이 역할은 제품이 생성하는 리소스들을 만들고 수정할 수 있는 권한을 가지므로, 이 역할에 과도한 권한이 있거나 콘솔/API 조작으로 이 제약을 악용할 수 있다면 낮은 권한의 사용자가 높은 권한을 획득할 수 있습니다.",
      "Checks": [
        "servicecatalog_portfolio_shared_within_organization_only"
      ],
      "Attributes": [
        {
          "Domain": "23. Service Catalog",
          "Subdomain": "23.1. Service Catalog 관리자 권한 탈취 시 Launch Constraint 악용으로 IAM 권한 상승",
          "Section": "23.1. Service Catalog 관리자 권한 탈취 시 Launch Constraint 악용으로 IAM 권한 상승",
          "AuditChecklist": [
            "조직 내 Service Catalog 포트폴리오 공유가 필요한 경우, 조직 전체에 AcceptPortfolioShare 차단하는 SCP 정책 작성 및 조직 구조 내의 공유 방법 선택", 
            "Service Catalog 제약 조건 생성 시 할당하는 IAM 역할에 Principal은 Service Catalog 서비스 지정, Action은 고위험 권한(ex. iam:CreatePolicy, iam:AttachRolePolicy) Deny, Condition은 호출 출처 제한"
          ],
          "RelatedRegulations": [
            "2.5.5 특수 계정 및 권한 관리", 
            "2.5.6 접근권한 검토"
          ],
          "AuditEvidence": [
            "https://www.slideshare.net/secret/56jgTgG070ec4j",
            "https://docs.aws.amazon.com/servicecatalog/latest/adminguide/constraints-launch.html"
          ],
          "NonComplianceCases": [
            "기존에 개별 계정에서 승인하던 워크플로가 중단될 수 있으므로 사전에 조직 공유 설계 및 테스트를 반드시 수행해야 합니다."
          ]
        }
      ]
    },
    {
      "Id": "24.1",
      "Name": "DocumentDB 스냅샷 공개 오설정으로 인한 데이터 노출",
      "Description": "Amazon DocumentDB(MongoDB 호환 관리형 DB)는 수동 스냅샷을 계정 간 공유하거나 퍼블릭으로 공개할 수 있습니다. 스냅샷을 공개하면 스냅샷에 포함된 데이터(문서, 설정, 사용자 계정 등)가 누구에게나 복원 및 열람이 가능해져 민감정보와 자격증명 유출로 직결됩니다.",
      "Checks": [
        "documentdb_cluster_public_snapshot", 
        "documentdb_cluster_storage_encrypted"
      ],
      "Attributes": [
        {
          "Domain": "24. DocumentDB",
          "Subdomain": "24.1. DocumentDB 스냅샷 공개 오설정으로 인한 데이터 노출",
          "Section": "24.1. DocumentDB 스냅샷 공개 오설정으로 인한 데이터 노출",
          "AuditChecklist": [
            "DocumentDB 스냅샷의 공유 속성이 프라이빗 설정", 
            "DocumentDB 스냅샷 생성할 클러스터의 KMS 암호화"
          ],
          "RelatedRegulations": [
            "2.5.6 접근권한 검토",
            "2.6.1 네트워크 접근",
            "2.7.1 암호정책 적용",
            "2.7.2 암호키 관리",
            "2.9.3 백업 및 복구관리"
          ],
          "AuditEvidence": [
            "https://ramimac.me/exposed-docdb",
            "https://docs.aws.amazon.com/documentdb/latest/developerguide/backup_restore-share_cluster_snapshots.html?utm_source=chatgpt.com"
          ],
          "NonComplianceCases": [
            "공개 스냅샷 제거 및 암호화된 복사본 생성/원본 삭제 조치로 인해, 해당 공개 스냅샷에 의존하던 자동 복원/테스트 파이프라인과 외부 파트너의 접근이 즉시 차단되어 정상적인 복구 및 테스트 프로세스가 중단될 수 있습니다."
          ]
        }
      ]
    },
    {
      "Id": "25.1",
      "Name": "Bedrock의 과도한 접근 권한으로 인한 LLM 서비스 남용 위험",
      "Description": "자격증명이 유출되면 곧바로 Bedrock LLM 호출 및 배포 권한으로 악용될 수 있습니다. 특히 Bedrock에 과도한 권한이 부여되어 있으면 탈취된 키로 대량 모델 호출/모델 프로비저닝/설정 변경이 즉시 가능해 비용이 급증하고, 입출력에 포함된 민감정보가 외부로 유출되며 권한 확대로 이어질 수 있습니다.",
      "Checks": [
        "bedrock_api_key_no_administrative_privileges"
      ],
      "Attributes": [
        {
          "Domain": "25. Bedrock",
          "Subdomain": "25.1. Bedrock의 과도한 접근 권한으로 인한 LLM 서비스 남용 위험",
          "Section": "25.1. Bedrock의 과도한 접근 권한으로 인한 LLM 서비스 남용 위험",
          "AuditChecklist": [
            "Bedrock 모델 활성화/호출 계열 권한(ex. bedrock:InvokeModel)을 특정 모델 ARN으로, Condition을 호출 리전/주체로 제한"
          ],
          "RelatedRegulations": [
            "2.5.5 특수 계정 및 권한 관리",
            "2.5.6 접근권한 검토"
          ],
          "AuditEvidence": [
            "https://www.wiz.io/blog/jinx-2401-llm-hijacking-aws",
            "https://www.csoonline.com/article/3535433/llmjacking-how-attackers-use-stolen-aws-credentials-to-enable-llms-and-rack-up-costs-for-victims.html",
            "https://aws.amazon.com/ko/blogs/security/implementing-least-privilege-access-for-amazon-bedrock",
            "https://www.trendmicro.com/cloudoneconformity/knowledge-base/aws/Bedrock/service-role-policy-too-permissive.html"
          ],
          "NonComplianceCases": [
            "정당한 사용자의 호출/로깅/배포 API가 차단되어 개발과 테스트가 지연될 수 있습니다. 또한 연구/운영팀이 매번 수동으로 예외 승인을 요청해야해 생산성이 저하되고, 모델 운영 자동화나 파이프라인 연동이 중단될 수 있습니다."
          ]
        }
      ]
    },
    {
      "Id": "26.1",
      "Name": "SES 접근 권한 과다로 인한 대량 피싱/스팸 발송 위험",
      "Description": "SES의 발신자 검증, 샌드박스 해제와 발송 권한은 대량 이메일 발송을 즉시 가능하게 합니다. 따라서 이 권한이 광범위하게 부여되면 내부 실수나 탈취된 자격증명을 통해 대규모 피싱 및 스팸 캠페인이 진행될 수 있습니다.",
      "Checks": [
        "ses_identity_not_publicly_accessible"
      ],
      "Attributes": [
        {
          "Domain": "26. SES",
          "Subdomain": "26.1. SES 접근 권한 과다로 인한 대량 피싱/스팸 발송 위험",
          "Section": "26.1. SES 접근 권한 과다로 인한 대량 피싱/스팸 발송 위험",
          "AuditChecklist": [
            "SES 고위험 권한(ex. SendEmail, PutAccountDetails)을 승인된 관리자 또는 서비스 전용 IAM 역할에만 허용", 
            "SES를 위한 IAM 역할 정책 속 Resource를 구체적인 ARN, 도메인, 아이덴티티로 제한"
          ],
          "RelatedRegulations": [
            "2.5.5 특수 계정 및 권한 관리",
            "2.5.6 접근권한 검토",
            "2.9.2 성능 및 장애관리"
          ],
          "AuditEvidence": [
            "https://www.wiz.io/blog/wiz-discovers-cloud-email-abuse-campaign",
            "https://cyberpress.org/amazon-ses-phishing"
          ],
          "NonComplianceCases": [
            "리소스 수준 제약을 지원하지 않는 액션이 많아 Condition 의존도가 높아지고, 그 결과 정책 관리/운영이 복잡해져서 오탐/미차단 위험이 커집니다."
          ] 
        }
      ]
    },
    {
      "Id": "27.1",
      "Name": "AppStream 2.0 환경을 통한 과도한 권한 및 자격 증명 탈취",
      "Description": "AppStream 2.0은 클라우드에서 데스크톱/애플리케이션을 실행하고 화면만 스트리밍하는 서비스라서 앱은 AWS 인프라 내부에서 실행됩니다. AppStream이 특정 IAM 역할을 맡아 인스턴스에서 AWS API를 호출하도록 구성될 수 있는데, 그 역할의 신뢰 정책 또는 권한이 과도하면 공격자는 해당 역할을 발판으로 계정 내 권한을 확대할 수 있습니다.",
      "Checks": [],
      "Attributes": [
        {
          "Domain": "27. AppStream",
          "Subdomain": "27.1. AppStream 2.0 환경을 통한 과도한 권한 및 자격 증명 탈취",
          "Section": "27.1. AppStream 2.0 환경을 통한 과도한 권한 및 자격 증명 탈취",
          "AuditChecklist": [
            "AppStream의 Fleet/이미지 빌더에 연결된 IAM 역할의 권한에서 Resource를 특정 IAM 역할의 ARN으로 제한",
            "iam:PassRole 권한 사용 시, Resource를 특정 ARN으로 제한",
            "iam:PassRole 권한 사용 시, Condition의 iam:PassedToService를 활용해 해당 역할이 연결 될 서비스만 허용"
          ],
          "RelatedRegulations": [
            "2.5.5 특수 계정 및 권한 관리.",
            "2.5.1 사용자 계정 관리",
            "2.5.6 접근권한 검토",
            "2.6.3 응용프로그램 접근"
          ],
          "AuditEvidence": [
            "https://www.youtube.com/watch?v=Stf5pf3ERCY"
          ],
          "NonComplianceCases": [
            "Fleet이나 Image Builder가 여러 리전 또는 다양한 버전의 AMI, 스택 구성을 사용할 때 각 환경마다 다른 Role ARN을 사용한다면, 권한 정책을 Role별로 세밀하게 지정해야 하기에 운영 및 유지보수가 복잡해질 수 있습니다."
          ]
        }
      ]
    }
  ]
}







