{
  "Framework": "PCI",
  "Version": "3.2.1",
  "Provider": "AWS",
  "Description": "The Payment Card Industry Data Security Standard (PCI DSS) is a proprietary information security standard. It's administered by the PCI Security Standards Council, which was founded by American Express, Discover Financial Services, JCB International, MasterCard Worldwide, and Visa Inc. PCI DSS applies to entities that store, process, or transmit cardholder data (CHD) or sensitive authentication data (SAD). This includes, but isn't limited to, merchants, processors, acquirers, issuers, and service providers. The PCI DSS is mandated by the card brands and administered by the Payment Card Industry Security Standards Council.",
  "Requirements": [
    {
      "Id": "1.1",
      "Name": "Establish and implement firewall and router configuration standards",
      "Description": "Firewalls and routers are key components of the architecture that controls entry to and exit from the network. These devices are software or hardware devices that block unwanted access and manage authorized access into and out of the network. Configuration standards and procedures will help to ensure that the organization's first line of defense in the protection of its data remains strong.",
      "Checks": [
        "ec2_securitygroup_allow_ingress_from_internet_to_all_ports",
        "apigateway_restapi_waf_acl_attached",
        "elbv2_waf_acl_attached"
      ],
      "Attributes": [
        {
          "ItemId": "1.1",
          "Section": "Requirement 1: Install and maintain a firewall configuration to protect cardholder data",
          "SubSection": "Requirement 1: Install and maintain a firewall configuration to protect cardholder data"
        }
      ]
    },
    {
      "Id": "1.1.4",
      "Name": "Requirements for a firewall at each Internet connection and between any demilitarized zone (DMZ) and the internal network zone",
      "Description": "Using a firewall on every Internet connection coming into (and out of) the network, and between any DMZ and the internal network, allows the organization to monitor and control access and minimizes the chances of a malicious individual obtaining access to the internal network via an unprotected connection.",
      "Checks": [
        "ec2_securitygroup_allow_ingress_from_internet_to_all_ports",
        "apigateway_restapi_waf_acl_attached",
        "elbv2_waf_acl_attached"
      ],
      "Attributes": [
        {
          "ItemId": "1.1.4",
          "Section": "Requirement 1: Install and maintain a firewall configuration to protect cardholder data",
          "SubSection": "1.1 Establish and implement firewall and router configuration standards"
        }
      ]
    },
    {
      "Id": "1.1.4.c",
      "Name": "Observe network configurations to verify that a firewall is in place at each Internet connection and between any demilitarized zone (DMZ) and the internal network zone, per the documented configuration standards and network diagrams",
      "Description": "Using a firewall on every Internet connection coming into (and out of) the network, and between any DMZ and the internal network, allows the organization to monitor and control access and minimizes the chances of a malicious individual obtaining access to the internal network via an unprotected connection.",
      "Checks": [
        "ec2_securitygroup_allow_ingress_from_internet_to_all_ports",
        "apigateway_restapi_waf_acl_attached",
        "elbv2_waf_acl_attached"
      ],
      "Attributes": [
        {
          "ItemId": "1.1.4.c",
          "Section": "Requirement 1: Install and maintain a firewall configuration to protect cardholder data",
          "SubSection": "1.1.4 Requirements for a firewall at each Internet connection and between any demilitarized zone (DMZ) and the internal network zone"
        }
      ]
    },
    {
      "Id": "1.2",
      "Name": "Examine firewall and router configurations and perform the following to verify that connections are restricted between untrusted networks and system components in the cardholder data environment",
      "Description": "It is essential to install network protection between the internal, trusted network and any untrusted network that is external and/or out of the entity's ability to control or manage. Failure to implement this measure correctly results in the entity being vulnerable to unauthorized access by malicious individuals or software. For firewall functionality to be effective, it must be properly configured to control and/or limit traffic into and out of the entity's network.",
      "Checks": [
        "ec2_ebs_public_snapshot",
        "rds_instance_no_public_access",
        "ec2_securitygroup_default_restrict_traffic",
        "ec2_securitygroup_allow_ingress_from_internet_to_all_ports",
        "ec2_networkacl_allow_ingress_tcp_port_22",
        "awslambda_function_not_publicly_accessible",
        "rds_snapshots_public_access",
        "opensearch_service_domains_not_publicly_accessible",
        "redshift_cluster_public_access",
        "s3_bucket_policy_public_write_access",
        "awslambda_function_inside_vpc",
        "ec2_securitygroup_allow_ingress_from_internet_to_tcp_port_22",
        "s3_bucket_public_write_acl",
        "dms_instance_no_public_access",
        "sagemaker_notebook_instance_without_direct_internet_access_configured",
        "ec2_networkacl_allow_ingress_tcp_port_3389"
      ],
      "Attributes": [
        {
          "ItemId": "1.2",
          "Section": "Requirement 1: Install and maintain a firewall configuration to protect cardholder data",
          "SubSection": "Requirement 1: Install and maintain a firewall configuration to protect cardholder data"
        }
      ]
    },
    {
      "Id": "1.2.1",
      "Name": "Restrict inbound and outbound traffic to that which is necessary for the cardholder data environment, and specifically deny all other traffic",
      "Description": "Examination of all inbound and outbound connections allows for inspection and restriction of traffic based on the source and/or destination address, thus preventing unfiltered access between untrusted and trusted environments. This prevents malicious individuals from accessing the entity's network via unauthorized IP addresses or from using services, protocols, or ports in an unauthorized manner (for example, to send data they've obtained from within the entity's network out to an untrusted server). Implementing a rule that denies all inbound and outbound traffic that is not specifically needed helps to prevent inadvertent holes that would allow unintended and potentially harmful traffic in or out.",
      "Checks": [
        "ec2_ebs_public_snapshot",
        "rds_instance_no_public_access",
        "ec2_securitygroup_default_restrict_traffic",
        "ec2_securitygroup_allow_ingress_from_internet_to_all_ports",
        "ec2_networkacl_allow_ingress_tcp_port_22",
        "awslambda_function_not_publicly_accessible",
        "rds_snapshots_public_access",
        "opensearch_service_domains_not_publicly_accessible",
        "redshift_cluster_public_access",
        "s3_bucket_policy_public_write_access",
        "awslambda_function_inside_vpc",
        "ec2_securitygroup_allow_ingress_from_internet_to_tcp_port_22",
        "s3_bucket_public_write_acl",
        "dms_instance_no_public_access",
        "sagemaker_notebook_instance_without_direct_internet_access_configured",
        "ec2_networkacl_allow_ingress_tcp_port_3389"
      ],
      "Attributes": [
        {
          "ItemId": "1.2.1",
          "Section": "Requirement 1: Install and maintain a firewall configuration to protect cardholder data",
          "SubSection": "1.2 Examine firewall and router configurations and perform the following to verify that connections are restricted between untrusted networks and system components in the cardholder data environment"
        }
      ]
    },
    {
      "Id": "1.2.1.a",
      "Name": "Examine firewall and router configuration standards to verify that they identify inbound and outbound traffic necessary for the cardholder data environment",
      "Description": "Examination of all inbound and outbound connections allows for inspection and restriction of traffic based on the source and/or destination address, thus preventing unfiltered access between untrusted and trusted environments. This prevents malicious individuals from accessing the entity's network via unauthorized IP addresses or from using services, protocols, or ports in an unauthorized manner (for example, to send data they've obtained from within the entity's network out to an untrusted server). Implementing a rule that denies all inbound and outbound traffic that is not specifically needed helps to prevent inadvertent holes that would allow unintended and potentially harmful traffic in or out.",
      "Checks": [
        "ec2_ebs_public_snapshot",
        "rds_instance_no_public_access",
        "ec2_securitygroup_default_restrict_traffic",
        "ec2_securitygroup_allow_ingress_from_internet_to_all_ports",
        "ec2_networkacl_allow_ingress_tcp_port_22",
        "awslambda_function_not_publicly_accessible",
        "rds_snapshots_public_access",
        "opensearch_service_domains_not_publicly_accessible",
        "redshift_cluster_public_access",
        "s3_bucket_policy_public_write_access",
        "awslambda_function_inside_vpc",
        "ec2_securitygroup_allow_ingress_from_internet_to_tcp_port_22",
        "s3_bucket_public_write_acl",
        "dms_instance_no_public_access",
        "sagemaker_notebook_instance_without_direct_internet_access_configured",
        "ec2_networkacl_allow_ingress_tcp_port_3389"
      ],
      "Attributes": [
        {
          "ItemId": "1.2.1.a",
          "Section": "Requirement 1: Install and maintain a firewall configuration to protect cardholder data",
          "SubSection": "1.2.1 Restrict inbound and outbound traffic to that which is necessary for the cardholder data environment, and specifically deny all other traffic"
        }
      ]
    },
    {
      "Id": "1.2.1.b",
      "Name": "Examine firewall and router configurations to verify that inbound and outbound traffic is limited to that which is necessary for the cardholder data environment",
      "Description": "Examination of all inbound and outbound connections allows for inspection and restriction of traffic based on the source and/or destination address, thus preventing unfiltered access between untrusted and trusted environments. This prevents malicious individuals from accessing the entity's network via unauthorized IP addresses or from using services, protocols, or ports in an unauthorized manner (for example, to send data they've obtained from within the entity's network out to an untrusted server). Implementing a rule that denies all inbound and outbound traffic that is not specifically needed helps to prevent inadvertent holes that would allow unintended and potentially harmful traffic in or out.",
      "Checks": [
        "ec2_ebs_public_snapshot",
        "rds_instance_no_public_access",
        "ec2_securitygroup_default_restrict_traffic",
        "ec2_securitygroup_allow_ingress_from_internet_to_all_ports",
        "ec2_networkacl_allow_ingress_tcp_port_22",
        "awslambda_function_not_publicly_accessible",
        "rds_snapshots_public_access",
        "opensearch_service_domains_not_publicly_accessible",
        "redshift_cluster_public_access",
        "s3_bucket_policy_public_write_access",
        "awslambda_function_inside_vpc",
        "ec2_securitygroup_allow_ingress_from_internet_to_tcp_port_22",
        "s3_bucket_public_write_acl",
        "dms_instance_no_public_access",
        "sagemaker_notebook_instance_without_direct_internet_access_configured",
        "ec2_networkacl_allow_ingress_tcp_port_3389"
      ],
      "Attributes": [
        {
          "ItemId": "1.2.1.b",
          "Section": "Requirement 1: Install and maintain a firewall configuration to protect cardholder data",
          "SubSection": "1.2.1 Restrict inbound and outbound traffic to that which is necessary for the cardholder data environment, and specifically deny all other traffic"
        }
      ]
    },
    {
      "Id": "1.2.1.c",
      "Name": "Examine firewall and router configurations to verify that all other inbound and outbound traffic is specifically denied, for example by using an explicit “deny all” or an implicit deny after allow statement",
      "Description": "Examination of all inbound and outbound connections allows for inspection and restriction of traffic based on the source and/or destination address, thus preventing unfiltered access between untrusted and trusted environments. This prevents malicious individuals from accessing the entity's network via unauthorized IP addresses or from using services, protocols, or ports in an unauthorized manner (for example, to send data they've obtained from within the entity's network out to an untrusted server). Implementing a rule that denies all inbound and outbound traffic that is not specifically needed helps to prevent inadvertent holes that would allow unintended and potentially harmful traffic in or out.",
      "Checks": [
        "ec2_ebs_public_snapshot",
        "rds_instance_no_public_access",
        "ec2_securitygroup_default_restrict_traffic",
        "ec2_securitygroup_allow_ingress_from_internet_to_all_ports",
        "ec2_networkacl_allow_ingress_tcp_port_22",
        "awslambda_function_not_publicly_accessible",
        "rds_snapshots_public_access",
        "opensearch_service_domains_not_publicly_accessible",
        "redshift_cluster_public_access",
        "s3_bucket_policy_public_write_access",
        "awslambda_function_inside_vpc",
        "ec2_securitygroup_allow_ingress_from_internet_to_tcp_port_22",
        "s3_bucket_public_write_acl",
        "dms_instance_no_public_access",
        "sagemaker_notebook_instance_without_direct_internet_access_configured",
        "ec2_networkacl_allow_ingress_tcp_port_3389"
      ],
      "Attributes": [
        {
          "ItemId": "1.2.1.c",
          "Section": "Requirement 1: Install and maintain a firewall configuration to protect cardholder data",
          "SubSection": "1.2.1 Restrict inbound and outbound traffic to that which is necessary for the cardholder data environment, and specifically deny all other traffic"
        }
      ]
    },
    {
      "Id": "1.2.2",
      "Name": "Secure and synchronize router configuration files",
      "Description": "While the running (or active) router configuration files include the current, secure settings, the start- up files (which are used when routers are re- started or booted) must be updated with the same secure settings to ensure these settings are applied when the start-up configuration is run. Because they only run occasionally, start-up configuration files are often forgotten and are not updated. When a router re-starts and loads a start-up configuration that has not been updated with the same secure settings as those in the running configuration, it may result in weaker rules that allow malicious individuals into the network.",
      "Checks": [],
      "Attributes": [
        {
          "ItemId": "1.2.2",
          "Section": "Requirement 1: Install and maintain a firewall configuration to protect cardholder data",
          "SubSection": "1.2 Examine firewall and router configurations and perform the following to verify that connections are restricted between untrusted networks and system components in the cardholder data environment"
        }
      ]
    },
    {
      "Id": "1.2.2.b",
      "Name": "Examine router configurations to verify they are synchronized—for example, the running (or active) configuration matches the start-up configuration (used when machines are booted)",
      "Description": "While the running (or active) router configuration files include the current, secure settings, the start- up files (which are used when routers are re- started or booted) must be updated with the same secure settings to ensure these settings are applied when the start-up configuration is run. Because they only run occasionally, start-up configuration files are often forgotten and are not updated. When a router re-starts and loads a start-up configuration that has not been updated with the same secure settings as those in the running configuration, it may result in weaker rules that allow malicious individuals into the network.",
      "Checks": [],
      "Attributes": [
        {
          "ItemId": "1.2.2.b",
          "Section": "Requirement 1: Install and maintain a firewall configuration to protect cardholder data",
          "SubSection": "1.2.2 Secure and synchronize router configuration files"
        }
      ]
    },
    {
      "Id": "1.2.3",
      "Name": "Install perimeter firewalls between all wireless networks and the cardholder data environment, and configure these firewalls to deny or, if traffic is necessary for business purposes, permit only authorized traffic between the wireless environment and the cardholder data environment",
      "Description": "The known (or unknown) implementation and exploitation of wireless technology within a network is a common path for malicious individuals to gain access to the network and cardholder data. If a wireless device or network is installed without the entity's knowledge, a malicious individual could easily and “invisibly” enter the network. If firewalls do not restrict access from wireless networks into the CDE, malicious individuals that gain unauthorized access to the wireless network can easily connect to the CDE and compromise account information. Firewalls must be installed between all wireless networks and the CDE, regardless of the purpose of the environment to which the wireless network is connected. This may include, but is not limited to, corporate networks, retail stores, guest networks, warehouse environments, etc.",
      "Checks": [
        "ec2_networkacl_allow_ingress_tcp_port_22",
        "ec2_securitygroup_allow_ingress_from_internet_to_all_ports",
        "ec2_networkacl_allow_ingress_tcp_port_3389",
        "sagemaker_notebook_instance_without_direct_internet_access_configured"
      ],
      "Attributes": [
        {
          "ItemId": "1.2.3",
          "Section": "Requirement 1: Install and maintain a firewall configuration to protect cardholder data",
          "SubSection": "1.2 Examine firewall and router configurations and perform the following to verify that connections are restricted between untrusted networks and system components in the cardholder data environment"
        }
      ]
    },
    {
      "Id": "1.2.3.b",
      "Name": "Verify that the firewalls deny or, if traffic is necessary for business purposes, permit only authorized traffic between the wireless environment and the cardholder data environment",
      "Description": "The known (or unknown) implementation and exploitation of wireless technology within a network is a common path for malicious individuals to gain access to the network and cardholder data. If a wireless device or network is installed without the entity's knowledge, a malicious individual could easily and “invisibly” enter the network. If firewalls do not restrict access from wireless networks into the CDE, malicious individuals that gain unauthorized access to the wireless network can easily connect to the CDE and compromise account information. Firewalls must be installed between all wireless networks and the CDE, regardless of the purpose of the environment to which the wireless network is connected. This may include, but is not limited to, corporate networks, retail stores, guest networks, warehouse environments, etc.",
      "Checks": [
        "ec2_networkacl_allow_ingress_tcp_port_22",
        "ec2_securitygroup_allow_ingress_from_internet_to_all_ports",
        "ec2_networkacl_allow_ingress_tcp_port_3389",
        "sagemaker_notebook_instance_without_direct_internet_access_configured"
      ],
      "Attributes": [
        {
          "ItemId": "1.2.3.b",
          "Section": "Requirement 1: Install and maintain a firewall configuration to protect cardholder data",
          "SubSection": "1.2.3 Install perimeter firewalls between all wireless networks and the cardholder data environment, and configure these firewalls to deny or, if traffic is necessary for business purposes, permit only authorized traffic between the wireless environment and the cardholder data environment"
        }
      ]
    },
    {
      "Id": "1.3",
      "Name": "Examine firewall and router configurations—including but not limited to the choke router at the Internet, the DMZ router and firewall, the DMZ cardholder segment, the perimeter router, and the internal cardholder network segment—and perform the following to determine that there is no direct access between the Internet and system components in the internal cardholder network segment",
      "Description": "While there may be legitimate reasons for untrusted connections to be permitted to DMZ systems (e.g., to allow public access to a web server), such connections should never be granted to systems in the internal network. A firewall's intent is to manage and control all connections between public systems and internal systems, especially those that store, process or transmit cardholder data. If direct access is allowed between public systems and the CDE, the protections offered by the firewall are bypassed, and system components storing cardholder data may be exposed to compromise.",
      "Checks": [
        "ec2_ebs_public_snapshot",
        "rds_instance_no_public_access",
        "eks_endpoints_not_publicly_accessible",
        "vpc_endpoint_for_ec2_enabled",
        "s3_account_level_public_access_blocks",
        "awslambda_function_not_publicly_accessible",
        "emr_cluster_master_nodes_no_public_ip",
        "ec2_instance_public_ip",
        "rds_snapshots_public_access",
        "opensearch_service_domains_not_publicly_accessible",
        "redshift_cluster_public_access",
        "awslambda_function_inside_vpc",
        "dms_instance_no_public_access",
        "sagemaker_notebook_instance_without_direct_internet_access_configured",
        "s3_bucket_policy_public_write_access",
        "ec2_securitygroup_allow_ingress_from_internet_to_tcp_port_22",
        "s3_bucket_public_write_acl",
        "ec2_securitygroup_allow_ingress_from_internet_to_all_ports",
        "ec2_networkacl_allow_ingress_tcp_port_22",
        "ec2_networkacl_allow_ingress_tcp_port_3389",
        "ec2_securitygroup_default_restrict_traffic"
      ],
      "Attributes": [
        {
          "ItemId": "1.3",
          "Section": "Requirement 1: Install and maintain a firewall configuration to protect cardholder data",
          "SubSection": "Requirement 1: Install and maintain a firewall configuration to protect cardholder data"
        }
      ]
    },
    {
      "Id": "1.3.1",
      "Name": "Implement a DMZ to limit inbound traffic to only system components that provide authorized publicly accessible services, protocols, and ports",
      "Description": "The DMZ is that part of the network that manages connections between the Internet (or other untrusted networks), and services that an organization needs to have available to the public (like a web server). This functionality is intended to prevent malicious individuals from accessing the organization's internal network from the Internet, or from using services, protocols, or ports in an unauthorized manner. The set of controls will examine firewall and router configurations to verify that a DMZ is implemented to limit inbound traffic to only system components that provide authorized publicly accessible services, protocols, and ports.",
      "Checks": [
        "ec2_ebs_public_snapshot",
        "rds_instance_no_public_access",
        "awslambda_function_not_publicly_accessible",
        "rds_snapshots_public_access",
        "opensearch_service_domains_not_publicly_accessible",
        "redshift_cluster_public_access",
        "s3_bucket_policy_public_write_access",
        "awslambda_function_inside_vpc",
        "ec2_securitygroup_allow_ingress_from_internet_to_tcp_port_22",
        "s3_bucket_public_write_acl",
        "dms_instance_no_public_access",
        "sagemaker_notebook_instance_without_direct_internet_access_configured"
      ],
      "Attributes": [
        {
          "ItemId": "1.3.1",
          "Section": "Requirement 1: Install and maintain a firewall configuration to protect cardholder data",
          "SubSection": "1.3 Examine firewall and router configurations—including but not limited to the choke router at the Internet, the DMZ router and firewall, the DMZ cardholder segment, the perimeter router, and the internal cardholder network segment—and perform the following to determine that there is no direct access between the Internet and system components in the internal cardholder network segment"
        }
      ]
    },
    {
      "Id": "1.3.2",
      "Name": "Limit inbound Internet traffic to IP addresses within the DMZ",
      "Description": "The DMZ is that part of the network that manages connections between the Internet (or other untrusted networks), and services that an organization needs to have available to the public (like a web server). This functionality is intended to prevent malicious individuals from accessing the organization's internal network from the Internet, or from using services, protocols, or ports in an unauthorized manner. The set of controls will limit inbound Internet traffic to IP addresses within the DMZ.",
      "Checks": [
        "rds_instance_no_public_access",
        "ec2_securitygroup_allow_ingress_from_internet_to_all_ports",
        "ec2_networkacl_allow_ingress_tcp_port_22",
        "awslambda_function_not_publicly_accessible",
        "ec2_networkacl_allow_ingress_tcp_port_3389",
        "redshift_cluster_public_access",
        "opensearch_service_domains_not_publicly_accessible",
        "s3_bucket_policy_public_write_access",
        "awslambda_function_inside_vpc",
        "s3_bucket_public_write_acl",
        "dms_instance_no_public_access",
        "sagemaker_notebook_instance_without_direct_internet_access_configured"
      ],
      "Attributes": [
        {
          "ItemId": "1.3.2",
          "Section": "Requirement 1: Install and maintain a firewall configuration to protect cardholder data",
          "SubSection": "1.3 Examine firewall and router configurations—including but not limited to the choke router at the Internet, the DMZ router and firewall, the DMZ cardholder segment, the perimeter router, and the internal cardholder network segment—and perform the following to determine that there is no direct access between the Internet and system components in the internal cardholder network segment"
        }
      ]
    },
    {
      "Id": "1.3.3",
      "Name": "Examine firewall and router configurations to verify that anti-spoofing measures are implemented, for example internal addresses cannot pass from the Internet into the DMZ",
      "Description": "Normally a packet contains the IP address of the computer that originally sent it so other computers in the network know where the packet came from. Malicious individuals will often try to spoof (or imitate) the sending IP address so that the target system believes the packet is from a trusted source. Filtering packets coming into the network helps to, among other things, ensure packets are not “spoofed” to look like they are coming from an organization's own internal network.",
      "Checks": [],
      "Attributes": [
        {
          "ItemId": "1.3.3",
          "Section": "Requirement 1: Install and maintain a firewall configuration to protect cardholder data",
          "SubSection": "1.3 Examine firewall and router configurations—including but not limited to the choke router at the Internet, the DMZ router and firewall, the DMZ cardholder segment, the perimeter router, and the internal cardholder network segment—and perform the following to determine that there is no direct access between the Internet and system components in the internal cardholder network segment"
        }
      ]
    },
    {
      "Id": "1.3.4",
      "Name": "Do not allow unauthorized outbound traffic from the cardholder data environment to the Internet",
      "Description": "All traffic outbound from the cardholder data environment should be evaluated to ensure that it follows established, authorized rules. Connections should be inspected to restrict traffic to only authorized communications (for example by restricting source/destination addresses/ports, and/or blocking of content). The set of controls will examine firewall and router configurations to verify that outbound traffic from the cardholder data environment to the Internet is explicitly authorized.",
      "Checks": [
        "rds_instance_no_public_access",
        "awslambda_function_not_publicly_accessible",
        "redshift_cluster_public_access",
        "opensearch_service_domains_not_publicly_accessible",
        "s3_bucket_policy_public_write_access",
        "awslambda_function_inside_vpc",
        "s3_bucket_public_write_acl",
        "dms_instance_no_public_access",
        "sagemaker_notebook_instance_without_direct_internet_access_configured"
      ],
      "Attributes": [
        {
          "ItemId": "1.3.4",
          "Section": "Requirement 1: Install and maintain a firewall configuration to protect cardholder data",
          "SubSection": "1.3 Examine firewall and router configurations—including but not limited to the choke router at the Internet, the DMZ router and firewall, the DMZ cardholder segment, the perimeter router, and the internal cardholder network segment—and perform the following to determine that there is no direct access between the Internet and system components in the internal cardholder network segment"
        }
      ]
    },
    {
      "Id": "1.3.5",
      "Name": "Examine firewall and router configurations to verify that the firewall permits only established connections into the internal network and denies any inbound connections not associated with a previously established session",
      "Description": "A firewall that maintains the `state` (or the status) for each connection through the firewall knows whether an apparent response to a previous connection is actually a valid, authorized response (since it retains each connection's status) or is malicious traffic trying to trick the firewall into allowing the connection.",
      "Checks": [
        "ec2_securitygroup_default_restrict_traffic",
        "ec2_securitygroup_allow_ingress_from_internet_to_all_ports"
      ],
      "Attributes": [
        {
          "ItemId": "1.3.5",
          "Section": "Requirement 1: Install and maintain a firewall configuration to protect cardholder data",
          "SubSection": "1.3 Examine firewall and router configurations—including but not limited to the choke router at the Internet, the DMZ router and firewall, the DMZ cardholder segment, the perimeter router, and the internal cardholder network segment—and perform the following to determine that there is no direct access between the Internet and system components in the internal cardholder network segment"
        }
      ]
    },
    {
      "Id": "1.3.6",
      "Name": "Examine firewall and router configurations to verify that system components that store cardholder data are on an internal network zone, segregated from the DMZ and other untrusted networks",
      "Description": "If cardholder data is located within the DMZ, it is easier for an external attacker to access this information, since there are fewer layers to penetrate. Securing system components that store cardholder data (such as a database) in an internal network zone that is segregated from the DMZ and other untrusted networks by a firewall can prevent unauthorized network traffic from reaching the system component.",
      "Checks": [
        "rds_instance_no_public_access",
        "rds_snapshots_public_access",
        "redshift_cluster_public_access",
        "opensearch_service_domains_not_publicly_accessible",
        "s3_bucket_policy_public_write_access",
        "s3_bucket_public_write_acl",
        "dms_instance_no_public_access",
        "sagemaker_notebook_instance_without_direct_internet_access_configured"
      ],
      "Attributes": [
        {
          "ItemId": "1.3.6",
          "Section": "Requirement 1: Install and maintain a firewall configuration to protect cardholder data",
          "SubSection": "1.3 Examine firewall and router configurations—including but not limited to the choke router at the Internet, the DMZ router and firewall, the DMZ cardholder segment, the perimeter router, and the internal cardholder network segment—and perform the following to determine that there is no direct access between the Internet and system components in the internal cardholder network segment"
        }
      ]
    },
    {
      "Id": "2.1",
      "Name": "Always change vendor-supplied defaults and remove or disable unnecessary default accounts before installing a system on the network",
      "Description": "This applies to ALL default passwords, including but not limited to those used by operating systems, software that provides security services, application and system accounts, point-of-sale (POS) terminals, payment applications, Simple Network Management Protocol (SNMP) community strings, etc. Malicious individuals (external and internal to an organization) often use vendor default settings, account names, and passwords to compromise operating system software, applications, and the systems on which they are installed. Because these default settings are often published and are well known in hacker communities, changing these settings will leave systems less vulnerable to attack. Even if a default account is not intended to be used, changing the default password to a strong unique password and then disabling the account will prevent a malicious individual from re-enabling the account and gaining access with the default password.",
      "Checks": [
        "rds_cluster_default_admin",
        "rds_instance_default_admin"
      ],
      "Attributes": [
        {
          "ItemId": "2.1",
          "Section": "Requirement 2: Do not use vendor-supplied defaults for system passwords and other security parameters",
          "SubSection": "Requirement 2: Do not use vendor-supplied defaults for system passwords and other security parameters"
        }
      ]
    },
    {
      "Id": "2.1.b",
      "Name": "For the sample of system components, verify that all unnecessary default accounts (including accounts used by operating systems, security software, applications, systems, POS terminals, SNMP, etc.) are removed or disabled",
      "Description": "Malicious individuals (external and internal to an organization) often use vendor default settings, account names, and passwords to compromise operating system software, applications, and the systems on which they are installed. Because these default settings are often published and are well known in hacker communities, changing these settings will leave systems less vulnerable to attack. Even if a default account is not intended to be used, changing the default password to a strong unique password and then disabling the account will prevent a malicious individual from re-enabling the account and gaining access with the default password.",
      "Checks": [
        "rds_cluster_default_admin",
        "rds_instance_default_admin"
      ],
      "Attributes": [
        {
          "ItemId": "2.1.b",
          "Section": "Requirement 2: Do not use vendor-supplied defaults for system passwords and other security parameters",
          "SubSection": "2.1 Always change vendor-supplied defaults and remove or disable unnecessary default accounts before installing a system on the network"
        }
      ]
    },
    {
      "Id": "2.2",
      "Name": "Develop configuration standards for all system components",
      "Description": "Assure that these standards address all known security vulnerabilities and are consistent with industry-accepted system hardening standards. Sources of industry-accepted system hardening standards may include, but are not limited to Center for Internet Security (CIS), International Organization for Standardization (ISO), SysAdmin Audit Network Security (SANS) Institute and National Institute of Standards Technology (NIST). There are known weaknesses with many operating systems, databases, and enterprise applications, and there are also known ways to configure these systems to fix security vulnerabilities. To help those that are not security experts, a number of security organizations have established system-hardening guidelines and recommendations, which advise how to correct these weaknesses. Examples of sources for guidance on configuration standards include, but are not limited to: www.nist.gov, www.sans.org, and www.cisecurity.org, www.iso.org, and product vendors. System configuration standards must be kept up to date to ensure that newly identified weaknesses are corrected prior to a system being installed on the network.",
      "Checks": [
        "s3_bucket_cross_region_replication",
        "ec2_ebs_public_snapshot",
        "rds_instance_no_public_access",
        "eks_endpoints_not_publicly_accessible",
        "vpc_endpoint_for_ec2_enabled",
        "s3_account_level_public_access_blocks",
        "awslambda_function_not_publicly_accessible",
        "emr_cluster_master_nodes_no_public_ip",
        "ec2_instance_public_ip",
        "rds_snapshots_public_access",
        "opensearch_service_domains_not_publicly_accessible",
        "redshift_cluster_public_access",
        "awslambda_function_inside_vpc",
        "ec2_securitygroup_allow_ingress_from_internet_to_tcp_port_22",
        "dms_instance_no_public_access",
        "sagemaker_notebook_instance_without_direct_internet_access_configured",
        "ssm_managed_compliant_patching",
        "rds_cluster_default_admin",
        "rds_instance_default_admin"
      ],
      "Attributes": [
        {
          "ItemId": "2.2",
          "Section": "Requirement 2: Do not use vendor-supplied defaults for system passwords and other security parameters",
          "SubSection": "Requirement 2: Do not use vendor-supplied defaults for system passwords and other security parameters"
        }
      ]
    },
    {
      "Id": "2.2.2",
      "Name": "Enable only necessary services, protocols, daemons, etc., as required for the function of the system",
      "Description": "As stated in Requirement 1.1.6, there are many protocols that a business may need (or have enabled by default) that are commonly used by malicious individuals to compromise a network. Including this requirement as part of an organization's configuration standards and related processes ensures that only the necessary services and protocols are enabled.",
      "Checks": [
        "ec2_ebs_public_snapshot",
        "rds_instance_no_public_access",
        "eks_endpoints_not_publicly_accessible",
        "vpc_endpoint_for_ec2_enabled",
        "s3_account_level_public_access_blocks",
        "awslambda_function_not_publicly_accessible",
        "emr_cluster_master_nodes_no_public_ip",
        "ec2_instance_public_ip",
        "rds_snapshots_public_access",
        "opensearch_service_domains_not_publicly_accessible",
        "redshift_cluster_public_access",
        "awslambda_function_inside_vpc",
        "ec2_securitygroup_allow_ingress_from_internet_to_tcp_port_22",
        "dms_instance_no_public_access",
        "sagemaker_notebook_instance_without_direct_internet_access_configured"
      ],
      "Attributes": [
        {
          "ItemId": "2.2.2",
          "Section": "Requirement 2: Do not use vendor-supplied defaults for system passwords and other security parameters",
          "SubSection": "2.2 Develop configuration standards for all system components"
        }
      ]
    },
    {
      "Id": "2.2.4",
      "Name": "Configure system security parameters to prevent misuse",
      "Description": "System configuration standards and related processes should specifically address security settings and parameters that have known security implications for each type of system in use. In order for systems to be configured securely, personnel responsible for configuration and/or administering systems must be knowledgeable in the specific security parameters and settings that apply to the system.",
      "Checks": [
        "ssm_managed_compliant_patching"
      ],
      "Attributes": [
        {
          "ItemId": "2.2.4",
          "Section": "Requirement 2: Do not use vendor-supplied defaults for system passwords and other security parameters",
          "SubSection": "2.2 Develop configuration standards for all system components"
        }
      ]
    },
    {
      "Id": "2.2.5",
      "Name": "Remove all unnecessary functionality, such as scripts, drivers, features, subsystems, file systems, and unnecessary web servers",
      "Description": "Unnecessary functions can provide additional opportunities for malicious individuals to gain access to a system. By removing unnecessary functionality, organizations can focus on securing the functions that are required and reduce the risk that unknown functions will be exploited. Including this in server-hardening standards and processes addresses the specific security implications associated with unnecessary functions (for example, by removing/disabling FTP or the web server if the server will not be performing those functions).",
      "Checks": [
        "ssm_managed_compliant_patching"
      ],
      "Attributes": [
        {
          "ItemId": "2.2.5",
          "Section": "Requirement 2: Do not use vendor-supplied defaults for system passwords and other security parameters",
          "SubSection": "2.2 Develop configuration standards for all system components"
        }
      ]
    },
    {
      "Id": "2.2.5.b",
      "Name": "Examine the documentation and security parameters to verify enabled functions are documented and support secure configuration",
      "Description": "Unnecessary functions can provide additional opportunities for malicious individuals to gain access to a system. By removing unnecessary functionality, organizations can focus on securing the functions that are required and reduce the risk that unknown functions will be exploited. Including this in server-hardening standards and processes addresses the specific security implications associated with unnecessary functions (for example, by removing/disabling FTP or the web server if the server will not be performing those functions).",
      "Checks": [
        "ssm_managed_compliant_patching"
      ],
      "Attributes": [
        {
          "ItemId": "2.2.5.b",
          "Section": "Requirement 2: Do not use vendor-supplied defaults for system passwords and other security parameters",
          "SubSection": "2.2.5 Remove all unnecessary functionality, such as scripts, drivers, features, subsystems, file systems, and unnecessary web servers"
        }
      ]
    },
    {
      "Id": "2.2.a",
      "Name": "Examine the organization's system configuration standards for all types of system components and verify the system configuration standards are consistent with industry-accepted hardening standards",
      "Description": "There are known weaknesses with many operating systems, databases, and enterprise applications, and there are also known ways to configure these systems to fix security vulnerabilities. To help those that are not security experts, a number of security organizations have established system-hardening guidelines and recommendations, which advise how to correct these weaknesses. Examples of sources for guidance on configuration standards include, but are not limited to: www.nist.gov, www.sans.org, and www.cisecurity.org, www.iso.org, and product vendors. System configuration standards must be kept up to date to ensure that newly identified weaknesses are corrected prior to a system being installed on the network.",
      "Checks": [
        "rds_cluster_default_admin",
        "rds_instance_default_admin"
      ],
      "Attributes": [
        {
          "ItemId": "2.2.a",
          "Section": "Requirement 2: Do not use vendor-supplied defaults for system passwords and other security parameters",
          "SubSection": "2.2 Develop configuration standards for all system components"
        }
      ]
    },
    {
      "Id": "2.2.d",
      "Name": "Verify that system configuration standards include the procedures like changing of all vendor-supplied defaults and elimination of unnecessary default accounts etc. for all types of system components",
      "Description": "System configuration standards include the following procedures for all types of system components: changing of all vendor-supplied defaults and elimination of unnecessary default accounts, implementing only one primary function per server to prevent functions that require different security levels from co-existing on the same server, enabling only necessary services, protocols, daemons, etc., as required for the function of the system, implementing additional security features for any required services, protocols or daemons that are considered to be insecure, configuring system security parameters to prevent misuse and removing all unnecessary functionality, such as scripts, drivers, features, subsystems, file systems, and unnecessary web servers. There are known weaknesses with many operating systems, databases, and enterprise applications, and there are also known ways to configure these systems to fix security vulnerabilities. To help those that are not security experts, a number of security organizations have established system-hardening guidelines and recommendations, which advise how to correct these weaknesses. Examples of sources for guidance on configuration standards include, but are not limited to: www.nist.gov, www.sans.org, and www.cisecurity.org, www.iso.org, and product vendors. System configuration standards must be kept up to date to ensure that newly identified weaknesses are corrected prior to a system being installed on the network.",
      "Checks": [
        "rds_cluster_default_admin",
        "rds_instance_default_admin"
      ],
      "Attributes": [
        {
          "ItemId": "2.2.d",
          "Section": "Requirement 2: Do not use vendor-supplied defaults for system passwords and other security parameters",
          "SubSection": "2.2 Develop configuration standards for all system components"
        }
      ]
    },
    {
      "Id": "2.3",
      "Name": "Encrypt all non-console administrative access using strong cryptography",
      "Description": "If non-console (including remote) administration does not use secure authentication and encrypted communications, sensitive administrative or operational level information (like administrator's IDs and passwords) can be revealed to an eavesdropper. A malicious individual could use this information to access the network, become administrator, and steal data. Clear-text protocols (such as HTTP, telnet, etc.) do not encrypt traffic or logon details, making it easy for an eavesdropper to intercept this information. Select a sample of system components and verify that non-console administrative access is encrypted.",
      "Checks": [
        "acm_certificates_expiration_check",
        "elbv2_ssl_listeners",
        "elb_ssl_listeners",
        "cloudfront_distributions_using_deprecated_ssl_protocols"
      ],
      "Attributes": [
        {
          "ItemId": "2.3",
          "Section": "Requirement 2: Do not use vendor-supplied defaults for system passwords and other security parameters",
          "SubSection": "Requirement 2: Do not use vendor-supplied defaults for system passwords and other security parameters"
        }
      ]
    },
    {
      "Id": "2.4",
      "Name": "Maintain an inventory of system components that are in scope for PCI DSS",
      "Description": "Maintaining a current list of all system components will enable an organization to accurately and efficiently define the scope of their environment for implementing PCI DSS controls. Without an inventory, some system components could be forgotten, and be inadvertently excluded from the organization's configuration standards.",
      "Checks": [
        "config_recorder_all_regions_enabled",
        "ssm_managed_compliant_patching",
        "ec2_elastic_ip_unassigned"
      ],
      "Attributes": [
        {
          "ItemId": "2.4",
          "Section": "Requirement 2: Do not use vendor-supplied defaults for system passwords and other security parameters",
          "SubSection": "Requirement 2: Do not use vendor-supplied defaults for system passwords and other security parameters"
        }
      ]
    },
    {
      "Id": "2.4.a",
      "Name": "Examine system inventory to verify that a list of hardware and software components is maintained and includes a description of function/use for each",
      "Description": "Maintaining a current list of all system components will enable an organization to accurately and efficiently define the scope of their environment for implementing PCI DSS controls. Without an inventory, some system components could be forgotten, and be inadvertently excluded from the organization's configuration standards.",
      "Checks": [
        "config_recorder_all_regions_enabled"
      ],
      "Attributes": [
        {
          "ItemId": "2.4.a",
          "Section": "Requirement 2: Do not use vendor-supplied defaults for system passwords and other security parameters",
          "SubSection": "2.4 Maintain an inventory of system components that are in scope for PCI DSS"
        }
      ]
    },
    {
      "Id": "3.1",
      "Name": "Keep cardholder data storage to a minimum by implementing data retention and disposal policies, procedures and processes",
      "Description": "Procedures and processes should include at least the following for all cardholder data (CHD) storage: limiting data storage amount and retention time to that which is required for legal, regulatory, and/or business requirements, specific retention requirements for cardholder data, processes for secure deletion of data when no longer needed, a quarterly process for identifying and securely deleting stored cardholder data that exceeds defined retention. Identifying and deleting stored data that has exceeded its specified retention period prevents unnecessary retention of data that is no longer needed. This process may be automated or manual or a combination of both. For example, a programmatic procedure (automatic or manual) to locate and remove data and/or a manual review of data storage areas could be performed. Implementing secure deletion methods ensure that the data cannot be retrieved when it is no longer needed. Remember, if you don't need it, don't store it!",
      "Checks": [
        "s3_bucket_lifecycle_enabled",
        "ec2_ebs_volume_protected_by_backup_plan",
        "rds_instance_backup_enabled",
        "rds_instance_protected_by_backup_plan",
        "dynamodb_table_protected_by_backup_plan",
        "redshift_cluster_automated_snapshot",
        "elasticache_redis_cluster_backup_enabled",
        "dynamodb_tables_pitr_enabled",
        "s3_bucket_object_versioning",
        "s3_bucket_cross_region_replication"
      ],
      "Attributes": [
        {
          "ItemId": "3.1",
          "Section": "Requirement 3: Protect stored cardholder data",
          "SubSection": "Requirement 3: Protect stored cardholder data"
        }
      ]
    },
    {
      "Id": "3.1.a",
      "Name": "Examine the data retention and disposal policies, procedures and processes to verify they satisfy all the requirements for cardholder data (CHD) storage",
      "Description": "procedures and processes should they include the following for all cardholder data (CHD) storage: limiting data storage amount and retention time to that which is required for legal, regulatory, and/or business requirements, specific requirements for retention of cardholder data (for example, cardholder data needs to be held for X period for Y business reasons), processes for secure deletion of cardholder data when no longer needed for legal, regulatory, or business reasons and a quarterly process for identifying and securely deleting stored cardholder data that exceeds defined retention requirements. Identifying and deleting stored data that has exceeded its specified retention period prevents unnecessary retention of data that is no longer needed. This process may be automated or manual or a combination of both. For example, a programmatic procedure (automatic or manual) to locate and remove data and/or a manual review of data storage areas could be performed. Implementing secure deletion methods ensure that the data cannot be retrieved when it is no longer needed. Remember, if you don't need it, don't store it!",
      "Checks": [
        "s3_bucket_lifecycle_enabled"
      ],
      "Attributes": [
        {
          "ItemId": "3.1.a",
          "Section": "Requirement 3: Protect stored cardholder data",
          "SubSection": "3.1 Keep cardholder data storage to a minimum by implementing data retention and disposal policies, procedures and processes"
        }
      ]
    },
    {
      "Id": "3.1.c",
      "Name": "For a sample of system components that store cardholder data examine files and system records to verify that the data stored does not exceed the requirements defined in the data retention policy and observe the deletion mechanism to verify data is deleted securely",
      "Description": "Identifying and deleting stored data that has exceeded its specified retention period prevents unnecessary retention of data that is no longer needed. This process may be automated or manual or a combination of both. For example, a programmatic procedure (automatic or manual) to locate and remove data and/or a manual review of data storage areas could be performed. Implementing secure deletion methods ensure that the data cannot be retrieved when it is no longer needed. Remember, if you don't need it, don't store it!",
      "Checks": [
        "ec2_ebs_volume_protected_by_backup_plan",
        "rds_instance_backup_enabled",
        "rds_instance_protected_by_backup_plan",
        "dynamodb_table_protected_by_backup_plan",
        "redshift_cluster_automated_snapshot",
        "elasticache_redis_cluster_backup_enabled",
        "dynamodb_tables_pitr_enabled",
        "s3_bucket_object_versioning",
        "s3_bucket_cross_region_replication"
      ],
      "Attributes": [
        {
          "ItemId": "3.1.c",
          "Section": "Requirement 3: Protect stored cardholder data",
          "SubSection": "3.1 Keep cardholder data storage to a minimum by implementing data retention and disposal policies, procedures and processes"
        }
      ]
    },
    {
      "Id": "3.2",
      "Name": "Do not store sensitive authentication data after authorization (even if encrypted)",
      "Description": "If sensitive authentication data is received, render all data unrecoverable upon completion of the authorization process. It is permissible for issuers and companies that support issuing services to store sensitive authentication data if there is a business justification and the data is stored securely. Sensitive authentication data includes the data as cited in the following Requirements 3.2.1 through 3.2.3. Sensitive authentication data consists of full track data, card validation code or value, and PIN data. Storage of sensitive authentication data after authorization is prohibited! This data is very valuable to malicious individuals as it allows them to generate counterfeit payment cards and create fraudulent transactions. Entities that issue payment cards or that perform or support issuing services will often create and control sensitive authentication data as part of the issuing function. It is allowable for companies that perform, facilitate, or support issuing services to store sensitive authentication data ONLY IF they have a legitimate business need to store such data. It should be noted that all PCI DSS requirements apply to issuers, and the only exception for issuers and issuer processors is that sensitive authentication data may be retained if there is a legitimate reason to do so. A legitimate reason is one that is necessary for the performance of the function being provided for the issuer and not one of convenience. Any such data must be stored securely and in accordance with all PCI DSS and specific payment brand requirements.",
      "Checks": [
        "elb_logging_enabled",
        "elbv2_logging_enabled",
        "apigateway_restapi_logging_enabled",
        "cloudtrail_multi_region_enabled",
        "wafv2_web_acl_logging_enabled",
        "cloudtrail_cloudwatch_logging_enabled",
        "s3_bucket_lifecycle_enabled"
      ],
      "Attributes": [
        {
          "ItemId": "3.2",
          "Section": "Requirement 3: Protect stored cardholder data",
          "SubSection": "Requirement 3: Protect stored cardholder data"
        }
      ]
    },
    {
      "Id": "3.2.3",
      "Name": "Do not store the personal identification number (PIN) or the encrypted PIN block after authorization",
      "Description": "These values should be known only to the card owner or bank that issued the card. If this data is stolen, malicious individuals can execute fraudulent PIN-based debit transactions (for example, ATM withdrawals). For a sample of system components, examine data sources, including but not limited to the following and verify that PINs and encrypted PIN blocks are not stored after authorization: incoming transaction data, all logs (for example, transaction, history, debugging, error), history files, trace files, several database schemas, database contents",
      "Checks": [
        "elb_logging_enabled",
        "elbv2_logging_enabled",
        "apigateway_restapi_logging_enabled",
        "cloudtrail_multi_region_enabled",
        "wafv2_web_acl_logging_enabled",
        "cloudtrail_cloudwatch_logging_enabled"
      ],
      "Attributes": [
        {
          "ItemId": "3.2.3",
          "Section": "Requirement 3: Protect stored cardholder data",
          "SubSection": "3.2 Do not store sensitive authentication data after authorization (even if encrypted)"
        }
      ]
    },
    {
      "Id": "3.2.c",
      "Name": "For all other entities, if sensitive authentication data is received, review policies and procedures, and examine system configurations to verify the data is not retained after authorization",
      "Description": "Sensitive authentication data consists of full track data, card validation code or value, and PIN data. Storage of sensitive authentication data after authorization is prohibited! This data is very valuable to malicious individuals as it allows them to generate counterfeit payment cards and create fraudulent transactions. Entities that issue payment cards or that perform or support issuing services will often create and control sensitive authentication data as part of the issuing function. It is allowable for companies that perform, facilitate, or support issuing services to store sensitive authentication data ONLY IF they have a legitimate business need to store such data. It should be noted that all PCI DSS requirements apply to issuers, and the only exception for issuers and issuer processors is that sensitive authentication data may be retained if there is a legitimate reason to do so. A legitimate reason is one that is necessary for the performance of the function being provided for the issuer and not one of convenience. Any such data must be stored securely and in accordance with all PCI DSS and specific payment brand requirements.",
      "Checks": [
        "s3_bucket_lifecycle_enabled"
      ],
      "Attributes": [
        {
          "ItemId": "3.2.c",
          "Section": "Requirement 3: Protect stored cardholder data",
          "SubSection": "3.2 Do not store sensitive authentication data after authorization (even if encrypted)"
        }
      ]
    },
    {
      "Id": "3.4",
      "Name": "Render PAN unreadable anywhere it is stored (including on portable digital media, backup media, and in logs) by using approaches like one-way hashes based on strong cryptography, truncation etc",
      "Description": "The following approaches should be used to render PAN unreadable anywhere it is stored: One-way hashes based on strong cryptography, (hash must be of the entire PAN), truncation (hashing cannot be used to replace the truncated segment of PAN), index tokens and pads (pads must be securely stored) and strong cryptography with associated key-management processes and procedures. Note: It is a relatively trivial effort for a malicious individual to reconstruct original PAN data if they have access to both the truncated and hashed version of a PAN. Where hashed and truncated versions of the same PAN are present in an entity's environment, additional controls must be in place to ensure that the hashed and truncated versions cannot be correlated to reconstruct the original PAN. PANs stored in primary storage (databases, or flat files such as text files spreadsheets) as well as non-primary storage (backup, audit logs, exception or troubleshooting logs) must all be protected. One-way hash functions based on strong cryptography can be used to render cardholder data unreadable. Hash functions are appropriate when there is no need to retrieve the original number (one-way hashes are irreversible). It is recommended, but not currently a requirement, that an additional, random input value be added to the cardholder data prior to hashing to reduce the feasibility of an attacker comparing the data against (and deriving the PAN from) tables of pre- computed hash values. The intent of truncation is to permanently remove a segment of PAN data so that only a portion (generally not to exceed the first six and last four digits) of the PAN is stored. An index token is a cryptographic token that replaces the PAN based on a given index for an unpredictable value. A one-time pad is a system in which a randomly generated private key is used only once to encrypt a message that is then decrypted using a matching one-time pad and key. The intent of strong cryptography (as defined in the PCI DSS and PA-DSS Glossary of Terms, Abbreviations, and Acronyms) is that the encryption be based on an industry-tested and accepted algorithm (not a proprietary or `home- grown` algorithm) with strong cryptographic keys. By correlating hashed and truncated versions of a given PAN, a malicious individual may easily derive the original PAN value. Controls that prevent the correlation of this data will help ensure that the original PAN remains unreadable.",
      "Checks": [
        "dynamodb_table_encryption_enabled",
        "cloudtrail_kms_encryption_enabled",
        "sagemaker_notebook_instance_encryption_enabled",
        "cloudwatch_log_group_kms_encryption_enabled",
        "s3_bucket_kms_encryption",
        "eks_cluster_kms_cmk_encryption_in_secrets_enabled",
        "rds_snapshots_encrypted",
        "s3_bucket_default_encryption",
        "efs_encryption_at_rest_enabled",
        "ec2_ebs_default_encryption",
        "opensearch_service_domains_encryption_at_rest_enabled",
        "sns_topics_kms_encryption_at_rest_enabled",
        "dynamodb_accelerator_cluster_encryption_enabled",
        "dynamodb_tables_kms_cmk_encryption_enabled",
        "ec2_ebs_volume_encryption",
        "rds_instance_storage_encrypted",
        "redshift_cluster_audit_logging",
        "opensearch_service_domains_audit_logging_enabled",
        "elb_logging_enabled",
        "elbv2_logging_enabled",
        "apigateway_restapi_logging_enabled",
        "cloudtrail_multi_region_enabled",
        "wafv2_web_acl_logging_enabled",
        "cloudtrail_cloudwatch_logging_enabled"
      ],
      "Attributes": [
        {
          "ItemId": "3.4",
          "Section": "Requirement 3: Protect stored cardholder data",
          "SubSection": "Requirement 3: Protect stored cardholder data"
        }
      ]
    },
    {
      "Id": "3.4.1",
      "Name": "If disk encryption is used (rather than file- or column-level database encryption), logical access must be managed separately and independently of native operating system authentication and access control mechanisms (for example, by not using local user account databases or general network login credentials)",
      "Description": "Decryption keys must not be associated with user accounts. Note: This requirement applies in addition to all other PCI DSS encryption and key- management requirements. PANs stored in primary storage (databases, or flat files such as text files spreadsheets) as well as non-primary storage (backup, audit logs, exception or troubleshooting logs) must all be protected. One-way hash functions based on strong cryptography can be used to render cardholder data unreadable. Hash functions are appropriate when there is no need to retrieve the original number (one-way hashes are irreversible). It is recommended, but not currently a requirement, that an additional, random input value be added to the cardholder data prior to hashing to reduce the feasibility of an attacker comparing the data against (and deriving the PAN from) tables of pre- computed hash values. The intent of truncation is to permanently remove a segment of PAN data so that only a portion (generally not to exceed the first six and last four digits) of the PAN is stored. An index token is a cryptographic token that replaces the PAN based on a given index for an unpredictable value. A one-time pad is a system in which a randomly generated private key is used only once to encrypt a message that is then decrypted using a matching one-time pad and key. The intent of strong cryptography (as defined in the PCI DSS and PA-DSS Glossary of Terms, Abbreviations, and Acronyms) is that the encryption be based on an industry-tested and accepted algorithm (not a proprietary or `home-grown` algorithm) with strong cryptographic keys. By correlating hashed and truncated versions of a given PAN, a malicious individual may easily derive the original PAN value. Controls that prevent the correlation of this data will help ensure that the original PAN remains unreadable.",
      "Checks": [
        "dynamodb_table_encryption_enabled",
        "cloudtrail_kms_encryption_enabled",
        "sagemaker_notebook_instance_encryption_enabled",
        "cloudwatch_log_group_kms_encryption_enabled",
        "s3_bucket_kms_encryption",
        "eks_cluster_kms_cmk_encryption_in_secrets_enabled",
        "rds_snapshots_encrypted",
        "s3_bucket_default_encryption",
        "efs_encryption_at_rest_enabled",
        "ec2_ebs_default_encryption",
        "opensearch_service_domains_encryption_at_rest_enabled",
        "sns_topics_kms_encryption_at_rest_enabled",
        "dynamodb_accelerator_cluster_encryption_enabled",
        "dynamodb_tables_kms_cmk_encryption_enabled",
        "ec2_ebs_volume_encryption",
        "rds_instance_storage_encrypted",
        "redshift_cluster_audit_logging"
      ],
      "Attributes": [
        {
          "ItemId": "3.4.1",
          "Section": "Requirement 3: Protect stored cardholder data",
          "SubSection": "3.4 Render PAN unreadable anywhere it is stored (including on portable digital media, backup media, and in logs) by using approaches like one-way hashes based on strong cryptography, truncation etc"
        }
      ]
    },
    {
      "Id": "3.4.1.a",
      "Name": "If disk encryption is used, inspect the configuration and observe the authentication process to verify that logical access to encrypted file systems is implemented via a mechanism that is separate from the native operating system's authentication mechanism (for example, not using local user account databases or general network login credentials)",
      "Description": "The intent of this requirement is to address the acceptability of disk-level encryption for rendering cardholder data unreadable. Disk-level encryption encrypts the entire disk/partition on a computer and automatically decrypts the information when an authorized user requests it. Many disk- encryption solutions intercept operating system read/write operations and carry out the appropriate cryptographic transformations without any special action by the user other than supplying a password or pass phrase upon system startup or at the beginning of a session. Based on these characteristics of disk-level encryption, to be compliant with this requirement, the method cannot: 1) Use the same user account authenticator as the operating system, or 2) Use a decryption key that is associated with or derived from the system's local user account database or general network login credentials. Full disk encryption helps to protect data in the event of physical loss of a disk and therefore may be appropriate for portable devices that store cardholder data.",
      "Checks": [
        "dynamodb_table_encryption_enabled",
        "cloudtrail_kms_encryption_enabled",
        "sagemaker_notebook_instance_encryption_enabled",
        "cloudwatch_log_group_kms_encryption_enabled",
        "s3_bucket_kms_encryption",
        "eks_cluster_kms_cmk_encryption_in_secrets_enabled",
        "rds_snapshots_encrypted",
        "s3_bucket_default_encryption",
        "efs_encryption_at_rest_enabled",
        "ec2_ebs_default_encryption",
        "opensearch_service_domains_encryption_at_rest_enabled",
        "sns_topics_kms_encryption_at_rest_enabled",
        "dynamodb_accelerator_cluster_encryption_enabled",
        "dynamodb_tables_kms_cmk_encryption_enabled",
        "ec2_ebs_volume_encryption",
        "rds_instance_storage_encrypted",
        "redshift_cluster_audit_logging"
      ],
      "Attributes": [
        {
          "ItemId": "3.4.1.a",
          "Section": "Requirement 3: Protect stored cardholder data",
          "SubSection": "3.4.1 If disk encryption is used (rather than file- or column-level database encryption), logical access must be managed separately and independently of native operating system authentication and access control mechanisms (for example, by not using local user account databases or general network login credentials)"
        }
      ]
    },
    {
      "Id": "3.4.1.c",
      "Name": "Examine the configurations and observe the processes to verify that cardholder data on removable media is encrypted wherever stored",
      "Description": "Note: If disk encryption is not used to encrypt removable media, the data stored on this media will need to be rendered unreadable through some other method. The intent of this requirement is to address the acceptability of disk-level encryption for rendering cardholder data unreadable. Disk-level encryption encrypts the entire disk/partition on a computer and automatically decrypts the information when an authorized user requests it. Many disk- encryption solutions intercept operating system read/write operations and carry out the appropriate cryptographic transformations without any special action by the user other than supplying a password or pass phrase upon system startup or at the beginning of a session. Based on these characteristics of disk-level encryption, to be compliant with this requirement, the method cannot: 1) Use the same user account authenticator as the operating system, or 2) Use a decryption key that is associated with or derived from the system's local user account database or general network login credentials. Full disk encryption helps to protect data in the event of physical loss of a disk and therefore may be appropriate for portable devices that store cardholder data.",
      "Checks": [
        "dynamodb_table_encryption_enabled",
        "cloudtrail_kms_encryption_enabled",
        "sagemaker_notebook_instance_encryption_enabled",
        "cloudwatch_log_group_kms_encryption_enabled",
        "s3_bucket_kms_encryption",
        "eks_cluster_kms_cmk_encryption_in_secrets_enabled",
        "rds_snapshots_encrypted",
        "s3_bucket_default_encryption",
        "efs_encryption_at_rest_enabled",
        "ec2_ebs_default_encryption",
        "opensearch_service_domains_encryption_at_rest_enabled",
        "sns_topics_kms_encryption_at_rest_enabled",
        "dynamodb_accelerator_cluster_encryption_enabled",
        "dynamodb_tables_kms_cmk_encryption_enabled",
        "ec2_ebs_volume_encryption",
        "rds_instance_storage_encrypted",
        "redshift_cluster_audit_logging"
      ],
      "Attributes": [
        {
          "ItemId": "3.4.1.c",
          "Section": "Requirement 3: Protect stored cardholder data",
          "SubSection": "3.4.1 If disk encryption is used (rather than file- or column-level database encryption), logical access must be managed separately and independently of native operating system authentication and access control mechanisms (for example, by not using local user account databases or general network login credentials)"
        }
      ]
    },
    {
      "Id": "3.4.a",
      "Name": "Examine documentation about the system used to protect the PAN, including the vendor, type of system/process, and the encryption algorithms (if applicable) to verify that the PAN is rendered unreadable using methods like truncation,one-way hashes based on strong cryptography etc",
      "Description": "Verify documentation about the system used to protect the PAN, including the vendor, type of system/process, and the encryption algorithms (if applicable) to verify that the PAN is rendered unreadable using any of the following methods: One-way hashes based on strong cryptography, truncation, index tokens and pads with the pads being securely stored, strong cryptography, with associated key-management processes and procedures. PANs stored in primary storage (databases, or flat files such as text files spreadsheets) as well as non-primary storage (backup, audit logs, exception or troubleshooting logs) must all be protected. One-way hash functions based on strong cryptography can be used to render cardholder data unreadable. Hash functions are appropriate when there is no need to retrieve the original number (one-way hashes are irreversible). It is recommended, but not currently a requirement, that an additional, random input value be added to the cardholder data prior to hashing to reduce the feasibility of an attacker comparing the data against (and deriving the PAN from) tables of pre- computed hash values. The intent of truncation is to permanently remove a segment of PAN data so that only a portion (generally not to exceed the first six and last four digits) of the PAN is stored. An index token is a cryptographic token that replaces the PAN based on a given index for an unpredictable value. A one-time pad is a system in which a randomly generated private key is used only once to encrypt a message that is then decrypted using a matching one-time pad and key. The intent of strong cryptography (as defined in the PCI DSS and PA-DSS Glossary of Terms, Abbreviations, and Acronyms) is that the encryption be based on an industry-tested and accepted algorithm (not a proprietary or `home-grown` algorithm) with strong cryptographic keys. By correlating hashed and truncated versions of a given PAN, a malicious individual may easily derive the original PAN value. Controls that prevent the correlation of this data will help ensure that the original PAN remains unreadable.",
      "Checks": [
        "dynamodb_table_encryption_enabled",
        "cloudtrail_kms_encryption_enabled",
        "sagemaker_notebook_instance_encryption_enabled",
        "cloudwatch_log_group_kms_encryption_enabled",
        "s3_bucket_kms_encryption",
        "opensearch_service_domains_audit_logging_enabled",
        "eks_cluster_kms_cmk_encryption_in_secrets_enabled",
        "rds_snapshots_encrypted",
        "dynamodb_tables_kms_cmk_encryption_enabled",
        "s3_bucket_default_encryption",
        "efs_encryption_at_rest_enabled",
        "ec2_ebs_default_encryption",
        "opensearch_service_domains_encryption_at_rest_enabled",
        "sns_topics_kms_encryption_at_rest_enabled",
        "dynamodb_accelerator_cluster_encryption_enabled",
        "ec2_ebs_volume_encryption",
        "rds_instance_storage_encrypted",
        "redshift_cluster_audit_logging"
      ],
      "Attributes": [
        {
          "ItemId": "3.4.a",
          "Section": "Requirement 3: Protect stored cardholder data",
          "SubSection": "3.4 Render PAN unreadable anywhere it is stored (including on portable digital media, backup media, and in logs) by using approaches like one-way hashes based on strong cryptography, truncation etc"
        }
      ]
    },
    {
      "Id": "3.4.b",
      "Name": "Examine several tables or files from a sample of data repositories to verify the PAN is rendered unreadable (that is, not stored in plain-text)",
      "Description": "PANs stored in primary storage (databases, or flat files such as text files spreadsheets) as well as non-primary storage (backup, audit logs, exception or troubleshooting logs) must all be protected. One-way hash functions based on strong cryptography can be used to render cardholder data unreadable. Hash functions are appropriate when there is no need to retrieve the original number (one-way hashes are irreversible). It is recommended, but not currently a requirement, that an additional, random input value be added to the cardholder data prior to hashing to reduce the feasibility of an attacker comparing the data against (and deriving the PAN from) tables of pre- computed hash values. The intent of truncation is to permanently remove a segment of PAN data so that only a portion (generally not to exceed the first six and last four digits) of the PAN is stored. An index token is a cryptographic token that replaces the PAN based on a given index for an unpredictable value. A one-time pad is a system in which a randomly generated private key is used only once to encrypt a message that is then decrypted using a matching one-time pad and key. The intent of strong cryptography (as defined in the PCI DSS and PA-DSS Glossary of Terms, Abbreviations, and Acronyms) is that the encryption be based on an industry-tested and accepted algorithm (not a proprietary or `home- grown` algorithm) with strong cryptographic keys. By correlating hashed and truncated versions of a given PAN, a malicious individual may easily derive the original PAN value. Controls that prevent the correlation of this data will help ensure that the original PAN remains unreadable.",
      "Checks": [
        "dynamodb_table_encryption_enabled",
        "cloudtrail_kms_encryption_enabled",
        "sagemaker_notebook_instance_encryption_enabled",
        "cloudwatch_log_group_kms_encryption_enabled",
        "s3_bucket_kms_encryption",
        "opensearch_service_domains_audit_logging_enabled",
        "eks_cluster_kms_cmk_encryption_in_secrets_enabled",
        "rds_snapshots_encrypted",
        "dynamodb_tables_kms_cmk_encryption_enabled",
        "s3_bucket_default_encryption",
        "efs_encryption_at_rest_enabled",
        "ec2_ebs_default_encryption",
        "opensearch_service_domains_encryption_at_rest_enabled",
        "sns_topics_kms_encryption_at_rest_enabled",
        "dynamodb_accelerator_cluster_encryption_enabled",
        "ec2_ebs_volume_encryption",
        "rds_instance_storage_encrypted",
        "redshift_cluster_audit_logging"
      ],
      "Attributes": [
        {
          "ItemId": "3.4.b",
          "Section": "Requirement 3: Protect stored cardholder data",
          "SubSection": "3.4 Render PAN unreadable anywhere it is stored (including on portable digital media, backup media, and in logs) by using approaches like one-way hashes based on strong cryptography, truncation etc"
        }
      ]
    },
    {
      "Id": "3.4.d",
      "Name": "Examine a sample of audit logs, including payment application logs, to confirm that PAN is rendered unreadable or is not present in the logs",
      "Description": "PANs stored in primary storage (databases, or flat files such as text files spreadsheets) as well as non-primary storage (backup, audit logs, exception or troubleshooting logs) must all be protected. One-way hash functions based on strong cryptography can be used to render cardholder data unreadable. Hash functions are appropriate when there is no need to retrieve the original number (one-way hashes are irreversible). It is recommended, but not currently a requirement, that an additional, random input value be added to the cardholder data prior to hashing to reduce the feasibility of an attacker comparing the data against (and deriving the PAN from) tables of pre- computed hash values. The intent of truncation is to permanently remove a segment of PAN data so that only a portion (generally not to exceed the first six and last four digits) of the PAN is stored. An index token is a cryptographic token that replaces the PAN based on a given index for an unpredictable value. A one-time pad is a system in which a randomly generated private key is used only once to encrypt a message that is then decrypted using a matching one-time pad and key. The intent of strong cryptography (as defined in the PCI DSS and PA-DSS Glossary of Terms, Abbreviations, and Acronyms) is that the encryption be based on an industry-tested and accepted algorithm (not a proprietary or 'home-grown` algorithm) with strong cryptographic keys. By correlating hashed and truncated versions of a given PAN, a malicious individual may easily derive the original PAN value. Controls that prevent the correlation of this data will help ensure that the original PAN remains unreadable.",
      "Checks": [
        "elb_logging_enabled",
        "elbv2_logging_enabled",
        "s3_bucket_kms_encryption",
        "cloudtrail_kms_encryption_enabled",
        "cloudwatch_log_group_kms_encryption_enabled",
        "apigateway_restapi_logging_enabled",
        "s3_bucket_default_encryption",
        "cloudtrail_multi_region_enabled",
        "wafv2_web_acl_logging_enabled",
        "cloudtrail_cloudwatch_logging_enabled"
      ],
      "Attributes": [
        {
          "ItemId": "3.4.d",
          "Section": "Requirement 3: Protect stored cardholder data",
          "SubSection": "3.4 Render PAN unreadable anywhere it is stored (including on portable digital media, backup media, and in logs) by using approaches like one-way hashes based on strong cryptography, truncation etc"
        }
      ]
    },
    {
      "Id": "3.5",
      "Name": "Document and implement procedures to protect keys used to secure stored cardholder data against disclosure and misuse",
      "Description": "Note: This requirement applies to keys used to encrypt stored cardholder data, and also applies to key-encrypting keys used to protect data-encrypting keys—such key- encrypting keys must be at least as strong as the data-encrypting key. Cryptographic keys must be strongly protected because those who obtain access will be able to decrypt data. Key-encrypting keys, if used, must be at least as strong as the data-encrypting key in order to ensure proper protection of the key that encrypts the data as well as the data encrypted with that key. The requirement to protect keys from disclosure and misuse applies to both data-encrypting keys and key-encrypting keys. Because one key- encrypting key may grant access to many data- encrypting keys, the key-encrypting keys require strong protection measures.",
      "Checks": [],
      "Attributes": [
        {
          "ItemId": "3.5",
          "Section": "Requirement 3: Protect stored cardholder data",
          "SubSection": "Requirement 3: Protect stored cardholder data"
        }
      ]
    },
    {
      "Id": "3.5.2",
      "Name": "Restrict access to cryptographic keys to the fewest number of custodians necessary",
      "Description": "There should be very few who have access to cryptographic keys (reducing the potential for rending cardholder data visible by unauthorized parties), usually only those who have key custodian responsibilities.",
      "Checks": [],
      "Attributes": [
        {
          "ItemId": "3.5.2",
          "Section": "Requirement 3: Protect stored cardholder data",
          "SubSection": "3.5 Document and implement procedures to protect keys used to secure stored cardholder data against disclosure and misuse"
        }
      ]
    },
    {
      "Id": "3.6",
      "Name": "Fully document and implement all key-management processes and procedures for cryptographic keys used for encryption of cardholder data",
      "Description": "Note: Numerous industry standards for key management are available from various resources including NIST, which can be found at http://csrc.nist.gov. The manner in which cryptographic keys are managed is a critical part of the continued security of the encryption solution. A good key- management process, whether it is manual or automated as part of the encryption product, is based on industry standards and addresses all key elements at 3.6.1 through 3.6.8. Providing guidance to customers on how to securely transmit, store and update cryptographic keys can help prevent keys from being mismanaged or disclosed to unauthorized entities. This requirement applies to keys used to encrypt stored cardholder data, and any respective key- encrypting keys. Note: Testing Procedure 3.6.a is an additional procedure that only applies if the entity being assessed is a service provider.",
      "Checks": [],
      "Attributes": [
        {
          "ItemId": "3.6",
          "Section": "Requirement 3: Protect stored cardholder data",
          "SubSection": "Requirement 3: Protect stored cardholder data"
        }
      ]
    },
    {
      "Id": "3.6.4",
      "Name": "Cryptographic key changes for keys that have reached the end of their cryptoperiod (for example, after a defined period of time has passed and/or after a certain amount of cipher-text has been produced by a given key), as defined by the associated application vendor or key owner, and based on industry best practices and guidelines",
      "Description": "A cryptoperiod is the time span during which a particular cryptographic key can be used for its defined purpose. Considerations for defining the cryptoperiod include, but are not limited to, the strength of the underlying algorithm, size or length of the key, risk of key compromise, and the sensitivity of the data being encrypted. Periodic changing of encryption keys when the keys have reached the end of their cryptoperiod is imperative to minimize the risk of someone's obtaining the encryption keys, and using them to decrypt data.",
      "Checks": [],
      "Attributes": [
        {
          "ItemId": "3.6.4",
          "Section": "Requirement 3: Protect stored cardholder data",
          "SubSection": "3.6 Fully document and implement all key-management processes and procedures for cryptographic keys used for encryption of cardholder data"
        }
      ]
    },
    {
      "Id": "3.6.4.a",
      "Name": "Verify that key-management procedures include a defined cryptoperiod for each key type in use and define a process for key changes at the end of the defined cryptoperiod(s)",
      "Description": "A cryptoperiod is the time span during which a particular cryptographic key can be used for its defined purpose. Considerations for defining the cryptoperiod include, but are not limited to, the strength of the underlying algorithm, size or length of the key, risk of key compromise, and the sensitivity of the data being encrypted. Periodic changing of encryption keys when the keys have reached the end of their cryptoperiod is imperative to minimize the risk of someone’s obtaining the encryption keys, and using them to decrypt data.",
      "Checks": [],
      "Attributes": [
        {
          "ItemId": "3.6.4.a",
          "Section": "Requirement 3: Protect stored cardholder data",
          "SubSection": "3.6.4 Cryptographic key changes for keys that have reached the end of their cryptoperiod (for example, after a defined period of time has passed and/or after a certain amount of cipher-text has been produced by a given key), as defined by the associated application vendor or key owner, and based on industry best practices and guidelines"
        }
      ]
    },
    {
      "Id": "4.1",
      "Name": "Use strong cryptography and security protocols to safeguard sensitive cardholder data during transmission over open, public networks",
      "Description": "Following should be used to safeguard sensitive cardholder data during transmission over open, public networks: only trusted keys and certificates are accepted, the protocol in use only supports secure versions or configurations and the encryption strength is appropriate for the encryption methodology in use. Examples of open, public networks include but are not limited to the Internet, wireless technologies, including 802.11 and Bluetooth, cellular technologies, for example, Global System for Mobile communications (GSM), Code division multiple access (CDMA), general Packet Radio Service (GPRS) and satellite communications. Sensitive information must be encrypted during transmission over public networks, because it is easy and common for a malicious individual to intercept and/or divert data while in transit. Secure transmission of cardholder data requires using trusted keys/certificates, a secure protocol for transport, and proper encryption strength to encrypt cardholder data. Connection requests from systems that do not support the required encryption strength, and that would result in an insecure connection, should not be accepted. Note that some protocol implementations (such as SSL, SSH v1.0, and early TLS) have known vulnerabilities that an attacker can use to gain control of the affected system. Whichever security protocol is used, ensure it is configured to use only secure versions and configurations to prevent use of an insecure connection—for example, by using only trusted certificates and supporting only strong encryption (not supporting weaker, insecure protocols or methods). Verifying that certificates are trusted (for example, have not expired and are issued from a trusted source) helps ensure the integrity of the secure connection. Generally, the web page URL should begin with `HTTPS` and/or the web browser display a padlock icon somewhere in the window of the browser. Many TLS certificate vendors also provide a highly visible verification seal— sometimes referred to as a “security seal,” `secure site seal,` or “secure trust seal”)—which may provide the ability to click on the seal to reveal information about the website. Refer to industry standards and best practices for information on strong cryptography and secure protocols (e.g., NIST SP 800-52 and SP 800-57, OWASP, etc.) Note: SSL/early TLS is not considered strong cryptography and may not be used as a security control, except by POS POI terminals that are verified as not being susceptible to known exploits and the termination points to which they connect as defined in Appendix A2.",
      "Checks": [
        "acm_certificates_expiration_check",
        "s3_bucket_enforces_ssl",
        "elbv2_ssl_listeners",
        "opensearch_service_domains_node_to_node_encryption_enabled",
        "elb_ssl_listeners",
        "opensearch_service_domains_https_communications_enforced",
        "cloudfront_distributions_using_deprecated_ssl_protocols",
        "cloudfront_distributions_origin_traffic_encrypted",
        "vpc_flow_logs_enabled"
      ],
      "Attributes": [
        {
          "ItemId": "4.1",
          "Section": "Requirement 4: Encrypt transmission of cardholder data across open, public networks",
          "SubSection": "Requirement 4: Encrypt transmission of cardholder data across open, public networks"
        }
      ]
    },
    {
      "Id": "4.1.a",
      "Name": "Identify all locations where cardholder data is transmitted or received over open, public networks",
      "Description": "Examine documented standards and compare to system configurations to verify the use of security protocols and strong cryptography for all locations. Sensitive information must be encrypted during transmission over public networks, because it is easy and common for a malicious individual to intercept and/or divert data while in transit. Secure transmission of cardholder data requires using trusted keys/certificates, a secure protocol for transport, and proper encryption strength to encrypt cardholder data. Connection requests from systems that do not support the required encryption strength, and that would result in an insecure connection, should not be accepted. Note that some protocol implementations (such as SSL, SSH v1.0, and early TLS) have known vulnerabilities that an attacker can use to gain control of the affected system. Whichever security protocol is used, ensure it is configured to use only secure versions and configurations to prevent use of an insecure connection—for example, by using only trusted certificates and supporting only strong encryption (not supporting weaker, insecure protocols or methods). Verifying that certificates are trusted (for example, have not expired and are issued from a trusted source) helps ensure the integrity of the secure connection. Generally, the web page URL should begin with `HTTPS` and/or the web browser display a padlock icon somewhere in the window of the browser. Many TLS certificate vendors also provide a highly visible verification seal— sometimes referred to as a “security seal,” `secure site seal,` or “secure trust seal”)—which may provide the ability to click on the seal to reveal information about the website. Refer to industry standards and best practices for information on strong cryptography and secure protocols (e.g., NIST SP 800-52 and SP 800-57, OWASP, etc.) Note: SSL/early TLS is not considered strong cryptography and may not be used as a security control, except by POS POI terminals that are verified as not being susceptible to known exploits and the termination points to which they connect as defined in Appendix A2.",
      "Checks": [
        "opensearch_service_domains_https_communications_enforced",
        "cloudfront_distributions_using_deprecated_ssl_protocols",
        "acm_certificates_expiration_check",
        "cloudfront_distributions_origin_traffic_encrypted",
        "s3_bucket_enforces_ssl",
        "elbv2_ssl_listeners",
        "opensearch_service_domains_node_to_node_encryption_enabled",
        "elb_ssl_listeners"
      ],
      "Attributes": [
        {
          "ItemId": "4.1.a",
          "Section": "Requirement 4: Encrypt transmission of cardholder data across open, public networks",
          "SubSection": "4.1 Use strong cryptography and security protocols to safeguard sensitive cardholder data during transmission over open, public networks"
        }
      ]
    },
    {
      "Id": "4.1.d",
      "Name": "Examine keys and certificates to verify that only trusted keys and/or certificates are accepted",
      "Description": "Sensitive information must be encrypted during transmission over public networks, because it is easy and common for a malicious individual to intercept and/or divert data while in transit. Secure transmission of cardholder data requires using trusted keys/certificates, a secure protocol for transport, and proper encryption strength to encrypt cardholder data. Connection requests from systems that do not support the required encryption strength, and that would result in an insecure connection, should not be accepted. Note that some protocol implementations (such as SSL, SSH v1.0, and early TLS) have known vulnerabilities that an attacker can use to gain control of the affected system. Whichever security protocol is used, ensure it is configured to use only secure versions and configurations to prevent use of an insecure connection—for example, by using only trusted certificates and supporting only strong encryption (not supporting weaker, insecure protocols or methods). Verifying that certificates are trusted (for example, have not expired and are issued from a trusted source) helps ensure the integrity of the secure connection. Generally, the web page URL should begin with `HTTPS` and/or the web browser display a padlock icon somewhere in the window of the browser. Many TLS certificate vendors also provide a highly visible verification seal— sometimes referred to as a “security seal,” `secure site seal,` or “secure trust seal”)—which may provide the ability to click on the seal to reveal information about the website. Refer to industry standards and best practices for information on strong cryptography and secure protocols (e.g., NIST SP 800-52 and SP 800-57, OWASP, etc.) Note: SSL/early TLS is not considered strong cryptography and may not be used as a security control, except by POS POI terminals that are verified as not being susceptible to known exploits and the termination points to which they connect as defined in Appendix A2.",
      "Checks": [
        "acm_certificates_expiration_check"
      ],
      "Attributes": [
        {
          "ItemId": "4.1.d",
          "Section": "Requirement 4: Encrypt transmission of cardholder data across open, public networks",
          "SubSection": "4.1 Use strong cryptography and security protocols to safeguard sensitive cardholder data during transmission over open, public networks"
        }
      ]
    },
    {
      "Id": "4.1.e",
      "Name": "Examine system configurations to verify that the protocol is implemented to use only secure configurations and does not support insecure versions or configurations",
      "Description": "Sensitive information must be encrypted during transmission over public networks, because it is easy and common for a malicious individual to intercept and/or divert data while in transit. Secure transmission of cardholder data requires using trusted keys/certificates, a secure protocol for transport, and proper encryption strength to encrypt cardholder data. Connection requests from systems that do not support the required encryption strength, and that would result in an insecure connection, should not be accepted. Note that some protocol implementations (such as SSL, SSH v1.0, and early TLS) have known vulnerabilities that an attacker can use to gain control of the affected system. Whichever security protocol is used, ensure it is configured to use only secure versions and configurations to prevent use of an insecure connection—for example, by using only trusted certificates and supporting only strong encryption (not supporting weaker, insecure protocols or methods). Verifying that certificates are trusted (for example, have not expired and are issued from a trusted source) helps ensure the integrity of the secure connection. Generally, the web page URL should begin with `HTTPS` and/or the web browser display a padlock icon somewhere in the window of the browser. Many TLS certificate vendors also provide a highly visible verification seal— sometimes referred to as a “security seal,” `secure site seal,` or “secure trust seal”)—which may provide the ability to click on the seal to reveal information about the website. Refer to industry standards and best practices for information on strong cryptography and secure protocols (e.g., NIST SP 800-52 and SP 800-57, OWASP, etc.) Note: SSL/early TLS is not considered strong cryptography and may not be used as a security control, except by POS POI terminals that are verified as not being susceptible to known exploits and the termination points to which they connect as defined in Appendix A2.",
      "Checks": [
        "vpc_flow_logs_enabled",
        "cloudfront_distributions_using_deprecated_ssl_protocols"
      ],
      "Attributes": [
        {
          "ItemId": "4.1.e",
          "Section": "Requirement 4: Encrypt transmission of cardholder data across open, public networks",
          "SubSection": "4.1 Use strong cryptography and security protocols to safeguard sensitive cardholder data during transmission over open, public networks"
        }
      ]
    },
    {
      "Id": "4.1.f",
      "Name": "Examine system configurations to verify that the proper encryption strength is implemented for the encryption methodology in use",
      "Description": "Sensitive information must be encrypted during transmission over public networks, because it is easy and common for a malicious individual to intercept and/or divert data while in transit. Secure transmission of cardholder data requires using trusted keys/certificates, a secure protocol for transport, and proper encryption strength to encrypt cardholder data. Connection requests from systems that do not support the required encryption strength, and that would result in an insecure connection, should not be accepted. Note that some protocol implementations (such as SSL, SSH v1.0, and early TLS) have known vulnerabilities that an attacker can use to gain control of the affected system. Whichever security protocol is used, ensure it is configured to use only secure versions and configurations to prevent use of an insecure connection—for example, by using only trusted certificates and supporting only strong encryption (not supporting weaker, insecure protocols or methods). Verifying that certificates are trusted (for example, have not expired and are issued from a trusted source) helps ensure the integrity of the secure connection. Generally, the web page URL should begin with `HTTPS` and/or the web browser display a padlock icon somewhere in the window of the browser. Many TLS certificate vendors also provide a highly visible verification seal— sometimes referred to as a “security seal,” `secure site seal,` or “secure trust seal”)—which may provide the ability to click on the seal to reveal information about the website. Refer to industry standards and best practices for information on strong cryptography and secure protocols (e.g., NIST SP 800-52 and SP 800-57, OWASP, etc.) Note: SSL/early TLS is not considered strong cryptography and may not be used as a security control, except by POS POI terminals that are verified as not being susceptible to known exploits and the termination points to which they connect as defined in Appendix A2.",
      "Checks": [
        "vpc_flow_logs_enabled",
        "cloudfront_distributions_using_deprecated_ssl_protocols"
      ],
      "Attributes": [
        {
          "ItemId": "4.1.f",
          "Section": "Requirement 4: Encrypt transmission of cardholder data across open, public networks",
          "SubSection": "4.1 Use strong cryptography and security protocols to safeguard sensitive cardholder data during transmission over open, public networks"
        }
      ]
    },
    {
      "Id": "4.1.g",
      "Name": "For TLS implementations, examine system configurations to verify that TLS is enabled whenever cardholder data is transmitted or received",
      "Description": "For example, for browser-based implementations “HTTPS” appears as the browser Universal Record Locator (URL) protocol, and cardholder data is only requested if “HTTPS” appears as part of the URL. Sensitive information must be encrypted during transmission over public networks, because it is easy and common for a malicious individual to intercept and/or divert data while in transit. Secure transmission of cardholder data requires using trusted keys/certificates, a secure protocol for transport, and proper encryption strength to encrypt cardholder data. Connection requests from systems that do not support the required encryption strength, and that would result in an insecure connection, should not be accepted. Note that some protocol implementations (such as SSL, SSH v1.0, and early TLS) have known vulnerabilities that an attacker can use to gain control of the affected system. Whichever security protocol is used, ensure it is configured to use only secure versions and configurations to prevent use of an insecure connection—for example, by using only trusted certificates and supporting only strong encryption (not supporting weaker, insecure protocols or methods). Verifying that certificates are trusted (for example, have not expired and are issued from a trusted source) helps ensure the integrity of the secure connection. Generally, the web page URL should begin with `HTTPS` and/or the web browser display a padlock icon somewhere in the window of the browser. Many TLS certificate vendors also provide a highly visible verification seal— sometimes referred to as a “security seal,” `secure site seal,` or “secure trust seal”)—which may provide the ability to click on the seal to reveal information about the website. Refer to industry standards and best practices for information on strong cryptography and secure protocols (e.g., NIST SP 800-52 and SP 800-57, OWASP, etc.) Note: SSL/early TLS is not considered strong cryptography and may not be used as a security control, except by POS POI terminals that are verified as not being susceptible to known exploits and the termination points to which they connect as defined in Appendix A2.",
      "Checks": [
        "cloudfront_distributions_using_deprecated_ssl_protocols",
        "acm_certificates_expiration_check",
        "cloudfront_distributions_origin_traffic_encrypted",
        "s3_bucket_enforces_ssl",
        "elbv2_ssl_listeners",
        "opensearch_service_domains_node_to_node_encryption_enabled",
        "elb_ssl_listeners"
      ],
      "Attributes": [
        {
          "ItemId": "4.1.g",
          "Section": "Requirement 4: Encrypt transmission of cardholder data across open, public networks",
          "SubSection": "4.1 Use strong cryptography and security protocols to safeguard sensitive cardholder data during transmission over open, public networks"
        }
      ]
    },
    {
      "Id": "5.1",
      "Name": "For a sample of system components including all operating system types commonly affected by malicious software, verify that anti-virus software is deployed if applicable anti-virus technology exists",
      "Description": "There is a constant stream of attacks using widely published exploits, often called `zero day` (an attack that exploits a previously unknown vulnerability), against otherwise secured systems. Without an anti-virus solution that is updated regularly, these new forms of malicious software can attack systems, disable a network, or lead to compromise of data.",
      "Checks": [
        "ssm_managed_compliant_patching"
      ],
      "Attributes": [
        {
          "ItemId": "5.1",
          "Section": "Requirement 5: Protect all systems against malware and regularly update anti-virus software or programs",
          "SubSection": "Requirement 5: Protect all systems against malware and regularly update anti-virus software or programs"
        }
      ]
    },
    {
      "Id": "5.2",
      "Name": "Ensure that all anti-virus mechanisms are maintained",
      "Description": "Anti-virus mechanisms should be maintained as follows: are kept current, perform periodic scans and generate audit logs which are retained per PCI DSS Requirement 10.7. Even the best anti-virus solutions are limited in effectiveness if they are not maintained and kept current with the latest security updates, signature files, or malware protections. Audit logs provide the ability to monitor virus and malware activity and anti-malware reactions. Thus, it is imperative that anti-malware solutions be configured to generate audit logs and that these logs be managed in accordance with Requirement 10.",
      "Checks": [
        "ssm_managed_compliant_patching"
      ],
      "Attributes": [
        {
          "ItemId": "5.2",
          "Section": "Requirement 5: Protect all systems against malware and regularly update anti-virus software or programs",
          "SubSection": "Requirement 5: Protect all systems against malware and regularly update anti-virus software or programs"
        }
      ]
    },
    {
      "Id": "5.2.c",
      "Name": "Examine a sample of system components, including all operating system types commonly affected by malicious software, to verify that the anti-virus software and definitions are current and periodic scans are performed",
      "Description": "Even the best anti-virus solutions are limited in effectiveness if they are not maintained and kept current with the latest security updates, signature files, or malware protections. Audit logs provide the ability to monitor virus and malware activity and anti-malware reactions. Thus, it is imperative that anti-malware solutions be configured to generate audit logs and that these logs be managed in accordance with Requirement 10.",
      "Checks": [
        "ssm_managed_compliant_patching"
      ],
      "Attributes": [
        {
          "ItemId": "5.2.c",
          "Section": "Requirement 5: Protect all systems against malware and regularly update anti-virus software or programs",
          "SubSection": "5.2 Ensure that all anti-virus mechanisms are maintained"
        }
      ]
    },
    {
      "Id": "6.1",
      "Name": "Establish a process to identify security vulnerabilities, using reputable outside sources for security vulnerability information, and assign a risk ranking (for example, as “high,” “medium,” or “low”) to newly discovered security vulnerabilities",
      "Description": "The intent of this requirement is that organizations keep up to date with new vulnerabilities that may impact their environment. Sources for vulnerability information should be trustworthy and often include vendor websites, industry news groups, mailing list, or RSS feeds. Once an organization identifies a vulnerability that could affect their environment, the risk that the vulnerability poses must be evaluated and ranked. The organization must therefore have a method in place to evaluate vulnerabilities on an ongoing basis and assign risk rankings to those vulnerabilities. This is not achieved by an ASV scan or internal vulnerability scan, rather this requires a process to actively monitor industry sources for vulnerability information. Classifying the risks (for example, as “high,” “medium,” or “low”) allows organizations to identify, prioritize, and address the highest risk items more quickly and reduce the likelihood that vulnerabilities posing the greatest risk will be exploited.",
      "Checks": [],
      "Attributes": [
        {
          "ItemId": "6.1",
          "Section": "Requirement 6: Develop and maintain secure systems and applications",
          "SubSection": "Requirement 6: Develop and maintain secure systems and applications"
        }
      ]
    },
    {
      "Id": "6.1.b",
      "Name": "Interview responsible personnel and observe processes to verify that new security vulnerabilities are identified, a risk ranking is assigned to vulnerabilities that includes identification of all “high risk” and “critical” vulnerabilities and processes to identify new security vulnerabilities include using reputable outside sources for security vulnerability information",
      "Description": "The intent of this requirement is that organizations keep up to date with new vulnerabilities that may impact their environment. Sources for vulnerability information should be trustworthy and often include vendor websites, industry news groups, mailing list, or RSS feeds. Once an organization identifies a vulnerability that could affect their environment, the risk that the vulnerability poses must be evaluated and ranked. The organization must therefore have a method in place to evaluate vulnerabilities on an ongoing basis and assign risk rankings to those vulnerabilities. This is not achieved by an ASV scan or internal vulnerability scan, rather this requires a process to actively monitor industry sources for vulnerability information. Classifying the risks (for example, as “high,” “medium,” or “low”) allows organizations to identify, prioritize, and address the highest risk items more quickly and reduce the likelihood that vulnerabilities posing the greatest risk will be exploited.",
      "Checks": [],
      "Attributes": [
        {
          "ItemId": "6.1.b",
          "Section": "Requirement 6: Develop and maintain secure systems and applications",
          "SubSection": "6.1 Establish a process to identify security vulnerabilities, using reputable outside sources for security vulnerability information, and assign a risk ranking (for example, as “high,” “medium,” or “low”) to newly discovered security vulnerabilities"
        }
      ]
    },
    {
      "Id": "6.2",
      "Name": "Ensure that all system components and software are protected from known vulnerabilities by installing applicable vendor- supplied security patches",
      "Description": "Install critical security patches within one month of release. Note: Critical security patches should be identified according to the risk ranking process defined in Requirement 6.1. There is a constant stream of attacks using widely published exploits, often called `zero day` (an attack that exploits a previously unknown vulnerability), against otherwise secured systems. If the most recent patches are not implemented on critical systems as soon as possible, a malicious individual can use these exploits to attack or disable a system, or gain access to sensitive data. Prioritizing patches for critical infrastructure ensures that high-priority systems and devices are protected from vulnerabilities as soon as possible after a patch is released. Consider prioritizing patch installations such that security patches for critical or at-risk systems are installed within 30 days, and other lower-risk patches are installed within 2-3 months. This requirement applies to applicable patches for all installed software, including payment applications (both those that are PA-DSS validated and those that are not).",
      "Checks": [
        "ssm_managed_compliant_patching",
        "eks_cluster_uses_a_supported_version",
        "rds_cluster_minor_version_upgrade_enabled"
      ],
      "Attributes": [
        {
          "ItemId": "6.2",
          "Section": "Requirement 6: Develop and maintain secure systems and applications",
          "SubSection": "Requirement 6: Develop and maintain secure systems and applications"
        }
      ]
    },
    {
      "Id": "6.2.b",
      "Name": "For a sample of system components and related software, compare the list of security patches installed on each system to the most recent vendor security-patch list, to verify that the applicable critical vendor-supplied security patches are installed within one month of release, all applicable vendor-supplied security patches are installed within an appropriate time frame (for example, within three months)",
      "Description": "There is a constant stream of attacks using widely published exploits, often called `zero day` (an attack that exploits a previously unknown vulnerability), against otherwise secured systems. If the most recent patches are not implemented on critical systems as soon as possible, a malicious individual can use these exploits to attack or disable a system, or gain access to sensitive data. Prioritizing patches for critical infrastructure ensures that high-priority systems and devices are protected from vulnerabilities as soon as possible after a patch is released. Consider prioritizing patch installations such that security patches for critical or at-risk systems are installed within 30 days, and other lower-risk patches are installed within 2-3 months. This requirement applies to applicable patches for all installed software, including payment applications (both those that are PA-DSS validated and those that are not).",
      "Checks": [
        "eks_cluster_uses_a_supported_version",
        "rds_cluster_minor_version_upgrade_enabled",
        "ssm_managed_compliant_patching"
      ],
      "Attributes": [
        {
          "ItemId": "6.2.b",
          "Section": "Requirement 6: Develop and maintain secure systems and applications",
          "SubSection": "6.2 Ensure that all system components and software are protected from known vulnerabilities by installing applicable vendor- supplied security patches"
        }
      ]
    },
    {
      "Id": "6.3",
      "Name": "Develop internal and external software applications (including web-based administrative access to applications) securely",
      "Description": "Develop internal and external software application securely as follows: in accordance with PCI DSS (for example, secure authentication and logging), based on industry standards and/or best practices, incorporating information security throughout the software-development life cycle. Note: this applies to all software developed internally as well as bespoke or custom software developed by a third party. Without the inclusion of security during the requirements definition, design, analysis, and testing phases of software development, security vulnerabilities can be inadvertently or maliciously introduced into the production environment. Understanding how sensitive data is handled by the application—including when stored, transmitted, and when in memory—can help identify where data needs to be protected.",
      "Checks": [
        "codebuild_project_source_repo_url_no_sensitive_credentials",
        "codebuild_project_no_secrets_in_variables"
      ],
      "Attributes": [
        {
          "ItemId": "6.3",
          "Section": "Requirement 6: Develop and maintain secure systems and applications",
          "SubSection": "Requirement 6: Develop and maintain secure systems and applications"
        }
      ]
    },
    {
      "Id": "6.3.1",
      "Name": "Examine written software-development procedures and interview responsible personnel to verify that pre-production and/or custom application accounts, user IDs and/or passwords are removed before an application goes into production or is released to customers",
      "Description": "Development, test and/or custom application accounts, user IDs, and passwords should be removed from production code before the application becomes active or is released to customers, since these items may give away information about the functioning of the application. Possession of such information could facilitate compromise of the application and related cardholder data.",
      "Checks": [
        "codebuild_project_source_repo_url_no_sensitive_credentials",
        "codebuild_project_no_secrets_in_variables"
      ],
      "Attributes": [
        {
          "ItemId": "6.3.1",
          "Section": "Requirement 6: Develop and maintain secure systems and applications",
          "SubSection": "6.3 Develop internal and external software applications (including web-based administrative access to applications) securely"
        }
      ]
    },
    {
      "Id": "6.3.2",
      "Name": "Review custom code prior to release to production or customers in order to identify any potential coding vulnerability (using either manual or automated processes)",
      "Description": "Custom code prior to release to production should include the following: code changes are reviewed by individuals other than the originating code author, and by individuals knowledgeable about code-review techniques and secure coding practices, code reviews ensure code is developed according to secure coding guidelines, appropriate corrections are implemented prior to release, code-review results are reviewed and approved by management prior to release and security vulnerabilities in custom code are commonly exploited by malicious individuals to gain access to a network and compromise cardholder data. An individual knowledgeable and experienced in code-review techniques should be involved in the review process. Code reviews should be performed by someone other than the developer of the code to allow for an independent, objective review. Automated tools or processes may also be used in lieu of manual reviews, but keep in mind that it may be difficult or even impossible for an automated tool to identify some coding issues. Correcting coding errors before the code is deployed into a production environment or released to customers prevents the code exposing the environments to potential exploit. Faulty code is also far more difficult and expensive to address after it has been deployed or released into production environments. Including a formal review and signoff by management prior to release helps to ensure that code is approved and has been developed in accordance with policies and procedures.",
      "Checks": [],
      "Attributes": [
        {
          "ItemId": "6.3.2",
          "Section": "Requirement 6: Develop and maintain secure systems and applications",
          "SubSection": "6.3 Develop internal and external software applications (including web-based administrative access to applications) securely"
        }
      ]
    },
    {
      "Id": "6.3.2.b",
      "Name": "Select a sample of recent custom application changes and verify that custom application code is reviewed according to 6.3.2.a, above",
      "Description": "Security vulnerabilities in custom code are commonly exploited by malicious individuals to gain access to a network and compromise cardholder data. An individual knowledgeable and experienced in code-review techniques should be involved in the review process. Code reviews should be performed by someone other than the developer of the code to allow for an independent, objective review. Automated tools or processes may also be used in lieu of manual reviews, but keep in mind that it may be difficult or even impossible for an automated tool to identify some coding issues. Correcting coding errors before the code is deployed into a production environment or released to customers prevents the code exposing the environments to potential exploit. Faulty code is also far more difficult and expensive to address after it has been deployed or released into production environments. Including a formal review and signoff by management prior to release helps to ensure that code is approved and has been developed in accordance with policies and procedures.",
      "Checks": [],
      "Attributes": [
        {
          "ItemId": "6.3.2.b",
          "Section": "Requirement 6: Develop and maintain secure systems and applications",
          "SubSection": "6.3.2 Review custom code prior to release to production or customers in order to identify any potential coding vulnerability (using either manual or automated processes)"
        }
      ]
    },
    {
      "Id": "6.3.a",
      "Name": "Examine written software-development processes to verify that the processes are based on industry standards and/or best practices",
      "Description": "Without the inclusion of security during the requirements definition, design, analysis, and testing phases of software development, security vulnerabilities can be inadvertently or maliciously introduced into the production environment. Understanding how sensitive data is handled by the application—including when stored, transmitted, and when in memory—can help identify where data needs to be protected.",
      "Checks": [
        "codebuild_project_source_repo_url_no_sensitive_credentials",
        "codebuild_project_no_secrets_in_variables"
      ],
      "Attributes": [
        {
          "ItemId": "6.3.a",
          "Section": "Requirement 6: Develop and maintain secure systems and applications",
          "SubSection": "6.3 Develop internal and external software applications (including web-based administrative access to applications) securely"
        }
      ]
    },
    {
      "Id": "6.3.b",
      "Name": "Examine written software-development processes to verify that information security is included throughout the life cycle",
      "Description": "Without the inclusion of security during the requirements definition, design, analysis, and testing phases of software development, security vulnerabilities can be inadvertently or maliciously introduced into the production environment. Understanding how sensitive data is handled by the application—including when stored, transmitted, and when in memory—can help identify where data needs to be protected.",
      "Checks": [
        "codebuild_project_source_repo_url_no_sensitive_credentials",
        "codebuild_project_no_secrets_in_variables"
      ],
      "Attributes": [
        {
          "ItemId": "6.3.b",
          "Section": "Requirement 6: Develop and maintain secure systems and applications",
          "SubSection": "6.3 Develop internal and external software applications (including web-based administrative access to applications) securely"
        }
      ]
    },
    {
      "Id": "6.3.c",
      "Name": "Examine written software-development processes to verify that software applications are developed in accordance with PCI DSS",
      "Description": "Without the inclusion of security during the requirements definition, design, analysis, and testing phases of software development, security vulnerabilities can be inadvertently or maliciously introduced into the production environment. Understanding how sensitive data is handled by the application—including when stored, transmitted, and when in memory—can help identify where data needs to be protected.",
      "Checks": [
        "codebuild_project_source_repo_url_no_sensitive_credentials",
        "codebuild_project_no_secrets_in_variables"
      ],
      "Attributes": [
        {
          "ItemId": "6.3.c",
          "Section": "Requirement 6: Develop and maintain secure systems and applications",
          "SubSection": "6.3 Develop internal and external software applications (including web-based administrative access to applications) securely"
        }
      ]
    },
    {
      "Id": "6.5",
      "Name": "Address common coding vulnerabilities in software-development processes like train developers at least annually in up-to-date secure coding techniques etc",
      "Description": "Common coding vulnerabilities in software-development processes as follows: train developers at least annually in up- to-date secure coding techniques, including how to avoid common coding vulnerabilities, develop applications based on secure coding guidelines. Note: The vulnerabilities listed at 6.5.1 through 6.5.10 were current with industry best practices when this version of PCI DSS was published. However, as industry best practices for vulnerability management are updated (for example, the OWASP Guide, SANS CWE Top 25, CERT Secure Coding, etc.), the current best practices must be used for these requirements. The application layer is high-risk and may be targeted by both internal and external threats. Requirements 6.5.1 through 6.5.10 are the minimum controls that should be in place, and organizations should incorporate the relevant secure coding practices as applicable to the particular technology in their environment. Application developers should be properly trained to identify and resolve issues related to these (and other) common coding vulnerabilities. Having staff knowledgeable of secure coding guidelines should minimize the number of security vulnerabilities introduced through poor coding practices. Training for developers may be provided in-house or by third parties and should be applicable for technology used. As industry-accepted secure coding practices change, organizational coding practices and developer training should likewise be updated to address new threats—for example, memory scraping attacks. The vulnerabilities identified in 6.5.1 through 6.5.10 provide a minimum baseline. It is up to the organization to remain up to date with vulnerability trends and incorporate appropriate measures into their secure coding practices.",
      "Checks": [],
      "Attributes": [
        {
          "ItemId": "6.5",
          "Section": "Requirement 6: Develop and maintain secure systems and applications",
          "SubSection": "Requirement 6: Develop and maintain secure systems and applications"
        }
      ]
    },
    {
      "Id": "6.5.8",
      "Name": "Examine software-development policies and procedures and interview responsible personnel to verify that improper access control—such as insecure direct object references, failure to restrict URL access, and directory traversal—is addressed by coding technique",
      "Description": "Directory traversal—is addressed by coding technique should include: proper authentication of users, sanitizing input, not exposing internal object references to users and user interfaces that do not permit access to unauthorized functions. A direct object reference occurs when a developer exposes a reference to an internal implementation object, such as a file, directory, database record, or key, as a URL or form parameter. Attackers can manipulate those references to access other objects without authorization. Consistently enforce access control in presentation layer and business logic for all URLs. Frequently, the only way an application protects sensitive functionality is by preventing the display of links or URLs to unauthorized users. Attackers can use this weakness to access and perform unauthorized operations by accessing those URLs directly. An attacker may be able to enumerate and navigate the directory structure of a website (directory traversal) thus gaining access to unauthorized information as well as gaining further insight into the workings of the site for later exploitation. If user interfaces permit access to unauthorized functions, this access could result in unauthorized individuals gaining access to privileged credentials or cardholder data. Only authorized users should be permitted to access direct object references to sensitive resources. Limiting access to data resources will help prevent cardholder data from being presented to unauthorized resources.",
      "Checks": [],
      "Attributes": [
        {
          "ItemId": "6.5.8",
          "Section": "Requirement 6: Develop and maintain secure systems and applications",
          "SubSection": "6.5 Address common coding vulnerabilities in software-development processes like train developers at least annually in up-to-date secure coding techniques etc"
        }
      ]
    },
    {
      "Id": "6.6",
      "Name": "For public-facing web applications, ensure that either one of the requirements are in place",
      "Description": "Verify following methods is in place as follows: examine documented processes, interview personnel, and examine records of application security assessments to verify that public-facing web applications are reviewed—using either manual or automated vulnerability security assessment tools or methods—as follows: - At least annually - After any changes - By an organization that specializes in application security - That, at a minimum, all vulnerabilities in Requirement 6.5 are included in the assessment - That all vulnerabilities are corrected - That the application is re-evaluated after the corrections. Examine the system configuration settings and interview responsible personnel to verify that an automated technical solution that detects and prevents web-based attacks (for example, a web-application firewall) is in place as follows: - Is situated in front of public-facing web applications to detect and prevent web-based attacks. - Is actively running and up to date as applicable. - Is generating audit logs. - Is configured to either block web-based attacks, or generate an alert that is immediately investigated.Public-facing web applications are primary targets for attackers, and poorly coded web applications provide an easy path for attackers to gain access to sensitive data and systems. The requirement for reviewing applications or installing web-application firewalls is intended to reduce the number of compromises on public-facing web applications due to poor coding or application management practices. Manual or automated vulnerability security assessment tools or methods review and/or test the application for vulnerabilities, web-application firewalls filter and block non- essential traffic at the application layer. Used in conjunction with a network-based firewall, a properly configured web-application firewall prevents application-layer attacks if applications are improperly coded or configured. This can be achieved through a combination of technology and process. Process-based solutions must have mechanisms that facilitate timely responses to alerts in order to meet the intent of this requirement, which is to prevent attacks. Note: “An organization that specializes in application security” can be either a third-party company or an internal organization, as long as the reviewers specialize in application security and can demonstrate independence from the development team. For public-facing web applications, address new threats and vulnerabilities on an ongoing basis and ensure these applications are protected against known attacks by either of the following methods: reviewing public-facing web applications via manual or automated application vulnerability security assessment tools or methods, at least annually and after any changes Note: This assessment is not the same as the vulnerability scans performed for Requirement 11.2., Installing an automated technical solution that detects and prevents web- based attacks (for example, a web- application firewall) in front of public- facing web applications, to continually check all traffic.",
      "Checks": [
        "elbv2_waf_acl_attached",
        "apigateway_restapi_waf_acl_attached",
        "elbv2_desync_mitigation_mode"
      ],
      "Attributes": [
        {
          "ItemId": "6.6",
          "Section": "Requirement 6: Develop and maintain secure systems and applications",
          "SubSection": "Requirement 6: Develop and maintain secure systems and applications"
        }
      ]
    },
    {
      "Id": "7.1",
      "Name": "Limit access to system components and cardholder data to only those individuals whose job requires such access",
      "Description": "The more people who have access to cardholder data, the more risk there is that a user's account will be used maliciously. Limiting access to those with a legitimate business reason for the access helps an organization prevent mishandling of cardholder data through inexperience or malice.",
      "Checks": [
        "opensearch_service_domains_access_control_enabled"
      ],
      "Attributes": [
        {
          "ItemId": "7.1",
          "Section": "Requirement 7: Restrict access to cardholder data by business need to know",
          "SubSection": "Requirement 7: Restrict access to cardholder data by business need to know"
        }
      ]
    },
    {
      "Id": "7.1.2",
      "Name": "Restrict access to privileged user IDs to least privileges necessary to perform job responsibilities",
      "Description": "When assigning privileged IDs, it is important to assign individuals only the privileges they need to perform their job (the “least privileges”). For example, the database administrator or backup administrator should not be assigned the same privileges as the overall systems administrator.",
      "Checks": [
        "opensearch_service_domains_access_control_enabled"
      ],
      "Attributes": [
        {
          "ItemId": "7.1.2",
          "Section": "Requirement 7: Restrict access to cardholder data by business need to know",
          "SubSection": "7.1 Limit access to system components and cardholder data to only those individuals whose job requires such access"
        }
      ]
    },
    {
      "Id": "7.1.2.a",
      "Name": "Interview personnel responsible for assigning access to verify that access to privileged user IDs is assigned only to roles that specifically require such privileged access and restricted to least privileges necessary to perform job responsibilities",
      "Description": "When assigning privileged IDs, it is important to assign individuals only the privileges they need to perform their job (the “least privileges”). For example, the database administrator or backup administrator should not be assigned the same privileges as the overall systems administrator.",
      "Checks": [
        "opensearch_service_domains_access_control_enabled"
      ],
      "Attributes": [
        {
          "ItemId": "7.1.2.a",
          "Section": "Requirement 7: Restrict access to cardholder data by business need to know",
          "SubSection": "7.1.2 Restrict access to privileged user IDs to least privileges necessary to perform job responsibilities"
        }
      ]
    },
    {
      "Id": "7.2",
      "Name": "Examine system settings and vendor documentation to verify that an access control system(s)",
      "Description": "Without a mechanism to restrict access based on user's need to know, a user may unknowingly be granted access to cardholder data. Access control systems automate the process of restricting access and assigning privileges. Additionally, a default “deny-all” setting ensures no one is granted access until and unless a rule is established specifically granting such access. Entities may have one or more access controls systems to manage user access. Note: Some access control systems are set by default to “allow-all,” thereby permitting access unless/until a rule is written to specifically deny it.",
      "Checks": [
        "ec2_ebs_public_snapshot",
        "rds_instance_no_public_access",
        "eks_endpoints_not_publicly_accessible",
        "s3_account_level_public_access_blocks",
        "awslambda_function_not_publicly_accessible",
        "emr_cluster_master_nodes_no_public_ip",
        "ec2_instance_public_ip",
        "cloudwatch_log_metric_filter_root_usage",
        "rds_snapshots_public_access",
        "opensearch_service_domains_not_publicly_accessible",
        "redshift_cluster_public_access",
        "s3_bucket_policy_public_write_access",
        "s3_bucket_public_write_acl",
        "dms_instance_no_public_access",
        "sagemaker_notebook_instance_without_direct_internet_access_configured"
      ],
      "Attributes": [
        {
          "ItemId": "7.2",
          "Section": "Requirement 7: Restrict access to cardholder data by business need to know",
          "SubSection": "Requirement 7: Restrict access to cardholder data by business need to know"
        }
      ]
    },
    {
      "Id": "7.2.1",
      "Name": "Confirm that access control systems are in place on all system components",
      "Description": "Without a mechanism to restrict access based on user's need to know, a user may unknowingly be granted access to cardholder data. Access control systems automate the process of restricting access and assigning privileges. Additionally, a default “deny-all” setting ensures no one is granted access until and unless a rule is established specifically granting such access. Entities may have one or more access controls systems to manage user access. Note: Some access control systems are set by default to “allow-all,” thereby permitting access unless/until a rule is written to specifically deny it.",
      "Checks": [
        "ec2_ebs_public_snapshot",
        "rds_instance_no_public_access",
        "eks_endpoints_not_publicly_accessible",
        "s3_account_level_public_access_blocks",
        "awslambda_function_not_publicly_accessible",
        "emr_cluster_master_nodes_no_public_ip",
        "ec2_instance_public_ip",
        "cloudwatch_log_metric_filter_root_usage",
        "rds_snapshots_public_access",
        "opensearch_service_domains_not_publicly_accessible",
        "redshift_cluster_public_access",
        "s3_bucket_policy_public_write_access",
        "s3_bucket_public_write_acl",
        "dms_instance_no_public_access",
        "sagemaker_notebook_instance_without_direct_internet_access_configured"
      ],
      "Attributes": [
        {
          "ItemId": "7.2.1",
          "Section": "Requirement 7: Restrict access to cardholder data by business need to know",
          "SubSection": "7.2 Examine system settings and vendor documentation to verify that an access control system(s)"
        }
      ]
    },
    {
      "Id": "8.1",
      "Name": "Define and implement policies and procedures to ensure proper user identification management for non-consumer users and administrators",
      "Description": "By ensuring each user is uniquely identified— instead of using one ID for several employees—an organization can maintain individual responsibility for actions and an effective audit trail per employee. This will help speed issue resolution and containment when misuse or malicious intent occurs.",
      "Checks": [
        "cloudwatch_log_metric_filter_policy_changes",
        "iam_password_policy_reuse_24",
        "iam_user_accesskey_unused",
        "iam_user_console_access_unused"
      ],
      "Attributes": [
        {
          "ItemId": "8.1",
          "Section": "Requirement 8: Identify and authenticate access to system components",
          "SubSection": "Requirement 8: Identify and authenticate access to system components"
        }
      ]
    },
    {
      "Id": "8.1.2",
      "Name": "Control addition, deletion, and modification of user IDs, credentials, and other identifier objects",
      "Description": "To ensure that user accounts granted access to systems are all valid and recognized users, strong processes must manage all changes to user IDs and other authentication credentials, including adding new ones and modifying or deleting existing ones.",
      "Checks": [
        "cloudwatch_log_metric_filter_policy_changes"
      ],
      "Attributes": [
        {
          "ItemId": "8.1.2",
          "Section": "Requirement 8: Identify and authenticate access to system components",
          "SubSection": "8.1 Define and implement policies and procedures to ensure proper user identification management for non-consumer users and administrators"
        }
      ]
    },
    {
      "Id": "8.1.4",
      "Name": "Observe user accounts to verify that any inactive accounts over 90 days old are either removed or disabled",
      "Description": "Accounts that are not used regularly are often targets of attack since it is less likely that any changes (such as a changed password) will be noticed. As such, these accounts may be more easily exploited and used to access cardholder data.",
      "Checks": [
        "iam_password_policy_reuse_24",
        "iam_user_accesskey_unused",
        "iam_user_console_access_unused"
      ],
      "Attributes": [
        {
          "ItemId": "8.1.4",
          "Section": "Requirement 8: Identify and authenticate access to system components",
          "SubSection": "8.1 Define and implement policies and procedures to ensure proper user identification management for non-consumer users and administrators"
        }
      ]
    },
    {
      "Id": "8.1.5",
      "Name": "Manage IDs used by third parties to access, support, or maintain system components via remote access by enabling only during the time period needed and disabled when not in use",
      "Description": "Allowing vendors to have 24/7 access into your network in case they need to support your systems increases the chances of unauthorized access, either from a user in the vendor's environment or from a malicious individual who finds and uses this always-available external entry point into your network. Enabling access only for the time periods needed, and disabling it as soon as it is no longer needed, helps prevent misuse of these connections. Monitoring of vendor access provides assurance that vendors are accessing only the systems necessary and only during approved time frames.",
      "Checks": [],
      "Attributes": [
        {
          "ItemId": "8.1.5",
          "Section": "Requirement 8: Identify and authenticate access to system components",
          "SubSection": "8.1 Define and implement policies and procedures to ensure proper user identification management for non-consumer users and administrators"
        }
      ]
    },
    {
      "Id": "8.1.5.a",
      "Name": "Interview personnel and observe processes for managing accounts used by third parties to access, support, or maintain system components to verify that accounts used for remote access are disabled when not in use, enabled only when needed by the third party and disabled when not in use",
      "Description": "Allowing vendors to have 24/7 access into your network in case they need to support your systems increases the chances of unauthorized access, either from a user in the vendor's environment or from a malicious individual who finds and uses this always-available external entry point into your network. Enabling access only for the time periods needed, and disabling it as soon as it is no longer needed, helps prevent misuse of these connections. Monitoring of vendor access provides assurance that vendors are accessing only the systems necessary and only during approved time frames.",
      "Checks": [],
      "Attributes": [
        {
          "ItemId": "8.1.5.a",
          "Section": "Requirement 8: Identify and authenticate access to system components",
          "SubSection": "8.1.5 Manage IDs used by third parties to access, support, or maintain system components via remote access by enabling only during the time period needed and disabled when not in use"
        }
      ]
    },
    {
      "Id": "8.2",
      "Name": "To verify that users are authenticated using unique ID and additional authentication (for example, a password/phrase) for access to the cardholder data environment perform the methods like examine documentation describing the authentication method(s) used etc",
      "Description": "Verify users are authenticated using unique ID, perform the following: examine documentation describing the authentication method(s) used, for each type of authentication method used and for each type of system component, observe an authentication to verify authentication is functioning consistent with documented authentication method(s). These authentication methods, when used in addition to unique IDs, help protect users' IDs from being compromised, since the one attempting the compromise needs to know both the unique ID and the password (or other authentication used). Note that a digital certificate is a valid option for “something you have” as long as it is unique for a particular user. Since one of the first steps a malicious individual will take to compromise a system is to exploit weak or nonexistent passwords, it is important to implement good processes for authentication management.",
      "Checks": [
        "iam_password_policy_reuse_24",
        "codebuild_project_no_secrets_in_variables",
        "codebuild_project_source_repo_url_no_sensitive_credentials",
        "s3_bucket_enforces_ssl",
        "elbv2_ssl_listeners",
        "opensearch_service_domains_node_to_node_encryption_enabled",
        "elb_ssl_listeners",
        "ec2_ebs_default_encryption",
        "rds_instance_storage_encrypted",
        "sagemaker_notebook_instance_encryption_enabled",
        "s3_bucket_default_encryption",
        "efs_encryption_at_rest_enabled",
        "opensearch_service_domains_encryption_at_rest_enabled",
        "ec2_ebs_volume_encryption",
        "s3_bucket_kms_encryption",
        "eks_cluster_kms_cmk_encryption_in_secrets_enabled",
        "rds_snapshots_encrypted",
        "dynamodb_accelerator_cluster_encryption_enabled",
        "dynamodb_table_encryption_enabled",
        "cloudtrail_kms_encryption_enabled",
        "cloudwatch_log_group_kms_encryption_enabled",
        "sns_topics_kms_encryption_at_rest_enabled",
        "dynamodb_tables_kms_cmk_encryption_enabled",
        "redshift_cluster_audit_logging"
      ],
      "Attributes": [
        {
          "ItemId": "8.2",
          "Section": "Requirement 8: Identify and authenticate access to system components",
          "SubSection": "Requirement 8: Identify and authenticate access to system components"
        }
      ]
    },
    {
      "Id": "8.2.1",
      "Name": "Using strong cryptography, render all authentication credentials (such as passwords/phrases) unreadable during transmission and storage on all system components",
      "Description": "Many network devices and applications transmit unencrypted, readable passwords across the network and/or store passwords without encryption. A malicious individual can easily intercept unencrypted passwords during transmission using a “sniffer,” or directly access unencrypted passwords in files where they are stored, and use this data to gain unauthorized access. Note: Testing Procedures 8.2.1.d and 8.2.1.e are additional procedures that only apply if the entity being assessed is a service provider.",
      "Checks": [
        "codebuild_project_no_secrets_in_variables",
        "codebuild_project_source_repo_url_no_sensitive_credentials",
        "s3_bucket_enforces_ssl",
        "elbv2_ssl_listeners",
        "opensearch_service_domains_node_to_node_encryption_enabled",
        "elb_ssl_listeners",
        "ec2_ebs_default_encryption",
        "rds_instance_storage_encrypted",
        "sagemaker_notebook_instance_encryption_enabled",
        "s3_bucket_default_encryption",
        "efs_encryption_at_rest_enabled",
        "opensearch_service_domains_encryption_at_rest_enabled",
        "ec2_ebs_volume_encryption",
        "s3_bucket_kms_encryption",
        "eks_cluster_kms_cmk_encryption_in_secrets_enabled",
        "rds_snapshots_encrypted",
        "dynamodb_accelerator_cluster_encryption_enabled",
        "dynamodb_table_encryption_enabled",
        "cloudtrail_kms_encryption_enabled",
        "cloudwatch_log_group_kms_encryption_enabled",
        "sns_topics_kms_encryption_at_rest_enabled",
        "dynamodb_tables_kms_cmk_encryption_enabled",
        "redshift_cluster_audit_logging"
      ],
      "Attributes": [
        {
          "ItemId": "8.2.1",
          "Section": "Requirement 8: Identify and authenticate access to system components",
          "SubSection": "8.2 To verify that users are authenticated using unique ID and additional authentication (for example, a password/phrase) for access to the cardholder data environment perform the methods like examine documentation describing the authentication method(s) used etc"
        }
      ]
    },
    {
      "Id": "8.2.1.a",
      "Name": "Examine vendor documentation and system configuration settings to verify that passwords are protected with strong cryptography during transmission and storage",
      "Description": "Many network devices and applications transmit unencrypted, readable passwords across the network and/or store passwords without encryption. A malicious individual can easily intercept unencrypted passwords during transmission using a “sniffer,” or directly access unencrypted passwords in files where they are stored, and use this data to gain unauthorized access. Note: Testing Procedures 8.2.1.d and 8.2.1.e are additional procedures that only apply if the entity being assessed is a service provider.",
      "Checks": [
        "elbv2_ssl_listeners",
        "ec2_ebs_default_encryption",
        "rds_instance_storage_encrypted",
        "sagemaker_notebook_instance_encryption_enabled",
        "s3_bucket_default_encryption",
        "efs_encryption_at_rest_enabled",
        "opensearch_service_domains_encryption_at_rest_enabled",
        "ec2_ebs_volume_encryption",
        "opensearch_service_domains_node_to_node_encryption_enabled",
        "elb_ssl_listeners",
        "s3_bucket_kms_encryption",
        "eks_cluster_kms_cmk_encryption_in_secrets_enabled",
        "rds_snapshots_encrypted",
        "dynamodb_accelerator_cluster_encryption_enabled",
        "dynamodb_table_encryption_enabled",
        "cloudtrail_kms_encryption_enabled",
        "cloudwatch_log_group_kms_encryption_enabled",
        "s3_bucket_enforces_ssl",
        "sns_topics_kms_encryption_at_rest_enabled",
        "dynamodb_tables_kms_cmk_encryption_enabled",
        "redshift_cluster_audit_logging"
      ],
      "Attributes": [
        {
          "ItemId": "8.2.1.a",
          "Section": "Requirement 8: Identify and authenticate access to system components",
          "SubSection": "8.2.1 Using strong cryptography, render all authentication credentials (such as passwords/phrases) unreadable during transmission and storage on all system components"
        }
      ]
    },
    {
      "Id": "8.2.1.b",
      "Name": "For a sample of system components, examine password files to verify that passwords are unreadable during storage",
      "Description": "Many network devices and applications transmit unencrypted, readable passwords across the network and/or store passwords without encryption. A malicious individual can easily intercept unencrypted passwords during transmission using a “sniffer,” or directly access unencrypted passwords in files where they are stored, and use this data to gain unauthorized access. Note: Testing Procedures 8.2.1.d and 8.2.1.e are additional procedures that only apply if the entity being assessed is a service provider.",
      "Checks": [],
      "Attributes": [
        {
          "ItemId": "8.2.1.b",
          "Section": "Requirement 8: Identify and authenticate access to system components",
          "SubSection": "8.2.1 Using strong cryptography, render all authentication credentials (such as passwords/phrases) unreadable during transmission and storage on all system components"
        }
      ]
    },
    {
      "Id": "8.2.1.c",
      "Name": "For a sample of system components, examine data transmissions to verify that passwords are unreadable during transmission",
      "Description": "Many network devices and applications transmit unencrypted, readable passwords across the network and/or store passwords without encryption. A malicious individual can easily intercept unencrypted passwords during transmission using a “sniffer,” or directly access unencrypted passwords in files where they are stored, and use this data to gain unauthorized access. Note: Testing Procedures 8.2.1.d and 8.2.1.e are additional procedures that only apply if the entity being assessed is a service provider.",
      "Checks": [],
      "Attributes": [
        {
          "ItemId": "8.2.1.c",
          "Section": "Requirement 8: Identify and authenticate access to system components",
          "SubSection": "8.2.1 Using strong cryptography, render all authentication credentials (such as passwords/phrases) unreadable during transmission and storage on all system components"
        }
      ]
    },
    {
      "Id": "8.2.3",
      "Name": "Passwords/passphrases require a minimum length of at least seven characters, contain both numeric and alphabetic characters",
      "Description": "The passwords/ passphrases must have complexity and strength at least equivalent to the parameters specified above. Strong passwords/passphrases are the first line of defense into a network since a malicious individual will often first try to find accounts with weak or non- existent passwords. If passwords are short or simple to guess, it is relatively easy for a malicious individual to find these weak accounts and compromise a network under the guise of a valid user ID. This requirement specifies that a minimum of seven characters and both numeric and alphabetic characters should be used for passwords/ passphrases. For cases where this minimum cannot be met due to technical limitations, entities can use “equivalent strength” to evaluate their alternative. For information on variability and equivalency of password strength (also referred to as entropy) for passwords/passphrases of different formats, refer to industry standards (e.g., the current version of NIST SP 800-63.) Note: Testing Procedure 8.2.3.b is an additional procedure that only applies if the entity being assessed is a service provider.",
      "Checks": [
        "iam_password_policy_reuse_24"
      ],
      "Attributes": [
        {
          "ItemId": "8.2.3",
          "Section": "Requirement 8: Identify and authenticate access to system components",
          "SubSection": "8.2 To verify that users are authenticated using unique ID and additional authentication (for example, a password/phrase) for access to the cardholder data environment perform the methods like examine documentation describing the authentication method(s) used etc"
        }
      ]
    },
    {
      "Id": "8.2.3.a",
      "Name": "For a sample of system components, inspect system configuration settings to verify that user password/passphrase parameters are set to require at least the following strength/complexity that is require a minimum length of at least seven characters and contain both numeric and alphabetic characters",
      "Description": "Strong passwords/passphrases are the first line of defense into a network since a malicious individual will often first try to find accounts with weak or non- existent passwords. If passwords are short or simple to guess, it is relatively easy for a malicious individual to find these weak accounts and compromise a network under the guise of a valid user ID. This requirement specifies that a minimum of seven characters and both numeric and alphabetic characters should be used for passwords/ passphrases. For cases where this minimum cannot be met due to technical limitations, entities can use “equivalent strength” to evaluate their alternative. For information on variability and equivalency of password strength (also referred to as entropy) for passwords/passphrases of different formats, refer to industry standards (e.g., the current version of NIST SP 800-63.) Note: Testing Procedure 8.2.3.b is an additional procedure that only applies if the entity being assessed is a service provider.",
      "Checks": [
        "iam_password_policy_reuse_24"
      ],
      "Attributes": [
        {
          "ItemId": "8.2.3.a",
          "Section": "Requirement 8: Identify and authenticate access to system components",
          "SubSection": "8.2.3 Passwords/passphrases require a minimum length of at least seven characters, contain both numeric and alphabetic characters"
        }
      ]
    },
    {
      "Id": "8.2.3.b",
      "Name": "Additional testing procedure for service provider assessments only to review internal processes and customer/user documentation to verify that non-consumer customer passwords/passphrases are required to meet at least the following strength/complexity that is require a minimum length of at least seven characters and contain both numeric and alphabetic characters",
      "Description": "Strong passwords/passphrases are the first line of defense into a network since a malicious individual will often first try to find accounts with weak or non- existent passwords. If passwords are short or simple to guess, it is relatively easy for a malicious individual to find these weak accounts and compromise a network under the guise of a valid user ID. This requirement specifies that a minimum of seven characters and both numeric and alphabetic characters should be used for passwords/ passphrases. For cases where this minimum cannot be met due to technical limitations, entities can use “equivalent strength” to evaluate their alternative. For information on variability and equivalency of password strength (also referred to as entropy) for passwords/passphrases of different formats, refer to industry standards (e.g., the current version of NIST SP 800-63.) Note: Testing Procedure 8.2.3.b is an additional procedure that only applies if the entity being assessed is a service provider.",
      "Checks": [
        "iam_password_policy_reuse_24"
      ],
      "Attributes": [
        {
          "ItemId": "8.2.3.b",
          "Section": "Requirement 8: Identify and authenticate access to system components",
          "SubSection": "8.2.3 Passwords/passphrases require a minimum length of at least seven characters, contain both numeric and alphabetic characters"
        }
      ]
    },
    {
      "Id": "8.2.4",
      "Name": "Change user passwords/passphrases at least once every 90 days",
      "Description": "Passwords/passphrases that are valid for a long time without a change provide malicious individuals with more time to work on breaking the password/phrase. Note: Testing Procedure 8.2.4.b is an additional procedure that only applies if the entity being assessed is a service provider.",
      "Checks": [
        "iam_password_policy_reuse_24"
      ],
      "Attributes": [
        {
          "ItemId": "8.2.4",
          "Section": "Requirement 8: Identify and authenticate access to system components",
          "SubSection": "8.2 To verify that users are authenticated using unique ID and additional authentication (for example, a password/phrase) for access to the cardholder data environment perform the methods like examine documentation describing the authentication method(s) used etc"
        }
      ]
    },
    {
      "Id": "8.2.4.a",
      "Name": "For a sample of system components, inspect system configuration settings to verify that user password/passphrase parameters are set to require users to change passwords at least once every 90 days",
      "Description": "Passwords/passphrases that are valid for a long time without a change provide malicious individuals with more time to work on breaking the password/phrase. Note: Testing Procedure 8.2.4.b is an additional procedure that only applies if the entity being assessed is a service provider.",
      "Checks": [
        "iam_password_policy_reuse_24"
      ],
      "Attributes": [
        {
          "ItemId": "8.2.4.a",
          "Section": "Requirement 8: Identify and authenticate access to system components",
          "SubSection": "8.2.4 Change user passwords/passphrases at least once every 90 days"
        }
      ]
    },
    {
      "Id": "8.2.4.b",
      "Name": "Additional testing procedure for service provider assessments only: Review internal processes and customer/user documentation to verify that non-consumer customer user passwords/passphrases are required to change periodically; and non-consumer customer users are given guidance as to when, and under what circumstances, passwords/passphrases must change",
      "Description": "Passwords/passphrases that are valid for a long time without a change provide malicious individuals with more time to work on breaking the password/phrase. Note: Testing Procedure 8.2.4.b is an additional procedure that only applies if the entity being assessed is a service provider.",
      "Checks": [
        "iam_password_policy_reuse_24"
      ],
      "Attributes": [
        {
          "ItemId": "8.2.4.b",
          "Section": "Requirement 8: Identify and authenticate access to system components",
          "SubSection": "8.2.4 Change user passwords/passphrases at least once every 90 days"
        }
      ]
    },
    {
      "Id": "8.2.5",
      "Name": "Do not allow an individual to submit a new password/passphrase that is the same as any of the last four passwords/passphrases he or she has used",
      "Description": "If password history isn't maintained, the effectiveness of changing passwords is reduced, as previous passwords can be reused over and over. Requiring that passwords cannot be reused for a period of time reduces the likelihood that passwords that have been guessed or brute-forced will be used in the future. Note: Testing Procedure 8.2.5.b is an additional procedure that only applies if the entity being assessed is a service provider.",
      "Checks": [
        "iam_password_policy_reuse_24"
      ],
      "Attributes": [
        {
          "ItemId": "8.2.5",
          "Section": "Requirement 8: Identify and authenticate access to system components",
          "SubSection": "8.2 To verify that users are authenticated using unique ID and additional authentication (for example, a password/phrase) for access to the cardholder data environment perform the methods like examine documentation describing the authentication method(s) used etc"
        }
      ]
    },
    {
      "Id": "8.2.5.a",
      "Name": "For a sample of system components, obtain and inspect system configuration settings to verify that password parameters are set to require that new passwords/passphrases cannot be the same as the four previously used passwords/passphrases",
      "Description": "If password history isn't maintained, the effectiveness of changing passwords is reduced, as previous passwords can be reused over and over. Requiring that passwords cannot be reused for a period of time reduces the likelihood that passwords that have been guessed or brute-forced will be used in the future. Note: Testing Procedure 8.2.5.b is an additional procedure that only applies if the entity being assessed is a service provider.",
      "Checks": [
        "iam_password_policy_reuse_24"
      ],
      "Attributes": [
        {
          "ItemId": "8.2.5.a",
          "Section": "Requirement 8: Identify and authenticate access to system components",
          "SubSection": "8.2.5 Do not allow an individual to submit a new password/passphrase that is the same as any of the last four passwords/passphrases he or she has used"
        }
      ]
    },
    {
      "Id": "8.2.5.b",
      "Name": "Additional testing procedure for service provider assessments only to review internal processes and customer/user documentation to verify that new non-consumer customer user passwords/passphrase cannot be the same as the previous four passwords",
      "Description": "If password history isn't maintained, the effectiveness of changing passwords is reduced, as previous passwords can be reused over and over. Requiring that passwords cannot be reused for a period of time reduces the likelihood that passwords that have been guessed or brute-forced will be used in the future. Note: Testing Procedure 8.2.5.b is an additional procedure that only applies if the entity being assessed is a service provider.",
      "Checks": [
        "iam_password_policy_reuse_24"
      ],
      "Attributes": [
        {
          "ItemId": "8.2.5.b",
          "Section": "Requirement 8: Identify and authenticate access to system components",
          "SubSection": "8.2.5 Do not allow an individual to submit a new password/passphrase that is the same as any of the last four passwords/passphrases he or she has used"
        }
      ]
    },
    {
      "Id": "8.3",
      "Name": "Secure all individual non-console administrative access and all remote access to the CDE using multi-factor authentication",
      "Description": "Note: Multi-factor authentication requires that a minimum of two of the three authentication methods (see Requirement 8.2 for descriptions of authentication methods) be used for authentication. Using one factor twice (for example, using two separate passwords) is not considered multi-factor authentication. Multi-factor authentication requires an individual to present a minimum of two separate forms of authentication (as described in Requirement 8.2), before access is granted. Multi-factor authentication provides additional assurance that the individual attempting to gain access is who they claim to be. With multi-factor authentication, an attacker would need to compromise at least two different authentication mechanisms, increasing the difficulty of compromise and thus reducing the risk. Multi-factor authentication is not required at both the system-level and application-level for a particular system component. Multi-factor authentication can be performed either upon authentication to the particular network or to the system component. Examples of multi-factor technologies include but are not limited to remote authentication and dial-in service (RADIUS) with tokens; terminal access controller access control system (TACACS) with tokens; and other technologies that facilitate multi- factor authentication.",
      "Checks": [
        "iam_user_mfa_enabled_console_access"
      ],
      "Attributes": [
        {
          "ItemId": "8.3",
          "Section": "Requirement 8: Identify and authenticate access to system components",
          "SubSection": "Requirement 8: Identify and authenticate access to system components"
        }
      ]
    },
    {
      "Id": "8.3.1",
      "Name": "Incorporate multi-factor authentication for all non-console access into the CDE for personnel with administrative access",
      "Description": "This requirement is intended to apply to all personnel with administrative access to the CDE. This requirement applies only to personnel with administrative access and only for non-console access to the CDE; it does not apply to application or system accounts performing automated functions. If the entity does not use segmentation to separate the CDE from the rest of their network, an administrator could use multi-factor authentication either when logging onto the CDE network or when logging onto a system. If the CDE is segmented from the rest of the entity’s network, an administrator would need to use multi- factor authentication when connecting to a CDE system from a non-CDE network. Multi-factor authentication can be implemented at network level or at system/application level; it does not have to be both. If the administrator uses MFA when logging into the CDE network, they do not also need to use MFA to log into a particular system or application within the CDE.",
      "Checks": [
        "iam_user_mfa_enabled_console_access"
      ],
      "Attributes": [
        {
          "ItemId": "8.3.1",
          "Section": "Requirement 8: Identify and authenticate access to system components",
          "SubSection": "8.3 Secure all individual non-console administrative access and all remote access to the CDE using multi-factor authentication"
        }
      ]
    },
    {
      "Id": "8.3.1.a",
      "Name": "Examine network and/or system configurations, as applicable, to verify multi-factor authentication is required for all non-console administrative access into the CDE",
      "Description": "This requirement is intended to apply to all personnel with administrative access to the CDE. This requirement applies only to personnel with administrative access and only for non-console access to the CDE; it does not apply to application or system accounts performing automated functions. If the entity does not use segmentation to separate the CDE from the rest of their network, an administrator could use multi-factor authentication either when logging onto the CDE network or when logging onto a system. If the CDE is segmented from the rest of the entity's network, an administrator would need to use multi- factor authentication when connecting to a CDE system from a non-CDE network. Multi-factor authentication can be implemented at network level or at system/application level; it does not have to be both. If the administrator uses MFA when logging into the CDE network, they do not also need to use MFA to log into a particular system or application within the CDE.",
      "Checks": [
        "iam_user_mfa_enabled_console_access"
      ],
      "Attributes": [
        {
          "ItemId": "8.3.1.a",
          "Section": "Requirement 8: Identify and authenticate access to system components",
          "SubSection": "8.3.1 Incorporate multi-factor authentication for all non-console access into the CDE for personnel with administrative access"
        }
      ]
    },
    {
      "Id": "8.3.2",
      "Name": "Incorporate multi-factor authentication for all remote network access (both user and administrator, and including third-party access for support or maintenance) originating from outside the entity's network",
      "Description": "This requirement is intended to apply to all personnel—including general users, administrators, and vendors (for support or maintenance) with remote access to the network—where that remote access could lead to access to the CDE. If remote access is to an entity's network that has appropriate segmentation, such that remote users cannot access or impact the cardholder data environment, multi-factor authentication for remote access to that network would not be required. However, multi- factor authentication is required for any remote access to networks with access to the cardholder data environment, and is recommended for all remote access to the entity's networks.",
      "Checks": [
        "iam_user_mfa_enabled_console_access"
      ],
      "Attributes": [
        {
          "ItemId": "8.3.2",
          "Section": "Requirement 8: Identify and authenticate access to system components",
          "SubSection": "8.3 Secure all individual non-console administrative access and all remote access to the CDE using multi-factor authentication"
        }
      ]
    },
    {
      "Id": "8.3.2.a",
      "Name": "Examine system configurations for remote access servers and systems to verify multi-factor authentication is required for all remote access by personnel, both user and administrator, and all third-party/vendor remote access (including access to applications and system components for support or maintenance purposes)",
      "Description": "This requirement is intended to apply to all personnel—including general users, administrators, and vendors (for support or maintenance) with remote access to the network—where that remote access could lead to access to the CDE. If remote access is to an entity's network that has appropriate segmentation, such that remote users cannot access or impact the cardholder data environment, multi-factor authentication for remote access to that network would not be required. However, multi- factor authentication is required for any remote access to networks with access to the cardholder data environment, and is recommended for all remote access to the entity's networks.",
      "Checks": [
        "iam_user_mfa_enabled_console_access"
      ],
      "Attributes": [
        {
          "ItemId": "8.3.2.a",
          "Section": "Requirement 8: Identify and authenticate access to system components",
          "SubSection": "8.3.2 Incorporate multi-factor authentication for all remote network access (both user and administrator, and including third-party access for support or maintenance) originating from outside the entity's network"
        }
      ]
    },
    {
      "Id": "8.5",
      "Name": "Do not use group, shared, or generic IDs, passwords, or other authentication methods",
      "Description": "Generic user IDs are disabled or removed. Shared user IDs do not exist for system administration and other critical functions. Shared and generic user IDs are not used to administer any system components. If multiple users share the same authentication credentials (for example, user account and password), it becomes impossible to trace system access and activities to an individual. This in turn prevents an entity from assigning accountability for, or having effective logging of, an individual's actions, since a given action could have been performed by anyone in the group that has knowledge of the authentication credentials.",
      "Checks": [],
      "Attributes": [
        {
          "ItemId": "8.5",
          "Section": "Requirement 8: Identify and authenticate access to system components",
          "SubSection": "Requirement 8: Identify and authenticate access to system components"
        }
      ]
    },
    {
      "Id": "8.5.a",
      "Name": "For a sample of system components, examine user ID lists to verify that generic user IDs are disabled or removed, shared user IDs for system administration activities and other critical functions do not exist or are shared, and generic user IDs are not used to administer any system components",
      "Description": "Generic user IDs are disabled or removed.  Shared user IDs for system administration activities and other critical functions do not exist.  Shared and generic user IDs are not used to administer any system components. If multiple users share the same authentication credentials (for example, user account and password), it becomes impossible to trace system access and activities to an individual. This in turn prevents an entity from assigning accountability for, or having effective logging of, an individual's actions, since a given action could have been performed by anyone in the group that has knowledge of the authentication credentials.",
      "Checks": [],
      "Attributes": [
        {
          "ItemId": "8.5.a",
          "Section": "Requirement 8: Identify and authenticate access to system components",
          "SubSection": "8.5 Do not use group, shared, or generic IDs, passwords, or other authentication methods"
        }
      ]
    },
    {
      "Id": "8.6",
      "Name": "Where other authentication mechanisms are used (for example, physical or logical security tokens, smart cards, certificates, etc.), use of these mechanisms must be assigned authentication mechanisms must be assigned to an individual account and not shared among multiple accounts, physical and/or logical controls must be in place to ensure only the intended account can use that mechanism to gain access",
      "Description": "If user authentication mechanisms such as tokens, smart cards, and certificates can be used by multiple accounts, it may be impossible to identify the individual using the authentication mechanism. Having physical and/or logical controls (for example, a PIN, biometric data, or a password) to uniquely identify the user of the account will prevent unauthorized users from gaining access through use of a shared authentication mechanism.",
      "Checks": [
        "iam_user_mfa_enabled_console_access"
      ],
      "Attributes": [
        {
          "ItemId": "8.6",
          "Section": "Requirement 8: Identify and authenticate access to system components",
          "SubSection": "Requirement 8: Identify and authenticate access to system components"
        }
      ]
    },
    {
      "Id": "8.6.c",
      "Name": "Examine system configuration settings and/or physical controls, as applicable, to verify that controls are implemented to ensure only the intended account can use that mechanism to gain access",
      "Description": "If user authentication mechanisms such as tokens, smart cards, and certificates can be used by multiple accounts, it may be impossible to identify the individual using the authentication mechanism. Having physical and/or logical controls (for example, a PIN, biometric data, or a password) to uniquely identify the user of the account will prevent unauthorized users from gaining access through use of a shared authentication mechanism.",
      "Checks": [
        "iam_user_mfa_enabled_console_access"
      ],
      "Attributes": [
        {
          "ItemId": "8.6.c",
          "Section": "Requirement 8: Identify and authenticate access to system components",
          "SubSection": "8.6 Where other authentication mechanisms are used (for example, physical or logical security tokens, smart cards, certificates, etc.), use of these mechanisms must be assigned authentication mechanisms must be assigned to an individual account and not shared among multiple accounts, physical and/or logical controls must be in place to ensure only the intended account can use that mechanism to gain access"
        }
      ]
    },
    {
      "Id": "8.7",
      "Name": "All access to any database containing cardholder data (including access by applications, administrators, and all other users) is restricted",
      "Description": "Access to any database containing cardholder data is restricted as follows: all user access to, user queries of, and user actions on databases are through programmatic methods. Only database administrators have the ability to directly access or query databases. Application IDs for database applications can only be used by the applications (and not by individual users or other non-application processes). Without user authentication for access to databases and applications, the potential for unauthorized or malicious access increases, and such access cannot be logged since the user has not been authenticated and is therefore not known to the system. Also, database access should be granted through programmatic methods only (for example, through stored procedures), rather than via direct access to the database by end users (except for DBAs, who may need direct access to the database for their administrative duties).",
      "Checks": [
        "rds_instance_iam_authentication_enabled"
      ],
      "Attributes": [
        {
          "ItemId": "8.7",
          "Section": "Requirement 8: Identify and authenticate access to system components",
          "SubSection": "Requirement 8: Identify and authenticate access to system components"
        }
      ]
    },
    {
      "Id": "8.7.a",
      "Name": "Review database and application configuration settings and verify that all users are authenticated prior to access",
      "Description": "Without user authentication for access to databases and applications, the potential for unauthorized or malicious access increases, and such access cannot be logged since the user has not been authenticated and is therefore not known to the system. Also, database access should be granted through programmatic methods only (for example, through stored procedures), rather than via direct access to the database by end users (except for DBAs, who may need direct access to the database for their administrative duties).",
      "Checks": [
        "rds_instance_iam_authentication_enabled"
      ],
      "Attributes": [
        {
          "ItemId": "8.7.a",
          "Section": "Requirement 8: Identify and authenticate access to system components",
          "SubSection": "8.7 All access to any database containing cardholder data (including access by applications, administrators, and all other users) is restricted"
        }
      ]
    },
    {
      "Id": "8.7.b",
      "Name": "Examine database and application configuration settings to verify that all user access to, user queries of, and user actions on (for example, move, copy, delete), the database are through programmatic methods only (for example, through stored procedures)",
      "Description": "Without user authentication for access to databases and applications, the potential for unauthorized or malicious access increases, and such access cannot be logged since the user has not been authenticated and is therefore not known to the system. Also, database access should be granted through programmatic methods only (for example, through stored procedures), rather than via direct access to the database by end users (except for DBAs, who may need direct access to the database for their administrative duties).",
      "Checks": [
        "rds_instance_iam_authentication_enabled"
      ],
      "Attributes": [
        {
          "ItemId": "8.7.b",
          "Section": "Requirement 8: Identify and authenticate access to system components",
          "SubSection": "8.7 All access to any database containing cardholder data (including access by applications, administrators, and all other users) is restricted"
        }
      ]
    },
    {
      "Id": "8.7.c",
      "Name": "Examine database access control settings and database application configuration settings to verify that user direct access to or queries of databases are restricted to database administrators",
      "Description": "Without user authentication for access to databases and applications, the potential for unauthorized or malicious access increases, and such access cannot be logged since the user has not been authenticated and is therefore not known to the system. Also, database access should be granted through programmatic methods only (for example, through stored procedures), rather than via direct access to the database by end users (except for DBAs, who may need direct access to the database for their administrative duties).",
      "Checks": [
        "rds_instance_iam_authentication_enabled"
      ],
      "Attributes": [
        {
          "ItemId": "8.7.c",
          "Section": "Requirement 8: Identify and authenticate access to system components",
          "SubSection": "8.7 All access to any database containing cardholder data (including access by applications, administrators, and all other users) is restricted"
        }
      ]
    },
    {
      "Id": "8.7.d",
      "Name": "Examine database access control settings, database application configuration settings, and the related application IDs to verify that application IDs can only be used by the applications (and not by individual users or other processes)",
      "Description": "Without user authentication for access to databases and applications, the potential for unauthorized or malicious access increases, and such access cannot be logged since the user has not been authenticated and is therefore not known to the system. Also, database access should be granted through programmatic methods only (for example, through stored procedures), rather than via direct access to the database by end users (except for DBAs, who may need direct access to the database for their administrative duties).",
      "Checks": [
        "rds_instance_iam_authentication_enabled"
      ],
      "Attributes": [
        {
          "ItemId": "8.7.d",
          "Section": "Requirement 8: Identify and authenticate access to system components",
          "SubSection": "8.7 All access to any database containing cardholder data (including access by applications, administrators, and all other users) is restricted"
        }
      ]
    },
    {
      "Id": "10.1",
      "Name": "Implement audit trails to link all access to system components to each individual user",
      "Description": "It is critical to have a process or system that links user access to system components accessed. This system generates audit logs and provides the ability to trace back suspicious activity to a specific user. This control verifies, through observation and interviewing the system administrator, that: audit trails are enabled and active for system components, access to system components is linked to individual users.",
      "Checks": [
        "elb_logging_enabled",
        "s3_bucket_server_access_logging_enabled",
        "elbv2_logging_enabled",
        "cloudtrail_s3_dataevents_read_enabled",
        "cloudwatch_log_group_retention_policy_specific_days_enabled",
        "apigateway_restapi_logging_enabled",
        "cloudtrail_multi_region_enabled",
        "wafv2_web_acl_logging_enabled",
        "cloudtrail_cloudwatch_logging_enabled",
        "vpc_flow_logs_enabled",
        "redshift_cluster_audit_logging"
      ],
      "Attributes": [
        {
          "ItemId": "10.1",
          "Section": "Requirement 10: Track and monitor all access to network resources and cardholder data",
          "SubSection": "Requirement 10: Track and monitor all access to network resources and cardholder data"
        }
      ]
    },
    {
      "Id": "10.2",
      "Name": "Through interviews of responsible personnel, observation of audit logs, and examination of audit log settings",
      "Description": "It is critical to have a process or system that links user access to system components accessed. This system generates audit logs and provides the ability to trace back suspicious activity to a specific user. This control verifies, through observation and interviewing the system administrator, that: audit trails are enabled and active for system components, access to system components is linked to individual users.",
      "Checks": [
        "opensearch_service_domains_audit_logging_enabled",
        "opensearch_service_domains_cloudwatch_logging_enabled",
        "s3_bucket_server_access_logging_enabled",
        "cloudtrail_s3_dataevents_read_enabled",
        "cloudtrail_multi_region_enabled",
        "cloudtrail_cloudwatch_logging_enabled",
        "redshift_cluster_audit_logging"
      ],
      "Attributes": [
        {
          "ItemId": "10.2",
          "Section": "Requirement 10: Track and monitor all access to network resources and cardholder data",
          "SubSection": "Requirement 10: Track and monitor all access to network resources and cardholder data"
        }
      ]
    },
    {
      "Id": "10.2.1",
      "Name": "All individual user accesses to cardholder data",
      "Description": "Malicious individuals could obtain knowledge of a user account with access to systems in the CDE, or they could create a new, unauthorized account in order to access cardholder data. A record of all individual accesses to cardholder data can identify which accounts may have been compromised or misused. This control verifies all individual access to cardholder data is loggedVerify all individual access to cardholder data is logged.",
      "Checks": [
        "s3_bucket_server_access_logging_enabled",
        "cloudtrail_s3_dataevents_read_enabled",
        "cloudtrail_multi_region_enabled",
        "cloudtrail_cloudwatch_logging_enabled",
        "redshift_cluster_audit_logging"
      ],
      "Attributes": [
        {
          "ItemId": "10.2.1",
          "Section": "Requirement 10: Track and monitor all access to network resources and cardholder data",
          "SubSection": "10.2 Through interviews of responsible personnel, observation of audit logs, and examination of audit log settings"
        }
      ]
    },
    {
      "Id": "10.2.2",
      "Name": "All actions taken by any individual with root or administrative privileges",
      "Description": "Accounts with increased privileges, such as the “administrator” or “root” account, have the potential to greatly impact the security or operational functionality of a system. Without a log of the activities performed, an organization is unable to trace any issues resulting from an administrative mistake or misuse of privilege back to the specific action and individual. This control verifies all actions taken by any individual with root or administrative privileges are logged.",
      "Checks": [
        "s3_bucket_server_access_logging_enabled",
        "cloudtrail_s3_dataevents_read_enabled",
        "cloudtrail_multi_region_enabled",
        "cloudtrail_cloudwatch_logging_enabled",
        "redshift_cluster_audit_logging"
      ],
      "Attributes": [
        {
          "ItemId": "10.2.2",
          "Section": "Requirement 10: Track and monitor all access to network resources and cardholder data",
          "SubSection": "10.2 Through interviews of responsible personnel, observation of audit logs, and examination of audit log settings"
        }
      ]
    },
    {
      "Id": "10.2.3",
      "Name": "Access to all audit trails",
      "Description": "Malicious users often attempt to alter audit logs to hide their actions, and a record of access allows an organization to trace any inconsistencies or potential tampering of the logs to an individual account. Having access to logs identifying changes, additions, and deletions can help retrace steps made by unauthorized personnel. This control verifies access to all audit trails is logged.",
      "Checks": [
        "s3_bucket_server_access_logging_enabled",
        "cloudtrail_s3_dataevents_read_enabled",
        "cloudtrail_multi_region_enabled",
        "cloudtrail_cloudwatch_logging_enabled",
        "redshift_cluster_audit_logging"
      ],
      "Attributes": [
        {
          "ItemId": "10.2.3",
          "Section": "Requirement 10: Track and monitor all access to network resources and cardholder data",
          "SubSection": "10.2 Through interviews of responsible personnel, observation of audit logs, and examination of audit log settings"
        }
      ]
    },
    {
      "Id": "10.2.4",
      "Name": "Invalid logical access attempts",
      "Description": "Malicious users often attempt to alter audit logs to hide their actions, and a record of access allows an organization to trace any inconsistencies or potential tampering of the logs to an individual account. Having access to logs identifying changes, additions, and deletions can help retrace steps made by unauthorized personnel. This control verifies access to all audit trails is logged.",
      "Checks": [
        "s3_bucket_server_access_logging_enabled",
        "cloudtrail_s3_dataevents_read_enabled",
        "cloudtrail_multi_region_enabled",
        "cloudtrail_cloudwatch_logging_enabled",
        "redshift_cluster_audit_logging"
      ],
      "Attributes": [
        {
          "ItemId": "10.2.4",
          "Section": "Requirement 10: Track and monitor all access to network resources and cardholder data",
          "SubSection": "10.2 Through interviews of responsible personnel, observation of audit logs, and examination of audit log settings"
        }
      ]
    },
    {
      "Id": "10.2.5",
      "Name": "Use of and changes to identification and authentication mechanisms—including but not limited to creation of new accounts and elevation of privileges—and all changes, additions, or deletions to accounts with root or administrative privileges",
      "Description": "Without knowing who was logged on at the time of an incident, it is impossible to identify the accounts that may have been used. Additionally, malicious users may attempt to manipulate the authentication controls with the intent of bypassing them or impersonating a valid account.",
      "Checks": [],
      "Attributes": [
        {
          "ItemId": "10.2.5",
          "Section": "Requirement 10: Track and monitor all access to network resources and cardholder data",
          "SubSection": "10.2 Through interviews of responsible personnel, observation of audit logs, and examination of audit log settings"
        }
      ]
    },
    {
      "Id": "10.2.5.a",
      "Name": "Verify use of identification and authentication mechanisms is logged",
      "Description": "Without knowing who was logged on at the time of an incident, it is impossible to identify the accounts that may have been used. Additionally, malicious users may attempt to manipulate the authentication controls with the intent of bypassing them or impersonating a valid account.",
      "Checks": [],
      "Attributes": [
        {
          "ItemId": "10.2.5.a",
          "Section": "Requirement 10: Track and monitor all access to network resources and cardholder data",
          "SubSection": "10.2.5 Use of and changes to identification and authentication mechanisms—including but not limited to creation of new accounts and elevation of privileges—and all changes, additions, or deletions to accounts with root or administrative privileges"
        }
      ]
    },
    {
      "Id": "10.2.6",
      "Name": "Initialization, stopping, or pausing of the audit logs",
      "Description": "Turning the audit logs off (or pausing them) prior to performing illicit activities is a common practice for malicious users wishing to avoid detection. Initialization of audit logs could indicate that the log function was disabled by a user to hide their actions. This control verifies the following are logged: initialization of audit logs, stopping or pausing of audit logs.",
      "Checks": [
        "s3_bucket_server_access_logging_enabled",
        "cloudtrail_s3_dataevents_read_enabled",
        "cloudtrail_multi_region_enabled",
        "cloudtrail_cloudwatch_logging_enabled",
        "redshift_cluster_audit_logging"
      ],
      "Attributes": [
        {
          "ItemId": "10.2.6",
          "Section": "Requirement 10: Track and monitor all access to network resources and cardholder data",
          "SubSection": "10.2 Through interviews of responsible personnel, observation of audit logs, and examination of audit log settings"
        }
      ]
    },
    {
      "Id": "10.2.7",
      "Name": "Creation and deletion of system- level objects",
      "Description": "Malicious software, such as malware, often creates or replaces system level objects on the target system in order to control a particular function or operation on that system. By logging when system-level objects, such as database tables or stored procedures, are created or deleted, it will be easier to determine whether such modifications were authorized. This control verifies creation and deletion of system level objects are logged.",
      "Checks": [
        "s3_bucket_server_access_logging_enabled",
        "cloudtrail_s3_dataevents_read_enabled",
        "cloudtrail_multi_region_enabled",
        "cloudtrail_cloudwatch_logging_enabled",
        "redshift_cluster_audit_logging"
      ],
      "Attributes": [
        {
          "ItemId": "10.2.7",
          "Section": "Requirement 10: Track and monitor all access to network resources and cardholder data",
          "SubSection": "10.2 Through interviews of responsible personnel, observation of audit logs, and examination of audit log settings"
        }
      ]
    },
    {
      "Id": "10.3",
      "Name": "Record at least the following audit trail entries for all system components for each event",
      "Description": "By recording these details for the auditable events at 10.2, a potential compromise can be quickly identified, and with sufficient detail to know who, what, where, when, and how. Through interviews and observation of audit logs, for each auditable event (from 10.2), perform the following:",
      "Checks": [
        "s3_bucket_server_access_logging_enabled",
        "cloudtrail_s3_dataevents_read_enabled",
        "cloudtrail_multi_region_enabled",
        "cloudtrail_cloudwatch_logging_enabled",
        "redshift_cluster_audit_logging"
      ],
      "Attributes": [
        {
          "ItemId": "10.3",
          "Section": "Requirement 10: Track and monitor all access to network resources and cardholder data",
          "SubSection": "Requirement 10: Track and monitor all access to network resources and cardholder data"
        }
      ]
    },
    {
      "Id": "10.3.1",
      "Name": "User identification",
      "Description": "By recording these details for the auditable events at 10.2, a potential compromise can be quickly identified, and with sufficient detail to know who, what, where, when, and how. This control verifies user identification is included in log entries.",
      "Checks": [
        "s3_bucket_server_access_logging_enabled",
        "cloudtrail_s3_dataevents_read_enabled",
        "cloudtrail_multi_region_enabled",
        "cloudtrail_cloudwatch_logging_enabled",
        "redshift_cluster_audit_logging"
      ],
      "Attributes": [
        {
          "ItemId": "10.3.1",
          "Section": "Requirement 10: Track and monitor all access to network resources and cardholder data",
          "SubSection": "10.3 Record at least the following audit trail entries for all system components for each event"
        }
      ]
    },
    {
      "Id": "10.3.2",
      "Name": "Type of event",
      "Description": "By recording these details for the auditable events at 10.2, a potential compromise can be quickly identified, and with sufficient detail to know who, what, where, when, and how. This control verifies event is included in log entries.",
      "Checks": [
        "s3_bucket_server_access_logging_enabled",
        "cloudtrail_s3_dataevents_read_enabled",
        "cloudtrail_multi_region_enabled",
        "cloudtrail_cloudwatch_logging_enabled",
        "redshift_cluster_audit_logging"
      ],
      "Attributes": [
        {
          "ItemId": "10.3.2",
          "Section": "Requirement 10: Track and monitor all access to network resources and cardholder data",
          "SubSection": "10.3 Record at least the following audit trail entries for all system components for each event"
        }
      ]
    },
    {
      "Id": "10.3.3",
      "Name": "Date and time",
      "Description": "By recording these details for the auditable events at 10.2, a potential compromise can be quickly identified, and with sufficient detail to know who, what, where, when, and how. This verifies date and time stamp is included in log entries.",
      "Checks": [
        "s3_bucket_server_access_logging_enabled",
        "cloudtrail_s3_dataevents_read_enabled",
        "cloudtrail_multi_region_enabled",
        "cloudtrail_cloudwatch_logging_enabled",
        "redshift_cluster_audit_logging"
      ],
      "Attributes": [
        {
          "ItemId": "10.3.3",
          "Section": "Requirement 10: Track and monitor all access to network resources and cardholder data",
          "SubSection": "10.3 Record at least the following audit trail entries for all system components for each event"
        }
      ]
    },
    {
      "Id": "10.3.4",
      "Name": "Success or failure indication",
      "Description": "By recording these details for the auditable events at 10.2, a potential compromise can be quickly identified, and with sufficient detail to know who, what, where, when, and how. This control verifies success or failure indication is included in log entries.",
      "Checks": [
        "s3_bucket_server_access_logging_enabled",
        "cloudtrail_s3_dataevents_read_enabled",
        "cloudtrail_multi_region_enabled",
        "cloudtrail_cloudwatch_logging_enabled",
        "redshift_cluster_audit_logging"
      ],
      "Attributes": [
        {
          "ItemId": "10.3.4",
          "Section": "Requirement 10: Track and monitor all access to network resources and cardholder data",
          "SubSection": "10.3 Record at least the following audit trail entries for all system components for each event"
        }
      ]
    },
    {
      "Id": "10.3.5",
      "Name": "Origination of event",
      "Description": "By recording these details for the auditable events at 10.2, a potential compromise can be quickly identified, and with sufficient detail to know who, what, where, when, and how. This control verifies origination of event is included in log entries.",
      "Checks": [
        "s3_bucket_server_access_logging_enabled",
        "cloudtrail_s3_dataevents_read_enabled",
        "cloudtrail_multi_region_enabled",
        "cloudtrail_cloudwatch_logging_enabled",
        "redshift_cluster_audit_logging"
      ],
      "Attributes": [
        {
          "ItemId": "10.3.5",
          "Section": "Requirement 10: Track and monitor all access to network resources and cardholder data",
          "SubSection": "10.3 Record at least the following audit trail entries for all system components for each event"
        }
      ]
    },
    {
      "Id": "10.3.6",
      "Name": "Identity or name of affected data, system component, or resource",
      "Description": "By recording these details for the auditable events at 10.2, a potential compromise can be quickly identified, and with sufficient detail to know who, what, where, when, and how. This control verifies identity or name of affected data, system component, or resources is included in log entries.",
      "Checks": [
        "s3_bucket_server_access_logging_enabled",
        "cloudtrail_s3_dataevents_read_enabled",
        "cloudtrail_multi_region_enabled",
        "cloudtrail_cloudwatch_logging_enabled",
        "redshift_cluster_audit_logging"
      ],
      "Attributes": [
        {
          "ItemId": "10.3.6",
          "Section": "Requirement 10: Track and monitor all access to network resources and cardholder data",
          "SubSection": "10.3 Record at least the following audit trail entries for all system components for each event"
        }
      ]
    },
    {
      "Id": "10.5",
      "Name": "Interview system administrators and examine system configurations and permissions to verify that audit trails are secured so that they cannot be altered",
      "Description": "Often a malicious individual who has entered the network will attempt to edit the audit logs in order to hide their activity. Without adequate protection of audit logs, their completeness, accuracy, and integrity cannot be guaranteed, and the audit logs can be rendered useless as an investigation tool after a compromise. This control checks secure audit trails so they cannot be altered.",
      "Checks": [
        "s3_bucket_server_access_logging_enabled",
        "cloudtrail_s3_dataevents_read_enabled",
        "cloudtrail_multi_region_enabled",
        "cloudtrail_cloudwatch_logging_enabled",
        "redshift_cluster_audit_logging",
        "config_recorder_all_regions_enabled",
        "s3_bucket_object_versioning",
        "cloudtrail_log_file_validation_enabled",
        "s3_bucket_cross_region_replication"
      ],
      "Attributes": [
        {
          "ItemId": "10.5",
          "Section": "Requirement 10: Track and monitor all access to network resources and cardholder data",
          "SubSection": "Requirement 10: Track and monitor all access to network resources and cardholder data"
        }
      ]
    },
    {
      "Id": "10.5.2",
      "Name": "Current audit trail files are protected from unauthorized modifications via access control mechanisms, physical segregation, and/or network segregation",
      "Description": "Adequate protection of the audit logs includes strong access control (limit access to logs based on “need to know” only), and use of physical or network segregation to make the logs harder to find and modify. Promptly backing up the logs to a centralized log server or media that is difficult to alter keeps the logs protected even if the system generating the logs becomes compromised. Protect audit trail files from unauthorized modifications.",
      "Checks": [
        "config_recorder_all_regions_enabled",
        "s3_bucket_object_versioning",
        "cloudtrail_log_file_validation_enabled"
      ],
      "Attributes": [
        {
          "ItemId": "10.5.2",
          "Section": "Requirement 10: Track and monitor all access to network resources and cardholder data",
          "SubSection": "10.5 Interview system administrators and examine system configurations and permissions to verify that audit trails are secured so that they cannot be altered"
        }
      ]
    },
    {
      "Id": "10.5.3",
      "Name": "Current audit trail files are promptly backed up to a centralized log server or media that is difficult to alter",
      "Description": "Adequate protection of the audit logs includes strong access control (limit access to logs based on “need to know” only), and use of physical or network segregation to make the logs harder to find and modify. Promptly backing up the logs to a centralized log server or media that is difficult to alter keeps the logs protected even if the system generating the logs becomes compromised. Promptly back up audit trail files to a centralized log server or media that is difficult to alter.",
      "Checks": [
        "s3_bucket_object_versioning",
        "cloudtrail_cloudwatch_logging_enabled",
        "s3_bucket_cross_region_replication"
      ],
      "Attributes": [
        {
          "ItemId": "10.5.3",
          "Section": "Requirement 10: Track and monitor all access to network resources and cardholder data",
          "SubSection": "10.5 Interview system administrators and examine system configurations and permissions to verify that audit trails are secured so that they cannot be altered"
        }
      ]
    },
    {
      "Id": "10.5.4",
      "Name": "Logs for external-facing technologies (for example, wireless, firewalls, DNS, mail) are written onto a secure, centralized, internal log server or media",
      "Description": "By writing logs from external-facing technologies such as wireless, firewalls, DNS, and mail servers, the risk of those logs being lost or altered is lowered, as they are more secure within the internal network. Logs may be written directly, or offloaded or copied from external systems, to the secure internal system or media.",
      "Checks": [
        "s3_bucket_server_access_logging_enabled",
        "cloudtrail_s3_dataevents_read_enabled",
        "cloudtrail_multi_region_enabled",
        "cloudtrail_cloudwatch_logging_enabled",
        "redshift_cluster_audit_logging"
      ],
      "Attributes": [
        {
          "ItemId": "10.5.4",
          "Section": "Requirement 10: Track and monitor all access to network resources and cardholder data",
          "SubSection": "10.5 Interview system administrators and examine system configurations and permissions to verify that audit trails are secured so that they cannot be altered"
        }
      ]
    },
    {
      "Id": "10.5.5",
      "Name": "Examine system settings, monitored files, and results from monitoring activities to verify the use of file-integrity monitoring or change-detection software on logs",
      "Description": "File-integrity monitoring or change-detection systems check for changes to critical files, and notify when such changes are noted. For file- integrity monitoring purposes, an entity usually monitors files that don't regularly change, but when changed indicate a possible compromise.",
      "Checks": [
        "s3_bucket_object_versioning",
        "cloudtrail_log_file_validation_enabled"
      ],
      "Attributes": [
        {
          "ItemId": "10.5.5",
          "Section": "Requirement 10: Track and monitor all access to network resources and cardholder data",
          "SubSection": "10.5 Interview system administrators and examine system configurations and permissions to verify that audit trails are secured so that they cannot be altered"
        }
      ]
    },
    {
      "Id": "10.7",
      "Name": "Retain audit trail history for at least one year, with a minimum of three months immediately available for analysis (for example, online, archived, or restorable from backup)",
      "Description": "Retaining logs for at least a year allows for the fact that it often takes a while to notice that a compromise has occurred or is occurring, and allows investigators sufficient log history to better determine the length of time of a potential breach and potential system(s) impacted. By having three months of logs immediately available, an entity can quickly identify and minimize impact of a data breach. Storing logs in off-line locations could prevent them from being readily available, resulting in longer time frames to restore log data, perform analysis, and identify impacted systems or data.",
      "Checks": [
        "cloudwatch_log_group_retention_policy_specific_days_enabled",
        "s3_bucket_lifecycle_enabled"
      ],
      "Attributes": [
        {
          "ItemId": "10.7",
          "Section": "Requirement 10: Track and monitor all access to network resources and cardholder data",
          "SubSection": "Requirement 10: Track and monitor all access to network resources and cardholder data"
        }
      ]
    },
    {
      "Id": "10.7.a",
      "Name": "Examine security policies and procedures to verify that they define audit log retention policies and procedures for retaining audit logs for at least one year, with a minimum of three months immediately available online",
      "Description": "Retaining logs for at least a year allows for the fact that it often takes a while to notice that a compromise has occurred or is occurring, and allows investigators sufficient log history to better determine the length of time of a potential breach and potential system(s) impacted. By having three months of logs immediately available, an entity can quickly identify and minimize impact of a data breach. Storing logs in off-line locations could prevent them from being readily available, resulting in longer time frames to restore log data, perform analysis, and identify impacted systems or data.",
      "Checks": [
        "s3_bucket_lifecycle_enabled"
      ],
      "Attributes": [
        {
          "ItemId": "10.7.a",
          "Section": "Requirement 10: Track and monitor all access to network resources and cardholder data",
          "SubSection": "10.7 Retain audit trail history for at least one year, with a minimum of three months immediately available for analysis (for example, online, archived, or restorable from backup)"
        }
      ]
    },
    {
      "Id": "10.7.b",
      "Name": "Interview personnel and examine audit logs to verify that audit logs are retained for at least one year",
      "Description": "Retaining logs for at least a year allows for the fact that it often takes a while to notice that a compromise has occurred or is occurring, and allows investigators sufficient log history to better determine the length of time of a potential breach and potential system(s) impacted. By having three months of logs immediately available, an entity can quickly identify and minimize impact of a data breach. Storing logs in off-line locations could prevent them from being readily available, resulting in longer time frames to restore log data, perform analysis, and identify impacted systems or data.",
      "Checks": [
        "cloudwatch_log_group_retention_policy_specific_days_enabled"
      ],
      "Attributes": [
        {
          "ItemId": "10.7.b",
          "Section": "Requirement 10: Track and monitor all access to network resources and cardholder data",
          "SubSection": "10.7 Retain audit trail history for at least one year, with a minimum of three months immediately available for analysis (for example, online, archived, or restorable from backup)"
        }
      ]
    },
    {
      "Id": "10.7.c",
      "Name": "Interview personnel and observe processes to verify that at least the last three months' logs are immediately available for analysis",
      "Description": "Retaining logs for at least a year allows for the fact that it often takes a while to notice that a compromise has occurred or is occurring, and allows investigators sufficient log history to better determine the length of time of a potential breach and potential system(s) impacted. By having three months of logs immediately available, an entity can quickly identify and minimize impact of a data breach. Storing logs in off-line locations could prevent them from being readily available, resulting in longer time frames to restore log data, perform analysis, and identify impacted systems or data.",
      "Checks": [
        "cloudwatch_log_group_retention_policy_specific_days_enabled"
      ],
      "Attributes": [
        {
          "ItemId": "10.7.c",
          "Section": "Requirement 10: Track and monitor all access to network resources and cardholder data",
          "SubSection": "10.7 Retain audit trail history for at least one year, with a minimum of three months immediately available for analysis (for example, online, archived, or restorable from backup)"
        }
      ]
    },
    {
      "Id": "10.8",
      "Name": "Additional requirement for service providers only to implement a process for the timely detection and reporting of failures of critical security control systems, including but not limited to failure of firewalls, IDS/IPS, FIM, anti-virus, physical access controls, logical access controls, audit logging mechanisms and segmentation controls",
      "Description": "Note: This requirement applies only when the entity being assessed is a service provider. Without formal processes to detect and alert when critical security controls fail, failures may go undetected for extended periods and provide attackers ample time to compromise systems and steal sensitive data from the cardholder data environment. The specific types of failures may vary depending on the function of the device and technology in use. Typical failures include a system ceasing to perform its security function or not functioning in its intended manner; for example, a firewall erasing all its rules or going offline.",
      "Checks": [
        "opensearch_service_domains_audit_logging_enabled",
        "opensearch_service_domains_cloudwatch_logging_enabled"
      ],
      "Attributes": [
        {
          "ItemId": "10.8",
          "Section": "Requirement 10: Track and monitor all access to network resources and cardholder data",
          "SubSection": "Requirement 10: Track and monitor all access to network resources and cardholder data"
        }
      ]
    },
    {
      "Id": "10.8.1",
      "Name": "Additional requirement for service providers only: Respond to failures of any critical security controls in a timely manner",
      "Description": "Processes for responding to failures in security controls must include restoring security functions, identifying and documenting the duration (date and time start to end) of the security failure, identifying and documenting cause(s) of failure, including root cause, and documenting remediation required to address root cause, identifying and addressing any security issues that arose during the failure, performing a risk assessment to determine whether further actions are required as a result of the security failure, implementing controls to prevent cause of failure from reoccurring and resuming monitoring of security controls. Note: This requirement applies only when the entity being assessed is a service provider. If critical security control failures alerts are not quickly and effectively responded to, attackers may use this time to insert malicious software, gain control of a system, or steal data from the entity's environment. Documented evidence (e.g., records within a problem management system) should support that processes and procedures are in place to respond to security failures. In addition, personnel should be aware of their responsibilities in the event of a failure. Actions and responses to the failure should be captured in the documented evidence.",
      "Checks": [],
      "Attributes": [
        {
          "ItemId": "10.8.1",
          "Section": "Requirement 10: Track and monitor all access to network resources and cardholder data",
          "SubSection": "10.8 Additional requirement for service providers only to implement a process for the timely detection and reporting of failures of critical security control systems, including but not limited to failure of firewalls, IDS/IPS, FIM, anti-virus, physical access controls, logical access controls, audit logging mechanisms and segmentation controls"
        }
      ]
    },
    {
      "Id": "10.8.1.a",
      "Name": "Examine documented policies and procedures and interview personnel to verify processes are defined and implemented to respond to a security control failure",
      "Description": "This include restoring security functions, identifying and documenting the duration (date and time start to end) of the security failure, identifying and documenting cause(s) of failure, including root cause, and documenting remediation required to address root cause, identifying and addressing any security issues that arose during the failure, performing a risk assessment to determine whether further actions are required as a result of the security failure, implementing controls to prevent cause of failure from reoccurring and resuming monitoring of security controls. Note: This requirement applies only when the entity being assessed is a service provider. If critical security control failures alerts are not quickly and effectively responded to, attackers may use this time to insert malicious software, gain control of a system, or steal data from the entity's environment. Documented evidence (e.g., records within a problem management system) should support that processes and procedures are in place to respond to security failures. In addition, personnel should be aware of their responsibilities in the event of a failure. Actions and responses to the failure should be captured in the documented evidence.",
      "Checks": [],
      "Attributes": [
        {
          "ItemId": "10.8.1.a",
          "Section": "Requirement 10: Track and monitor all access to network resources and cardholder data",
          "SubSection": "10.8.1 Additional requirement for service providers only: Respond to failures of any critical security controls in a timely manner"
        }
      ]
    },
    {
      "Id": "10.8.b",
      "Name": "Examine detection and alerting processes and interview personnel to verify that processes are implemented for all critical security controls",
      "Description": "The failure of a critical security control results in the generation of an alert.10.8.b Examine detection and alerting processes and interview personnel to verify that processes are implemented for all critical security controls, and that failure of a critical security control results in the generation of an alert. Note: This requirement applies only when the entity being assessed is a service provider. Without formal processes to detect and alert when critical security controls fail, failures may go undetected for extended periods and provide attackers ample time to compromise systems and steal sensitive data from the cardholder data environment. The specific types of failures may vary depending on the function of the device and technology in use. Typical failures include a system ceasing to perform its security function or not functioning in its intended manner; for example, a firewall erasing all its rules or going offline.",
      "Checks": [
        "opensearch_service_domains_audit_logging_enabled",
        "opensearch_service_domains_cloudwatch_logging_enabled"
      ],
      "Attributes": [
        {
          "ItemId": "10.8.b",
          "Section": "Requirement 10: Track and monitor all access to network resources and cardholder data",
          "SubSection": "10.8 Additional requirement for service providers only to implement a process for the timely detection and reporting of failures of critical security control systems, including but not limited to failure of firewalls, IDS/IPS, FIM, anti-virus, physical access controls, logical access controls, audit logging mechanisms and segmentation controls"
        }
      ]
    },
    {
      "Id": "11.4",
      "Name": "Use intrusion-detection and/or intrusion-prevention techniques to detect and/or prevent intrusions into the network",
      "Description": "Monitor all traffic at the perimeter of the cardholder data environment as well as at critical points in the cardholder data environment, and alert personnel to suspected compromises. Keep all intrusion-detection and prevention engines, baselines, and signatures up to date. Intrusion detection and/or intrusion prevention techniques (such as IDS/IPS) compare the traffic coming into the network with known “signatures” and/or behaviors of thousands of compromise types (hacker tools, Trojans, and other malware), and send alerts and/or stop the attempt as it happens. Without a proactive approach to unauthorized activity detection, attacks on (or misuse of) computer resources could go unnoticed in real time. Security alerts generated by these techniques should be monitored so that the attempted intrusions can be stopped.",
      "Checks": [
        "guardduty_is_enabled"
      ],
      "Attributes": [
        {
          "ItemId": "11.4",
          "Section": "Requirement 11: Regularly test security systems and processes",
          "SubSection": "Requirement 11: Regularly test security systems and processes"
        }
      ]
    },
    {
      "Id": "11.4.a",
      "Name": "Examine system configurations and network diagrams to verify that techniques (such as intrusion-detection systems and/or intrusion-prevention systems) are in place to monitor all traffic at the perimeter of the cardholder data environment and at critical points in the cardholder data environment",
      "Description": "Intrusion detection and/or intrusion prevention techniques (such as IDS/IPS) compare the traffic coming into the network with known “signatures” and/or behaviors of thousands of compromise types (hacker tools, Trojans, and other malware), and send alerts and/or stop the attempt as it happens. Without a proactive approach to unauthorized activity detection, attacks on (or misuse of) computer resources could go unnoticed in real time. Security alerts generated by these techniques should be monitored so that the attempted intrusions can be stopped.",
      "Checks": [
        "guardduty_is_enabled"
      ],
      "Attributes": [
        {
          "ItemId": "11.4.a",
          "Section": "Requirement 11: Regularly test security systems and processes",
          "SubSection": "11.4 Use intrusion-detection and/or intrusion-prevention techniques to detect and/or prevent intrusions into the network"
        }
      ]
    },
    {
      "Id": "11.4.b",
      "Name": "Examine system configurations and interview responsible personnel to confirm intrusion-detection and/or intrusion-prevention techniques alert personnel of suspected compromises",
      "Description": "Intrusion detection and/or intrusion prevention techniques (such as IDS/IPS) compare the traffic coming into the network with known “signatures” and/or behaviors of thousands of compromise types (hacker tools, Trojans, and other malware), and send alerts and/or stop the attempt as it happens. Without a proactive approach to unauthorized activity detection, attacks on (or misuse of) computer resources could go unnoticed in real time. Security alerts generated by these techniques should be monitored so that the attempted intrusions can be stopped.",
      "Checks": [
        "guardduty_is_enabled"
      ],
      "Attributes": [
        {
          "ItemId": "11.4.b",
          "Section": "Requirement 11: Regularly test security systems and processes",
          "SubSection": "11.4 Use intrusion-detection and/or intrusion-prevention techniques to detect and/or prevent intrusions into the network"
        }
      ]
    },
    {
      "Id": "11.4.c",
      "Name": "Examine IDS/IPS configurations and vendor documentation to verify intrusion-detection and/or intrusion- prevention techniques are configured, maintained, and updated per vendor instructions to ensure optimal protection",
      "Description": "Intrusion detection and/or intrusion prevention techniques (such as IDS/IPS) compare the traffic coming into the network with known “signatures” and/or behaviors of thousands of compromise types (hacker tools, Trojans, and other malware), and send alerts and/or stop the attempt as it happens. Without a proactive approach to unauthorized activity detection, attacks on (or misuse of) computer resources could go unnoticed in real time. Security alerts generated by these techniques should be monitored so that the attempted intrusions can be stopped.",
      "Checks": [
        "guardduty_is_enabled"
      ],
      "Attributes": [
        {
          "ItemId": "11.4.c",
          "Section": "Requirement 11: Regularly test security systems and processes",
          "SubSection": "11.4 Use intrusion-detection and/or intrusion-prevention techniques to detect and/or prevent intrusions into the network"
        }
      ]
    },
    {
      "Id": "11.5",
      "Name": "Deploy a change-detection mechanism (for example, file-integrity monitoring tools) to alert personnel to unauthorized modification (including changes, additions, and deletions) of critical system files, configuration files, or content files; and configure the software to perform critical file comparisons at least weekly",
      "Description": "Change-detection solutions such as file-integrity monitoring (FIM) tools check for changes, additions, and deletions to critical files, and notify when such changes are detected. If not implemented properly and the output of the change-detection solution monitored, a malicious individual could add, remove, or alter configuration file contents, operating system programs, or application executables. Unauthorized changes, if undetected, could render existing security controls ineffective and/or result in cardholder data being stolen with no perceptible impact to normal processing.",
      "Checks": [
        "config_recorder_all_regions_enabled"
      ],
      "Attributes": [
        {
          "ItemId": "11.5",
          "Section": "Requirement 11: Regularly test security systems and processes",
          "SubSection": "Requirement 11: Regularly test security systems and processes"
        }
      ]
    },
    {
      "Id": "11.5.a",
      "Name": "Verify the use of a change-detection mechanism by observing system settings and monitored files, as well as reviewing results from monitoring activities",
      "Description": "Examples of files that should be monitored are system executables, application executables, configuration and parameter files, centrally stored, historical or archived, log and audit files and additional critical files determined by entity (for example, through risk assessment or other means). Change-detection solutions such as file-integrity monitoring (FIM) tools check for changes, additions, and deletions to critical files, and notify when such changes are detected. If not implemented properly and the output of the change-detection solution monitored, a malicious individual could add, remove, or alter configuration file contents, operating system programs, or application executables. Unauthorized changes, if undetected, could render existing security controls ineffective and/or result in cardholder data being stolen with no perceptible impact to normal processing.",
      "Checks": [
        "config_recorder_all_regions_enabled"
      ],
      "Attributes": [
        {
          "ItemId": "11.5.a",
          "Section": "Requirement 11: Regularly test security systems and processes",
          "SubSection": "11.5 Deploy a change-detection mechanism (for example, file-integrity monitoring tools) to alert personnel to unauthorized modification (including changes, additions, and deletions) of critical system files, configuration files, or content files; and configure the software to perform critical file comparisons at least weekly"
        }
      ]
    },
    {
      "Id": "11.5.b",
      "Name": "Verify the mechanism is configured to alert personnel to unauthorized modification (including changes, additions, and deletions) of critical files, and to perform critical file comparisons at least weekly",
      "Description": "",
      "Checks": [
        "config_recorder_all_regions_enabled"
      ],
      "Attributes": [
        {
          "ItemId": "11.5.b",
          "Section": "Requirement 11: Regularly test security systems and processes",
          "SubSection": "11.5 Deploy a change-detection mechanism (for example, file-integrity monitoring tools) to alert personnel to unauthorized modification (including changes, additions, and deletions) of critical system files, configuration files, or content files; and configure the software to perform critical file comparisons at least weekly"
        }
      ]
    }
  ]
}