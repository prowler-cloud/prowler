# This file contains a script that gets the info from a scan

from prowler.lib.scan.scan import Scan
from prowler.providers.aws.aws_provider import AwsProvider

# We collect the checks to execute, 20 from multiple services in AWS to test the scan

checks_to_execute = [
    "accessanalyzer_enabled",
    "accessanalyzer_enabled_without_findings",
    "account_maintain_current_contact_details",
    "account_maintain_different_contact_details_to_security_billing_and_operations",
    "account_security_contact_information_is_registered",
    "account_security_questions_are_registered_in_the_aws_account",
    "acm_certificates_expiration_check",
    "acm_certificates_transparency_logs_enabled",
    "apigateway_restapi_authorizers_enabled",
    "apigateway_restapi_client_certificate_enabled",
    "apigateway_restapi_logging_enabled",
    "apigateway_restapi_public",
    "apigateway_restapi_public_with_authorizer",
    "apigateway_restapi_waf_acl_attached",
    "apigatewayv2_api_access_logging_enabled",
    "apigatewayv2_api_authorizers_enabled",
    "appstream_fleet_default_internet_access_disabled",
    "appstream_fleet_maximum_session_duration",
    "appstream_fleet_session_disconnect_timeout",
    "appstream_fleet_session_idle_disconnect_timeout",
    "athena_workgroup_encryption",
    "athena_workgroup_enforce_configuration",
    "autoscaling_find_secrets_ec2_launch_configuration",
    "autoscaling_group_multiple_az",
    "awslambda_function_invoke_api_operations_cloudtrail_logging_enabled",
    "awslambda_function_no_secrets_in_code",
    "awslambda_function_no_secrets_in_variables",
    "awslambda_function_not_publicly_accessible",
    "awslambda_function_url_cors_policy",
    "awslambda_function_url_public",
    "awslambda_function_using_supported_runtimes",
    "backup_plans_exist",
    "backup_reportplans_exist",
    "backup_vaults_encrypted",
    "backup_vaults_exist",
    "cloudformation_stack_outputs_find_secrets",
    "cloudformation_stacks_termination_protection_enabled",
    "cloudfront_distributions_field_level_encryption_enabled",
    "cloudfront_distributions_geo_restrictions_enabled",
    "cloudfront_distributions_https_enabled",
    "cloudfront_distributions_logging_enabled",
    "cloudfront_distributions_using_deprecated_ssl_protocols",
    "cloudfront_distributions_using_waf",
    "cloudtrail_bucket_requires_mfa_delete",
    "cloudtrail_cloudwatch_logging_enabled",
    "cloudtrail_insights_exist",
    "cloudtrail_kms_encryption_enabled",
    "cloudtrail_log_file_validation_enabled",
    "cloudtrail_logs_s3_bucket_access_logging_enabled",
    "cloudtrail_logs_s3_bucket_is_not_publicly_accessible",
    "cloudtrail_multi_region_enabled",
    "cloudtrail_multi_region_enabled_logging_management_events",
    "cloudtrail_s3_dataevents_read_enabled",
    "cloudtrail_s3_dataevents_write_enabled",
    "cloudwatch_changes_to_network_acls_alarm_configured",
    "cloudwatch_changes_to_network_gateways_alarm_configured",
    "cloudwatch_changes_to_network_route_tables_alarm_configured",
    "cloudwatch_changes_to_vpcs_alarm_configured",
    "cloudwatch_cross_account_sharing_disabled",
    "cloudwatch_log_group_kms_encryption_enabled",
    "cloudwatch_log_group_no_secrets_in_logs",
    "cloudwatch_log_group_retention_policy_specific_days_enabled",
    "cloudwatch_log_metric_filter_and_alarm_for_aws_config_configuration_changes_enabled",
    "cloudwatch_log_metric_filter_and_alarm_for_cloudtrail_configuration_changes_enabled",
    "cloudwatch_log_metric_filter_authentication_failures",
    "cloudwatch_log_metric_filter_aws_organizations_changes",
    "cloudwatch_log_metric_filter_disable_or_scheduled_deletion_of_kms_cmk",
    "cloudwatch_log_metric_filter_for_s3_bucket_policy_changes",
    "cloudwatch_log_metric_filter_policy_changes",
    "cloudwatch_log_metric_filter_root_usage",
    "cloudwatch_log_metric_filter_security_group_changes",
    "cloudwatch_log_metric_filter_sign_in_without_mfa",
    "cloudwatch_log_metric_filter_unauthorized_api_calls",
    "codeartifact_packages_external_public_publishing_disabled",
    "codebuild_project_older_90_days",
    "codebuild_project_user_controlled_buildspec",
    "cognito_identity_pool_guest_access_disabled",
    "cognito_user_pool_advanced_security_enabled",
    "cognito_user_pool_blocks_compromised_credentials_sign_in_attempts",
    "cognito_user_pool_blocks_potential_malicious_sign_in_attempts",
    "cognito_user_pool_client_prevent_user_existence_errors",
    "cognito_user_pool_client_token_revocation_enabled",
    "cognito_user_pool_deletion_protection_enabled",
    "cognito_user_pool_mfa_enabled",
    "cognito_user_pool_password_policy_lowercase",
    "cognito_user_pool_password_policy_minimum_length_14",
    "cognito_user_pool_password_policy_number",
    "cognito_user_pool_password_policy_symbol",
    "cognito_user_pool_password_policy_uppercase",
    "cognito_user_pool_self_registration_disabled",
    "cognito_user_pool_temporary_password_expiration",
    "cognito_user_pool_waf_acl_attached",
    "config_recorder_all_regions_enabled",
    "directoryservice_directory_log_forwarding_enabled",
    "directoryservice_directory_monitor_notifications",
    "directoryservice_directory_snapshots_limit",
    "directoryservice_ldap_certificate_expiration",
    "directoryservice_radius_server_security_protocol",
    "directoryservice_supported_mfa_radius_enabled",
    "dlm_ebs_snapshot_lifecycle_policy_exists",
    "dms_instance_minor_version_upgrade_enabled",
    "dms_instance_multi_az_enabled",
    "dms_instance_no_public_access",
    "documentdb_cluster_backup_enabled",
    "documentdb_cluster_cloudwatch_log_export",
    "documentdb_cluster_deletion_protection",
    "documentdb_cluster_storage_encrypted",
    "drs_job_exist",
]

if __name__ == "__main__":
    # Create the provider
    provider = AwsProvider(arguments={})
    # Create the scan
    scan = Scan(provider, checks_to_execute)

    # Execute the scan
    print(scan.scan())
    # Get the results
