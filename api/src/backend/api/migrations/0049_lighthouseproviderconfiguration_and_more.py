# Generated by Django 5.1.12 on 2025-10-09 07:50

import uuid

import django.db.models.deletion
from django.db import migrations, models

import api.rls


class Migration(migrations.Migration):
    dependencies = [
        ("api", "0048_api_key"),
    ]

    operations = [
        migrations.CreateModel(
            name="LighthouseProviderConfiguration",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("inserted_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "provider_type",
                    models.CharField(
                        choices=[("openai", "OpenAI")],
                        help_text="LLM provider name",
                        max_length=50,
                    ),
                ),
                ("base_url", models.URLField(blank=True, null=True)),
                (
                    "credentials",
                    models.BinaryField(
                        help_text="Encrypted JSON credentials for the provider"
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
            ],
            options={
                "db_table": "lighthouse_provider_configurations",
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="LighthouseProviderModels",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("inserted_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("model_id", models.CharField(max_length=100)),
                ("default_parameters", models.JSONField(blank=True, default=dict)),
            ],
            options={
                "db_table": "lighthouse_provider_models",
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="LighthouseTenantConfiguration",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("inserted_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("business_context", models.TextField(blank=True, default="")),
                ("default_provider", models.CharField(blank=True, max_length=50)),
                ("default_models", models.JSONField(blank=True, default=dict)),
            ],
            options={
                "db_table": "lighthouse_tenant_config",
                "abstract": False,
            },
        ),
        migrations.RemoveConstraint(
            model_name="tenantapikey",
            name="statements_on_tenantapikey",
        ),
        migrations.AddConstraint(
            model_name="tenantapikey",
            constraint=api.rls.RowLevelSecurityConstraint(
                "tenant_id", name="rls_on_tenantapikey"
            ),
        ),
        migrations.AddField(
            model_name="lighthouseproviderconfiguration",
            name="tenant",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="api.tenant"
            ),
        ),
        migrations.AddField(
            model_name="lighthouseprovidermodels",
            name="provider_configuration",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="available_models",
                to="api.lighthouseproviderconfiguration",
            ),
        ),
        migrations.AddField(
            model_name="lighthouseprovidermodels",
            name="tenant",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="api.tenant"
            ),
        ),
        migrations.AddField(
            model_name="lighthousetenantconfiguration",
            name="tenant",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="api.tenant"
            ),
        ),
        migrations.AddIndex(
            model_name="lighthouseproviderconfiguration",
            index=models.Index(
                fields=["tenant_id", "provider_type"], name="lh_pc_tenant_type_idx"
            ),
        ),
        migrations.AddConstraint(
            model_name="lighthouseproviderconfiguration",
            constraint=api.rls.RowLevelSecurityConstraint(
                "tenant_id", name="rls_on_lighthouseproviderconfiguration"
            ),
        ),
        migrations.AddConstraint(
            model_name="lighthouseproviderconfiguration",
            constraint=models.UniqueConstraint(
                fields=("tenant_id", "provider_type"),
                name="unique_provider_config_per_tenant",
            ),
        ),
        migrations.AddIndex(
            model_name="lighthouseprovidermodels",
            index=models.Index(
                fields=["tenant_id", "provider_configuration"],
                name="lh_prov_models_cfg_idx",
            ),
        ),
        migrations.AddConstraint(
            model_name="lighthouseprovidermodels",
            constraint=api.rls.RowLevelSecurityConstraint(
                "tenant_id", name="rls_on_lighthouseprovidermodels"
            ),
        ),
        migrations.AddConstraint(
            model_name="lighthouseprovidermodels",
            constraint=models.UniqueConstraint(
                fields=("tenant_id", "provider_configuration", "model_id"),
                name="unique_provider_model_per_configuration",
            ),
        ),
        migrations.AddConstraint(
            model_name="lighthousetenantconfiguration",
            constraint=api.rls.RowLevelSecurityConstraint(
                "tenant_id", name="rls_on_lighthousetenantconfiguration"
            ),
        ),
        migrations.AddConstraint(
            model_name="lighthousetenantconfiguration",
            constraint=models.UniqueConstraint(
                fields=("tenant_id",), name="unique_tenant_lighthouse_config"
            ),
        ),
    ]
