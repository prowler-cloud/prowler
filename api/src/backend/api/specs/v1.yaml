openapi: 3.0.3
info:
  title: Prowler API
  version: 1.1.0
  description: |-
    Prowler API specification.

    This file is auto-generated.
paths:
  /api/v1/compliance-overviews:
    get:
      operationId: compliance_overviews_list
      description: Retrieve an overview of all the compliance in a given scan. If
        no region filters are provided, the region with the most fails will be returned
        by default.
      summary: List compliance overviews for a scan
      parameters:
      - in: query
        name: fields[compliance-overviews]
        schema:
          type: array
          items:
            type: string
            enum:
            - inserted_at
            - compliance_id
            - framework
            - version
            - requirements_status
            - region
            - provider_type
            - scan
            - url
        description: endpoint return only specific fields in the response on a per-type
          basis by including a fields[TYPE] query parameter.
        explode: false
      - in: query
        name: filter[compliance_id]
        schema:
          type: string
      - in: query
        name: filter[compliance_id__icontains]
        schema:
          type: string
      - in: query
        name: filter[framework]
        schema:
          type: string
      - in: query
        name: filter[framework__icontains]
        schema:
          type: string
      - in: query
        name: filter[framework__iexact]
        schema:
          type: string
      - in: query
        name: filter[inserted_at]
        schema:
          type: string
          format: date
      - in: query
        name: filter[inserted_at__date]
        schema:
          type: string
          format: date
      - in: query
        name: filter[inserted_at__gte]
        schema:
          type: string
          format: date-time
      - in: query
        name: filter[inserted_at__lte]
        schema:
          type: string
          format: date-time
      - in: query
        name: filter[provider_type]
        schema:
          type: string
          enum:
          - aws
          - azure
          - gcp
          - kubernetes
        description: |-
          * `aws` - AWS
          * `azure` - Azure
          * `gcp` - GCP
          * `kubernetes` - Kubernetes
      - in: query
        name: filter[provider_type__in]
        schema:
          type: array
          items:
            type: string
            enum:
            - aws
            - azure
            - gcp
            - kubernetes
        description: |-
          Multiple values may be separated by commas.

          * `aws` - AWS
          * `azure` - Azure
          * `gcp` - GCP
          * `kubernetes` - Kubernetes
        explode: false
        style: form
      - in: query
        name: filter[region]
        schema:
          type: string
      - in: query
        name: filter[region__icontains]
        schema:
          type: string
      - in: query
        name: filter[region__in]
        schema:
          type: array
          items:
            type: string
        description: Multiple values may be separated by commas.
        explode: false
        style: form
      - in: query
        name: filter[scan_id]
        schema:
          type: string
          format: uuid
        description: Related scan ID.
        required: true
      - name: filter[search]
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: filter[version]
        schema:
          type: string
      - in: query
        name: filter[version__icontains]
        schema:
          type: string
      - name: page[number]
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page[size]
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: sort
        required: false
        in: query
        description: '[list of fields to sort by](https://jsonapi.org/format/#fetching-sorting)'
        schema:
          type: array
          items:
            type: string
            enum:
            - inserted_at
            - -inserted_at
            - compliance_id
            - -compliance_id
            - framework
            - -framework
            - region
            - -region
        explode: false
      tags:
      - Compliance Overview
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/PaginatedComplianceOverviewList'
          description: ''
  /api/v1/compliance-overviews/{id}:
    get:
      operationId: compliance_overviews_retrieve
      description: Fetch detailed information about a specific compliance overview
        by its ID, including detailed requirement information and check's status.
      summary: Retrieve data from a specific compliance overview
      parameters:
      - in: query
        name: fields[compliance-overviews]
        schema:
          type: array
          items:
            type: string
            enum:
            - inserted_at
            - compliance_id
            - framework
            - version
            - requirements_status
            - region
            - provider_type
            - scan
            - url
            - description
            - requirements
        description: endpoint return only specific fields in the response on a per-type
          basis by including a fields[TYPE] query parameter.
        explode: false
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this compliance overview.
        required: true
      tags:
      - Compliance Overview
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ComplianceOverviewFullResponse'
          description: ''
  /api/v1/findings:
    get:
      operationId: findings_list
      description: Retrieve a list of all findings with options for filtering by various
        criteria.
      summary: List all findings
      parameters:
      - in: query
        name: fields[findings]
        schema:
          type: array
          items:
            type: string
            enum:
            - uid
            - delta
            - status
            - status_extended
            - severity
            - check_id
            - check_metadata
            - raw_result
            - inserted_at
            - updated_at
            - url
            - scan
            - resources
        description: endpoint return only specific fields in the response on a per-type
          basis by including a fields[TYPE] query parameter.
        explode: false
      - in: query
        name: filter[check_id]
        schema:
          type: string
      - in: query
        name: filter[check_id__icontains]
        schema:
          type: string
      - in: query
        name: filter[check_id__in]
        schema:
          type: array
          items:
            type: string
        description: Multiple values may be separated by commas.
        explode: false
        style: form
      - in: query
        name: filter[delta]
        schema:
          type: string
          nullable: true
          enum:
          - changed
          - new
        description: |-
          * `new` - New
          * `changed` - Changed
      - in: query
        name: filter[delta__in]
        schema:
          type: array
          items:
            type: string
        description: Multiple values may be separated by commas.
        explode: false
        style: form
      - in: query
        name: filter[id]
        schema:
          type: string
          format: uuid
      - in: query
        name: filter[id__in]
        schema:
          type: array
          items:
            type: string
            format: uuid
        description: Multiple values may be separated by commas.
        explode: false
        style: form
      - in: query
        name: filter[impact]
        schema:
          type: string
          enum:
          - critical
          - high
          - informational
          - low
          - medium
        description: |-
          * `critical` - Critical
          * `high` - High
          * `medium` - Medium
          * `low` - Low
          * `informational` - Informational
      - in: query
        name: filter[impact__in]
        schema:
          type: array
          items:
            type: string
        description: Multiple values may be separated by commas.
        explode: false
        style: form
      - in: query
        name: filter[inserted_at]
        schema:
          type: string
          format: date
      - in: query
        name: filter[inserted_at__date]
        schema:
          type: string
          format: date
      - in: query
        name: filter[inserted_at__gte]
        schema:
          type: string
          format: date
      - in: query
        name: filter[inserted_at__lte]
        schema:
          type: string
          format: date
      - in: query
        name: filter[provider]
        schema:
          type: string
          format: uuid
      - in: query
        name: filter[provider__in]
        schema:
          type: array
          items:
            type: string
            format: uuid
        description: Multiple values may be separated by commas.
        explode: false
        style: form
      - in: query
        name: filter[provider_alias]
        schema:
          type: string
      - in: query
        name: filter[provider_alias__icontains]
        schema:
          type: string
      - in: query
        name: filter[provider_alias__in]
        schema:
          type: array
          items:
            type: string
        description: Multiple values may be separated by commas.
        explode: false
        style: form
      - in: query
        name: filter[provider_type]
        schema:
          type: string
          enum:
          - aws
          - azure
          - gcp
          - kubernetes
        description: |-
          * `aws` - AWS
          * `azure` - Azure
          * `gcp` - GCP
          * `kubernetes` - Kubernetes
      - in: query
        name: filter[provider_type__in]
        schema:
          type: array
          items:
            type: string
            enum:
            - aws
            - azure
            - gcp
            - kubernetes
        description: |-
          Multiple values may be separated by commas.

          * `aws` - AWS
          * `azure` - Azure
          * `gcp` - GCP
          * `kubernetes` - Kubernetes
        explode: false
        style: form
      - in: query
        name: filter[provider_uid]
        schema:
          type: string
      - in: query
        name: filter[provider_uid__icontains]
        schema:
          type: string
      - in: query
        name: filter[provider_uid__in]
        schema:
          type: array
          items:
            type: string
        description: Multiple values may be separated by commas.
        explode: false
        style: form
      - in: query
        name: filter[region]
        schema:
          type: string
      - in: query
        name: filter[region__icontains]
        schema:
          type: string
      - in: query
        name: filter[region__in]
        schema:
          type: array
          items:
            type: string
        description: Multiple values may be separated by commas.
        explode: false
        style: form
      - in: query
        name: filter[resource_name]
        schema:
          type: string
      - in: query
        name: filter[resource_name__icontains]
        schema:
          type: string
      - in: query
        name: filter[resource_name__in]
        schema:
          type: array
          items:
            type: string
        description: Multiple values may be separated by commas.
        explode: false
        style: form
      - in: query
        name: filter[resource_type]
        schema:
          type: string
      - in: query
        name: filter[resource_type__icontains]
        schema:
          type: string
      - in: query
        name: filter[resource_type__in]
        schema:
          type: array
          items:
            type: string
        description: Multiple values may be separated by commas.
        explode: false
        style: form
      - in: query
        name: filter[resource_uid]
        schema:
          type: string
      - in: query
        name: filter[resource_uid__icontains]
        schema:
          type: string
      - in: query
        name: filter[resource_uid__in]
        schema:
          type: array
          items:
            type: string
        description: Multiple values may be separated by commas.
        explode: false
        style: form
      - in: query
        name: filter[resources]
        schema:
          type: array
          items:
            type: string
            format: uuid
        description: Multiple values may be separated by commas.
        explode: false
        style: form
      - in: query
        name: filter[scan]
        schema:
          type: string
          format: uuid
      - in: query
        name: filter[scan__in]
        schema:
          type: array
          items:
            type: string
            format: uuid
        description: Multiple values may be separated by commas.
        explode: false
        style: form
      - name: filter[search]
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: filter[service]
        schema:
          type: string
      - in: query
        name: filter[service__icontains]
        schema:
          type: string
      - in: query
        name: filter[service__in]
        schema:
          type: array
          items:
            type: string
        description: Multiple values may be separated by commas.
        explode: false
        style: form
      - in: query
        name: filter[severity]
        schema:
          type: string
          enum:
          - critical
          - high
          - informational
          - low
          - medium
        description: |-
          * `critical` - Critical
          * `high` - High
          * `medium` - Medium
          * `low` - Low
          * `informational` - Informational
      - in: query
        name: filter[severity__in]
        schema:
          type: array
          items:
            type: string
        description: Multiple values may be separated by commas.
        explode: false
        style: form
      - in: query
        name: filter[status]
        schema:
          type: string
          enum:
          - FAIL
          - MANUAL
          - MUTED
          - PASS
        description: |-
          * `FAIL` - Fail
          * `PASS` - Pass
          * `MANUAL` - Manual
          * `MUTED` - Muted
      - in: query
        name: filter[status__in]
        schema:
          type: array
          items:
            type: string
        description: Multiple values may be separated by commas.
        explode: false
        style: form
      - in: query
        name: filter[uid]
        schema:
          type: string
      - in: query
        name: filter[uid__in]
        schema:
          type: array
          items:
            type: string
        description: Multiple values may be separated by commas.
        explode: false
        style: form
      - in: query
        name: filter[updated_at]
        schema:
          type: string
          format: date
      - in: query
        name: filter[updated_at__gte]
        schema:
          type: string
          format: date-time
      - in: query
        name: filter[updated_at__lte]
        schema:
          type: string
          format: date-time
      - in: query
        name: include
        schema:
          type: array
          items:
            type: string
            enum:
            - scan
            - resources
        description: include query parameter to allow the client to customize which
          related resources should be returned.
        explode: false
      - name: page[number]
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page[size]
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: sort
        required: false
        in: query
        description: '[list of fields to sort by](https://jsonapi.org/format/#fetching-sorting)'
        schema:
          type: array
          items:
            type: string
            enum:
            - id
            - -id
            - status
            - -status
            - severity
            - -severity
            - check_id
            - -check_id
            - inserted_at
            - -inserted_at
            - updated_at
            - -updated_at
        explode: false
      tags:
      - Finding
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/PaginatedFindingList'
          description: ''
  /api/v1/findings/{id}:
    get:
      operationId: findings_retrieve
      description: Fetch detailed information about a specific finding by its ID.
      summary: Retrieve data from a specific finding
      parameters:
      - in: query
        name: fields[findings]
        schema:
          type: array
          items:
            type: string
            enum:
            - uid
            - delta
            - status
            - status_extended
            - severity
            - check_id
            - check_metadata
            - raw_result
            - inserted_at
            - updated_at
            - url
            - scan
            - resources
        description: endpoint return only specific fields in the response on a per-type
          basis by including a fields[TYPE] query parameter.
        explode: false
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this finding.
        required: true
      - in: query
        name: include
        schema:
          type: array
          items:
            type: string
            enum:
            - scan
            - resources
        description: include query parameter to allow the client to customize which
          related resources should be returned.
        explode: false
      tags:
      - Finding
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FindingResponse'
          description: ''
  /api/v1/findings/findings_services_regions:
    get:
      operationId: findings_findings_services_regions_retrieve
      description: Fetch services and regions affected in findings.
      summary: Retrieve the services and regions that are impacted by findings
      parameters:
      - in: query
        name: fields[finding-dynamic-filters]
        schema:
          type: array
          items:
            type: string
            enum:
            - services
            - regions
        description: endpoint return only specific fields in the response on a per-type
          basis by including a fields[TYPE] query parameter.
        explode: false
      - in: query
        name: filter[check_id]
        schema:
          type: string
      - in: query
        name: filter[check_id__icontains]
        schema:
          type: string
      - in: query
        name: filter[check_id__in]
        schema:
          type: array
          items:
            type: string
        description: Multiple values may be separated by commas.
        explode: false
        style: form
      - in: query
        name: filter[delta]
        schema:
          type: string
          nullable: true
          enum:
          - changed
          - new
        description: |-
          * `new` - New
          * `changed` - Changed
      - in: query
        name: filter[delta__in]
        schema:
          type: array
          items:
            type: string
        description: Multiple values may be separated by commas.
        explode: false
        style: form
      - in: query
        name: filter[id]
        schema:
          type: string
          format: uuid
      - in: query
        name: filter[id__in]
        schema:
          type: array
          items:
            type: string
            format: uuid
        description: Multiple values may be separated by commas.
        explode: false
        style: form
      - in: query
        name: filter[impact]
        schema:
          type: string
          enum:
          - critical
          - high
          - informational
          - low
          - medium
        description: |-
          * `critical` - Critical
          * `high` - High
          * `medium` - Medium
          * `low` - Low
          * `informational` - Informational
      - in: query
        name: filter[impact__in]
        schema:
          type: array
          items:
            type: string
        description: Multiple values may be separated by commas.
        explode: false
        style: form
      - in: query
        name: filter[inserted_at]
        schema:
          type: string
          format: date
      - in: query
        name: filter[inserted_at__date]
        schema:
          type: string
          format: date
      - in: query
        name: filter[inserted_at__gte]
        schema:
          type: string
          format: date
      - in: query
        name: filter[inserted_at__lte]
        schema:
          type: string
          format: date
      - in: query
        name: filter[provider]
        schema:
          type: string
          format: uuid
      - in: query
        name: filter[provider__in]
        schema:
          type: array
          items:
            type: string
            format: uuid
        description: Multiple values may be separated by commas.
        explode: false
        style: form
      - in: query
        name: filter[provider_alias]
        schema:
          type: string
      - in: query
        name: filter[provider_alias__icontains]
        schema:
          type: string
      - in: query
        name: filter[provider_alias__in]
        schema:
          type: array
          items:
            type: string
        description: Multiple values may be separated by commas.
        explode: false
        style: form
      - in: query
        name: filter[provider_type]
        schema:
          type: string
          enum:
          - aws
          - azure
          - gcp
          - kubernetes
        description: |-
          * `aws` - AWS
          * `azure` - Azure
          * `gcp` - GCP
          * `kubernetes` - Kubernetes
      - in: query
        name: filter[provider_type__in]
        schema:
          type: array
          items:
            type: string
            enum:
            - aws
            - azure
            - gcp
            - kubernetes
        description: |-
          Multiple values may be separated by commas.

          * `aws` - AWS
          * `azure` - Azure
          * `gcp` - GCP
          * `kubernetes` - Kubernetes
        explode: false
        style: form
      - in: query
        name: filter[provider_uid]
        schema:
          type: string
      - in: query
        name: filter[provider_uid__icontains]
        schema:
          type: string
      - in: query
        name: filter[provider_uid__in]
        schema:
          type: array
          items:
            type: string
        description: Multiple values may be separated by commas.
        explode: false
        style: form
      - in: query
        name: filter[region]
        schema:
          type: string
      - in: query
        name: filter[region__icontains]
        schema:
          type: string
      - in: query
        name: filter[region__in]
        schema:
          type: array
          items:
            type: string
        description: Multiple values may be separated by commas.
        explode: false
        style: form
      - in: query
        name: filter[resource_name]
        schema:
          type: string
      - in: query
        name: filter[resource_name__icontains]
        schema:
          type: string
      - in: query
        name: filter[resource_name__in]
        schema:
          type: array
          items:
            type: string
        description: Multiple values may be separated by commas.
        explode: false
        style: form
      - in: query
        name: filter[resource_type]
        schema:
          type: string
      - in: query
        name: filter[resource_type__icontains]
        schema:
          type: string
      - in: query
        name: filter[resource_type__in]
        schema:
          type: array
          items:
            type: string
        description: Multiple values may be separated by commas.
        explode: false
        style: form
      - in: query
        name: filter[resource_uid]
        schema:
          type: string
      - in: query
        name: filter[resource_uid__icontains]
        schema:
          type: string
      - in: query
        name: filter[resource_uid__in]
        schema:
          type: array
          items:
            type: string
        description: Multiple values may be separated by commas.
        explode: false
        style: form
      - in: query
        name: filter[resources]
        schema:
          type: array
          items:
            type: string
            format: uuid
        description: Multiple values may be separated by commas.
        explode: false
        style: form
      - in: query
        name: filter[scan]
        schema:
          type: string
          format: uuid
      - in: query
        name: filter[scan__in]
        schema:
          type: array
          items:
            type: string
            format: uuid
        description: Multiple values may be separated by commas.
        explode: false
        style: form
      - name: filter[search]
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: filter[service]
        schema:
          type: string
      - in: query
        name: filter[service__icontains]
        schema:
          type: string
      - in: query
        name: filter[service__in]
        schema:
          type: array
          items:
            type: string
        description: Multiple values may be separated by commas.
        explode: false
        style: form
      - in: query
        name: filter[severity]
        schema:
          type: string
          enum:
          - critical
          - high
          - informational
          - low
          - medium
        description: |-
          * `critical` - Critical
          * `high` - High
          * `medium` - Medium
          * `low` - Low
          * `informational` - Informational
      - in: query
        name: filter[severity__in]
        schema:
          type: array
          items:
            type: string
        description: Multiple values may be separated by commas.
        explode: false
        style: form
      - in: query
        name: filter[status]
        schema:
          type: string
          enum:
          - FAIL
          - MANUAL
          - MUTED
          - PASS
        description: |-
          * `FAIL` - Fail
          * `PASS` - Pass
          * `MANUAL` - Manual
          * `MUTED` - Muted
      - in: query
        name: filter[status__in]
        schema:
          type: array
          items:
            type: string
        description: Multiple values may be separated by commas.
        explode: false
        style: form
      - in: query
        name: filter[uid]
        schema:
          type: string
      - in: query
        name: filter[uid__in]
        schema:
          type: array
          items:
            type: string
        description: Multiple values may be separated by commas.
        explode: false
        style: form
      - in: query
        name: filter[updated_at]
        schema:
          type: string
          format: date
      - in: query
        name: filter[updated_at__gte]
        schema:
          type: string
          format: date-time
      - in: query
        name: filter[updated_at__lte]
        schema:
          type: string
          format: date-time
      - name: sort
        required: false
        in: query
        description: '[list of fields to sort by](https://jsonapi.org/format/#fetching-sorting)'
        schema:
          type: array
          items:
            type: string
            enum:
            - id
            - -id
            - status
            - -status
            - severity
            - -severity
            - check_id
            - -check_id
            - inserted_at
            - -inserted_at
            - updated_at
            - -updated_at
        explode: false
      tags:
      - Finding
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/OpenApiResponseResponse'
          description: ''
  /api/v1/invitations/accept:
    post:
      operationId: invitations_accept_create
      description: Accept an invitation to an existing tenant. This invitation cannot
        be expired and the emails must match.
      summary: Accept an invitation
      tags:
      - Invitation
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/InvitationAcceptRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/InvitationAcceptRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InvitationAcceptRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/OpenApiResponseResponse'
          description: ''
  /api/v1/overviews/findings:
    get:
      operationId: overviews_findings_retrieve
      description: Fetch aggregated findings data across all providers, grouped by
        various metrics such as passed, failed, muted, and total findings. This endpoint
        calculates summary statistics based on the latest scans for each provider
        and applies any provided filters, such as region, provider type, and scan
        date.
      summary: Get aggregated findings data
      parameters:
      - in: query
        name: fields[findings-overview]
        schema:
          type: array
          items:
            type: string
            enum:
            - id
            - new
            - changed
            - unchanged
            - fail_new
            - fail_changed
            - pass_new
            - pass_changed
            - muted_new
            - muted_changed
            - total
            - fail
            - muted
            - pass
        description: endpoint return only specific fields in the response on a per-type
          basis by including a fields[TYPE] query parameter.
        explode: false
      - in: query
        name: filter[inserted_at]
        schema:
          type: string
          format: date
      - in: query
        name: filter[inserted_at__date]
        schema:
          type: string
          format: date
      - in: query
        name: filter[inserted_at__gte]
        schema:
          type: string
          format: date-time
      - in: query
        name: filter[inserted_at__lte]
        schema:
          type: string
          format: date-time
      - in: query
        name: filter[muted_findings]
        schema:
          type: boolean
      - in: query
        name: filter[provider_id]
        schema:
          type: string
          format: uuid
      - in: query
        name: filter[provider_type]
        schema:
          type: string
          enum:
          - aws
          - azure
          - gcp
          - kubernetes
        description: |-
          * `aws` - AWS
          * `azure` - Azure
          * `gcp` - GCP
          * `kubernetes` - Kubernetes
      - in: query
        name: filter[provider_type__in]
        schema:
          type: array
          items:
            type: string
            enum:
            - aws
            - azure
            - gcp
            - kubernetes
        description: |-
          Multiple values may be separated by commas.

          * `aws` - AWS
          * `azure` - Azure
          * `gcp` - GCP
          * `kubernetes` - Kubernetes
        explode: false
        style: form
      - in: query
        name: filter[region]
        schema:
          type: string
      - in: query
        name: filter[region__icontains]
        schema:
          type: string
      - in: query
        name: filter[region__in]
        schema:
          type: array
          items:
            type: string
        description: Multiple values may be separated by commas.
        explode: false
        style: form
      - name: filter[search]
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - name: sort
        required: false
        in: query
        description: '[list of fields to sort by](https://jsonapi.org/format/#fetching-sorting)'
        schema:
          type: array
          items:
            type: string
            enum:
            - id
            - -id
            - new
            - -new
            - changed
            - -changed
            - unchanged
            - -unchanged
            - fail_new
            - -fail_new
            - fail_changed
            - -fail_changed
            - pass_new
            - -pass_new
            - pass_changed
            - -pass_changed
            - muted_new
            - -muted_new
            - muted_changed
            - -muted_changed
            - total
            - -total
            - fail
            - -fail
            - muted
            - -muted
            - pass
            - -pass
        explode: false
      tags:
      - Overview
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/OverviewFindingResponse'
          description: ''
  /api/v1/overviews/findings_severity:
    get:
      operationId: overviews_findings_severity_retrieve
      description: Retrieve an aggregated summary of findings grouped by severity
        levels, such as low, medium, high, and critical. The response includes the
        total count of findings for each severity, considering only the latest scans
        for each provider. Additional filters can be applied to narrow down results
        by region, provider type, or other attributes.
      summary: Get findings data by severity
      parameters:
      - in: query
        name: fields[findings-severity-overview]
        schema:
          type: array
          items:
            type: string
            enum:
            - id
            - critical
            - high
            - medium
            - low
            - informational
        description: endpoint return only specific fields in the response on a per-type
          basis by including a fields[TYPE] query parameter.
        explode: false
      - in: query
        name: filter[inserted_at]
        schema:
          type: string
          format: date
      - in: query
        name: filter[inserted_at__date]
        schema:
          type: string
          format: date
      - in: query
        name: filter[inserted_at__gte]
        schema:
          type: string
          format: date-time
      - in: query
        name: filter[inserted_at__lte]
        schema:
          type: string
          format: date-time
      - in: query
        name: filter[muted_findings]
        schema:
          type: boolean
      - in: query
        name: filter[provider_id]
        schema:
          type: string
          format: uuid
      - in: query
        name: filter[provider_type]
        schema:
          type: string
          enum:
          - aws
          - azure
          - gcp
          - kubernetes
        description: |-
          * `aws` - AWS
          * `azure` - Azure
          * `gcp` - GCP
          * `kubernetes` - Kubernetes
      - in: query
        name: filter[provider_type__in]
        schema:
          type: array
          items:
            type: string
            enum:
            - aws
            - azure
            - gcp
            - kubernetes
        description: |-
          Multiple values may be separated by commas.

          * `aws` - AWS
          * `azure` - Azure
          * `gcp` - GCP
          * `kubernetes` - Kubernetes
        explode: false
        style: form
      - in: query
        name: filter[region]
        schema:
          type: string
      - in: query
        name: filter[region__icontains]
        schema:
          type: string
      - in: query
        name: filter[region__in]
        schema:
          type: array
          items:
            type: string
        description: Multiple values may be separated by commas.
        explode: false
        style: form
      - name: filter[search]
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - name: sort
        required: false
        in: query
        description: '[list of fields to sort by](https://jsonapi.org/format/#fetching-sorting)'
        schema:
          type: array
          items:
            type: string
            enum:
            - id
            - -id
            - critical
            - -critical
            - high
            - -high
            - medium
            - -medium
            - low
            - -low
            - informational
            - -informational
        explode: false
      tags:
      - Overview
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/OverviewSeverityResponse'
          description: ''
  /api/v1/overviews/providers:
    get:
      operationId: overviews_providers_retrieve
      description: Retrieve an aggregated overview of findings and resources grouped
        by providers. The response includes the count of passed, failed, and manual
        findings, along with the total number of resources managed by each provider.
        Only the latest findings for each provider are considered in the aggregation
        to ensure accurate and up-to-date insights.
      summary: Get aggregated provider data
      parameters:
      - in: query
        name: fields[providers-overview]
        schema:
          type: array
          items:
            type: string
            enum:
            - id
            - findings
            - resources
        description: endpoint return only specific fields in the response on a per-type
          basis by including a fields[TYPE] query parameter.
        explode: false
      tags:
      - Overview
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/OverviewProviderResponse'
          description: ''
  /api/v1/overviews/services:
    get:
      operationId: overviews_services_retrieve
      description: Retrieve an aggregated summary of findings grouped by service.
        The response includes the total count of findings for each service, as long
        as there are at least one finding for that service. At least one of the `inserted_at`
        filters must be provided.
      summary: Get findings data by service
      parameters:
      - in: query
        name: fields[services-overview]
        schema:
          type: array
          items:
            type: string
            enum:
            - id
            - total
            - fail
            - muted
            - pass
        description: endpoint return only specific fields in the response on a per-type
          basis by including a fields[TYPE] query parameter.
        explode: false
      - in: query
        name: filter[inserted_at]
        schema:
          type: string
          format: date
      - in: query
        name: filter[inserted_at__date]
        schema:
          type: string
          format: date
      - in: query
        name: filter[inserted_at__gte]
        schema:
          type: string
          format: date-time
      - in: query
        name: filter[inserted_at__lte]
        schema:
          type: string
          format: date-time
      - in: query
        name: filter[provider_id]
        schema:
          type: string
          format: uuid
      - in: query
        name: filter[provider_type]
        schema:
          type: string
          enum:
          - aws
          - azure
          - gcp
          - kubernetes
        description: |-
          * `aws` - AWS
          * `azure` - Azure
          * `gcp` - GCP
          * `kubernetes` - Kubernetes
      - in: query
        name: filter[provider_type__in]
        schema:
          type: array
          items:
            type: string
            enum:
            - aws
            - azure
            - gcp
            - kubernetes
        description: |-
          Multiple values may be separated by commas.

          * `aws` - AWS
          * `azure` - Azure
          * `gcp` - GCP
          * `kubernetes` - Kubernetes
        explode: false
        style: form
      - in: query
        name: filter[region]
        schema:
          type: string
      - in: query
        name: filter[region__icontains]
        schema:
          type: string
      - in: query
        name: filter[region__in]
        schema:
          type: array
          items:
            type: string
        description: Multiple values may be separated by commas.
        explode: false
        style: form
      - name: filter[search]
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - name: sort
        required: false
        in: query
        description: '[list of fields to sort by](https://jsonapi.org/format/#fetching-sorting)'
        schema:
          type: array
          items:
            type: string
            enum:
            - id
            - -id
            - total
            - -total
            - fail
            - -fail
            - muted
            - -muted
            - pass
            - -pass
        explode: false
      tags:
      - Overview
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/OverviewServiceResponse'
          description: ''
  /api/v1/provider-groups:
    get:
      operationId: provider_groups_list
      description: Retrieve a list of all provider groups with options for filtering
        by various criteria.
      summary: List all provider groups
      parameters:
      - in: query
        name: fields[provider-groups]
        schema:
          type: array
          items:
            type: string
            enum:
            - name
            - inserted_at
            - updated_at
            - providers
            - roles
            - url
        description: endpoint return only specific fields in the response on a per-type
          basis by including a fields[TYPE] query parameter.
        explode: false
      - in: query
        name: filter[id]
        schema:
          type: string
          format: uuid
      - in: query
        name: filter[id__in]
        schema:
          type: array
          items:
            type: string
            format: uuid
        description: Multiple values may be separated by commas.
        explode: false
        style: form
      - in: query
        name: filter[inserted_at]
        schema:
          type: string
          format: date
      - in: query
        name: filter[inserted_at__gte]
        schema:
          type: string
          format: date-time
      - in: query
        name: filter[inserted_at__lte]
        schema:
          type: string
          format: date-time
      - in: query
        name: filter[name]
        schema:
          type: string
      - in: query
        name: filter[name__in]
        schema:
          type: array
          items:
            type: string
        description: Multiple values may be separated by commas.
        explode: false
        style: form
      - name: filter[search]
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: filter[updated_at]
        schema:
          type: string
          format: date
      - in: query
        name: filter[updated_at__gte]
        schema:
          type: string
          format: date-time
      - in: query
        name: filter[updated_at__lte]
        schema:
          type: string
          format: date-time
      - name: page[number]
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page[size]
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: sort
        required: false
        in: query
        description: '[list of fields to sort by](https://jsonapi.org/format/#fetching-sorting)'
        schema:
          type: array
          items:
            type: string
            enum:
            - id
            - -id
            - name
            - -name
            - inserted_at
            - -inserted_at
            - updated_at
            - -updated_at
            - providers
            - -providers
            - roles
            - -roles
            - url
            - -url
        explode: false
      tags:
      - Provider Group
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/PaginatedProviderGroupList'
          description: ''
    post:
      operationId: provider_groups_create
      description: Add a new provider group to the system by providing the required
        provider group details.
      summary: Create a new provider group
      tags:
      - Provider Group
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/ProviderGroupCreateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProviderGroupCreateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProviderGroupCreateRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ProviderGroupCreateResponse'
          description: ''
  /api/v1/provider-groups/{id}:
    get:
      operationId: provider_groups_retrieve
      description: Fetch detailed information about a specific provider group by their
        ID.
      summary: Retrieve data from a provider group
      parameters:
      - in: query
        name: fields[provider-groups]
        schema:
          type: array
          items:
            type: string
            enum:
            - name
            - inserted_at
            - updated_at
            - providers
            - roles
            - url
        description: endpoint return only specific fields in the response on a per-type
          basis by including a fields[TYPE] query parameter.
        explode: false
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this provider group.
        required: true
      tags:
      - Provider Group
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ProviderGroupResponse'
          description: ''
    patch:
      operationId: provider_groups_partial_update
      description: Update certain fields of an existing provider group's information
        without affecting other fields.
      summary: Partially update a provider group
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this provider group.
        required: true
      tags:
      - Provider Group
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/PatchedProviderGroupUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProviderGroupUpdateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProviderGroupUpdateRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/SerializerMetaclassResponse'
          description: ''
    delete:
      operationId: provider_groups_destroy
      description: Remove a provider group from the system by their ID.
      summary: Delete a provider group
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this provider group.
        required: true
      tags:
      - Provider Group
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/provider-groups/{id}/relationships/providers:
    post:
      operationId: provider_groups_relationships_providers_create
      description: Add a new provider_group-providers relationship to the system by
        providing the required provider_group-providers details.
      summary: Create a new provider_group-providers relationship
      tags:
      - Provider Group
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/ProviderGroupMembershipRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProviderGroupMembershipRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProviderGroupMembershipRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '204':
          description: Relationship created successfully
        '400':
          description: Bad request (e.g., relationship already exists)
    patch:
      operationId: provider_groups_relationships_providers_partial_update
      description: Update the provider_group-providers relationship information without
        affecting other fields.
      summary: Partially update a provider_group-providers relationship
      tags:
      - Provider Group
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/PatchedProviderGroupMembershipRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProviderGroupMembershipRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProviderGroupMembershipRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '204':
          description: Relationship updated successfully
    delete:
      operationId: provider_groups_relationships_providers_destroy
      description: Remove the provider_group-providers relationship from the system
        by their ID.
      summary: Delete a provider_group-providers relationship
      tags:
      - Provider Group
      security:
      - jwtAuth: []
      responses:
        '204':
          description: Relationship deleted successfully
  /api/v1/providers:
    get:
      operationId: providers_list
      description: Retrieve a list of all providers with options for filtering by
        various criteria.
      summary: List all providers
      parameters:
      - in: query
        name: fields[providers]
        schema:
          type: array
          items:
            type: string
            enum:
            - inserted_at
            - updated_at
            - provider
            - uid
            - alias
            - connection
            - secret
            - provider_groups
            - url
        description: endpoint return only specific fields in the response on a per-type
          basis by including a fields[TYPE] query parameter.
        explode: false
      - in: query
        name: filter[alias]
        schema:
          type: string
      - in: query
        name: filter[alias__icontains]
        schema:
          type: string
      - in: query
        name: filter[alias__in]
        schema:
          type: array
          items:
            type: string
        description: Multiple values may be separated by commas.
        explode: false
        style: form
      - in: query
        name: filter[connected]
        schema:
          type: boolean
      - in: query
        name: filter[id]
        schema:
          type: string
          format: uuid
      - in: query
        name: filter[id__in]
        schema:
          type: array
          items:
            type: string
            format: uuid
        description: Multiple values may be separated by commas.
        explode: false
        style: form
      - in: query
        name: filter[inserted_at]
        schema:
          type: string
          format: date
      - in: query
        name: filter[inserted_at__gte]
        schema:
          type: string
          format: date-time
      - in: query
        name: filter[inserted_at__lte]
        schema:
          type: string
          format: date-time
      - in: query
        name: filter[provider]
        schema:
          type: string
          enum:
          - aws
          - azure
          - gcp
          - kubernetes
        description: |-
          * `aws` - AWS
          * `azure` - Azure
          * `gcp` - GCP
          * `kubernetes` - Kubernetes
      - in: query
        name: filter[provider__in]
        schema:
          type: array
          items:
            type: string
        description: Multiple values may be separated by commas.
        explode: false
        style: form
      - name: filter[search]
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: filter[uid]
        schema:
          type: string
      - in: query
        name: filter[uid__icontains]
        schema:
          type: string
      - in: query
        name: filter[uid__in]
        schema:
          type: array
          items:
            type: string
        description: Multiple values may be separated by commas.
        explode: false
        style: form
      - in: query
        name: filter[updated_at]
        schema:
          type: string
          format: date
      - in: query
        name: filter[updated_at__gte]
        schema:
          type: string
          format: date-time
      - in: query
        name: filter[updated_at__lte]
        schema:
          type: string
          format: date-time
      - in: query
        name: include
        schema:
          type: array
          items:
            type: string
            enum:
            - provider_groups
        description: include query parameter to allow the client to customize which
          related resources should be returned.
        explode: false
      - name: page[number]
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page[size]
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: sort
        required: false
        in: query
        description: '[list of fields to sort by](https://jsonapi.org/format/#fetching-sorting)'
        schema:
          type: array
          items:
            type: string
            enum:
            - provider
            - -provider
            - uid
            - -uid
            - alias
            - -alias
            - connected
            - -connected
            - inserted_at
            - -inserted_at
            - updated_at
            - -updated_at
        explode: false
      tags:
      - Provider
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/PaginatedProviderList'
          description: ''
    post:
      operationId: providers_create
      description: Add a new provider to the system by providing the required provider
        details.
      summary: Create a new provider
      tags:
      - Provider
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/ProviderCreateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProviderCreateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProviderCreateRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ProviderCreateResponse'
          description: ''
  /api/v1/providers/{id}:
    get:
      operationId: providers_retrieve
      description: Fetch detailed information about a specific provider by their ID.
      summary: Retrieve data from a provider
      parameters:
      - in: query
        name: fields[providers]
        schema:
          type: array
          items:
            type: string
            enum:
            - inserted_at
            - updated_at
            - provider
            - uid
            - alias
            - connection
            - secret
            - provider_groups
            - url
        description: endpoint return only specific fields in the response on a per-type
          basis by including a fields[TYPE] query parameter.
        explode: false
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this provider.
        required: true
      - in: query
        name: include
        schema:
          type: array
          items:
            type: string
            enum:
            - provider_groups
        description: include query parameter to allow the client to customize which
          related resources should be returned.
        explode: false
      tags:
      - Provider
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ProviderResponse'
          description: ''
    patch:
      operationId: providers_partial_update
      description: Update certain fields of an existing provider's information without
        affecting other fields.
      summary: Partially update a provider
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this provider.
        required: true
      tags:
      - Provider
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/PatchedProviderUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProviderUpdateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProviderUpdateRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/SerializerMetaclassResponse'
          description: ''
    delete:
      operationId: providers_destroy
      description: Remove a provider from the system by their ID.
      summary: Delete a provider
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this provider.
        required: true
      tags:
      - Provider
      security:
      - jwtAuth: []
      responses:
        '202':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/OpenApiResponseResponse'
          description: ''
  /api/v1/providers/{id}/connection:
    post:
      operationId: providers_connection_create
      description: Try to verify connection. For instance, Role & Credentials are
        set correctly
      summary: Check connection
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this provider.
        required: true
      tags:
      - Provider
      security:
      - jwtAuth: []
      responses:
        '202':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/OpenApiResponseResponse'
          description: ''
  /api/v1/providers/secrets:
    get:
      operationId: providers_secrets_list
      description: Retrieve a list of all secrets with options for filtering by various
        criteria.
      summary: List all secrets
      parameters:
      - in: query
        name: fields[provider-secrets]
        schema:
          type: array
          items:
            type: string
            enum:
            - inserted_at
            - updated_at
            - name
            - secret_type
            - provider
            - url
        description: endpoint return only specific fields in the response on a per-type
          basis by including a fields[TYPE] query parameter.
        explode: false
      - in: query
        name: filter[inserted_at]
        schema:
          type: string
          format: date
      - in: query
        name: filter[name]
        schema:
          type: string
      - in: query
        name: filter[name__icontains]
        schema:
          type: string
      - in: query
        name: filter[provider]
        schema:
          type: string
          format: uuid
      - name: filter[search]
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: filter[updated_at]
        schema:
          type: string
          format: date
      - name: page[number]
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page[size]
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: sort
        required: false
        in: query
        description: '[list of fields to sort by](https://jsonapi.org/format/#fetching-sorting)'
        schema:
          type: array
          items:
            type: string
            enum:
            - name
            - -name
            - inserted_at
            - -inserted_at
            - updated_at
            - -updated_at
        explode: false
      tags:
      - Provider
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/PaginatedProviderSecretList'
          description: ''
    post:
      operationId: providers_secrets_create
      description: Add a new secret to the system by providing the required secret
        details.
      summary: Create a new secret
      tags:
      - Provider
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/ProviderSecretCreateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProviderSecretCreateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProviderSecretCreateRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ProviderSecretCreateResponse'
          description: ''
  /api/v1/providers/secrets/{id}:
    get:
      operationId: providers_secrets_retrieve
      description: Fetch detailed information about a specific secret by their ID.
      summary: Retrieve data from a secret
      parameters:
      - in: query
        name: fields[provider-secrets]
        schema:
          type: array
          items:
            type: string
            enum:
            - inserted_at
            - updated_at
            - name
            - secret_type
            - provider
            - url
        description: endpoint return only specific fields in the response on a per-type
          basis by including a fields[TYPE] query parameter.
        explode: false
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - Provider
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ProviderSecretResponse'
          description: ''
    patch:
      operationId: providers_secrets_partial_update
      description: Update certain fields of an existing secret's information without
        affecting other fields.
      summary: Partially update a secret
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - Provider
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/PatchedProviderSecretUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProviderSecretUpdateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProviderSecretUpdateRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ProviderSecretUpdateResponse'
          description: ''
    delete:
      operationId: providers_secrets_destroy
      description: Remove a secret from the system by their ID.
      summary: Delete a secret
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - Provider
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/resources:
    get:
      operationId: resources_list
      description: Retrieve a list of all resources with options for filtering by
        various criteria. Resources are objects that are discovered by Prowler. They
        can be anything from a single host to a whole VPC.
      summary: List all resources
      parameters:
      - in: query
        name: fields[resources]
        schema:
          type: array
          items:
            type: string
            enum:
            - inserted_at
            - updated_at
            - uid
            - name
            - region
            - service
            - tags
            - provider
            - findings
            - url
            - type
        description: endpoint return only specific fields in the response on a per-type
          basis by including a fields[TYPE] query parameter.
        explode: false
      - in: query
        name: filter[inserted_at]
        schema:
          type: string
          format: date
      - in: query
        name: filter[inserted_at__gte]
        schema:
          type: string
          format: date-time
      - in: query
        name: filter[inserted_at__lte]
        schema:
          type: string
          format: date-time
      - in: query
        name: filter[name]
        schema:
          type: string
      - in: query
        name: filter[name__icontains]
        schema:
          type: string
      - in: query
        name: filter[provider]
        schema:
          type: string
          format: uuid
      - in: query
        name: filter[provider__in]
        schema:
          type: array
          items:
            type: string
            format: uuid
        description: Multiple values may be separated by commas.
        explode: false
        style: form
      - in: query
        name: filter[provider_alias]
        schema:
          type: string
      - in: query
        name: filter[provider_alias__icontains]
        schema:
          type: string
      - in: query
        name: filter[provider_alias__in]
        schema:
          type: array
          items:
            type: string
        description: Multiple values may be separated by commas.
        explode: false
        style: form
      - in: query
        name: filter[provider_type]
        schema:
          type: string
          enum:
          - aws
          - azure
          - gcp
          - kubernetes
        description: |-
          * `aws` - AWS
          * `azure` - Azure
          * `gcp` - GCP
          * `kubernetes` - Kubernetes
      - in: query
        name: filter[provider_type__in]
        schema:
          type: array
          items:
            type: string
            enum:
            - aws
            - azure
            - gcp
            - kubernetes
        description: |-
          Multiple values may be separated by commas.

          * `aws` - AWS
          * `azure` - Azure
          * `gcp` - GCP
          * `kubernetes` - Kubernetes
        explode: false
        style: form
      - in: query
        name: filter[provider_uid]
        schema:
          type: string
      - in: query
        name: filter[provider_uid__icontains]
        schema:
          type: string
      - in: query
        name: filter[provider_uid__in]
        schema:
          type: array
          items:
            type: string
        description: Multiple values may be separated by commas.
        explode: false
        style: form
      - in: query
        name: filter[region]
        schema:
          type: string
      - in: query
        name: filter[region__icontains]
        schema:
          type: string
      - in: query
        name: filter[region__in]
        schema:
          type: array
          items:
            type: string
        description: Multiple values may be separated by commas.
        explode: false
        style: form
      - name: filter[search]
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: filter[service]
        schema:
          type: string
      - in: query
        name: filter[service__icontains]
        schema:
          type: string
      - in: query
        name: filter[service__in]
        schema:
          type: array
          items:
            type: string
        description: Multiple values may be separated by commas.
        explode: false
        style: form
      - in: query
        name: filter[tag]
        schema:
          type: string
      - in: query
        name: filter[tag_key]
        schema:
          type: string
      - in: query
        name: filter[tag_value]
        schema:
          type: string
      - in: query
        name: filter[tags]
        schema:
          type: string
      - in: query
        name: filter[type]
        schema:
          type: string
      - in: query
        name: filter[type__icontains]
        schema:
          type: string
      - in: query
        name: filter[type__in]
        schema:
          type: array
          items:
            type: string
        description: Multiple values may be separated by commas.
        explode: false
        style: form
      - in: query
        name: filter[uid]
        schema:
          type: string
      - in: query
        name: filter[uid__icontains]
        schema:
          type: string
      - in: query
        name: filter[updated_at]
        schema:
          type: string
          format: date
      - in: query
        name: filter[updated_at__gte]
        schema:
          type: string
          format: date-time
      - in: query
        name: filter[updated_at__lte]
        schema:
          type: string
          format: date-time
      - in: query
        name: include
        schema:
          type: array
          items:
            type: string
            enum:
            - findings
            - provider
        description: include query parameter to allow the client to customize which
          related resources should be returned.
        explode: false
      - name: page[number]
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page[size]
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: sort
        required: false
        in: query
        description: '[list of fields to sort by](https://jsonapi.org/format/#fetching-sorting)'
        schema:
          type: array
          items:
            type: string
            enum:
            - provider_uid
            - -provider_uid
            - uid
            - -uid
            - name
            - -name
            - region
            - -region
            - service
            - -service
            - type
            - -type
            - inserted_at
            - -inserted_at
            - updated_at
            - -updated_at
        explode: false
      tags:
      - Resource
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/PaginatedResourceList'
          description: ''
  /api/v1/resources/{id}:
    get:
      operationId: resources_retrieve
      description: Fetch detailed information about a specific resource by their ID.
        A Resource is an object that is discovered by Prowler. It can be anything
        from a single host to a whole VPC.
      summary: Retrieve data for a resource
      parameters:
      - in: query
        name: fields[resources]
        schema:
          type: array
          items:
            type: string
            enum:
            - inserted_at
            - updated_at
            - uid
            - name
            - region
            - service
            - tags
            - provider
            - findings
            - url
            - type
        description: endpoint return only specific fields in the response on a per-type
          basis by including a fields[TYPE] query parameter.
        explode: false
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this resource.
        required: true
      - in: query
        name: include
        schema:
          type: array
          items:
            type: string
            enum:
            - findings
            - provider
        description: include query parameter to allow the client to customize which
          related resources should be returned.
        explode: false
      tags:
      - Resource
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ResourceResponse'
          description: ''
  /api/v1/roles:
    get:
      operationId: roles_list
      description: Retrieve a list of all roles with options for filtering by various
        criteria.
      summary: List all roles
      parameters:
      - in: query
        name: fields[roles]
        schema:
          type: array
          items:
            type: string
            enum:
            - name
            - manage_users
            - manage_account
            - manage_billing
            - manage_providers
            - manage_integrations
            - manage_scans
            - permission_state
            - unlimited_visibility
            - inserted_at
            - updated_at
            - provider_groups
            - users
            - invitations
            - url
        description: endpoint return only specific fields in the response on a per-type
          basis by including a fields[TYPE] query parameter.
        explode: false
      - in: query
        name: filter[id]
        schema:
          type: string
          format: uuid
      - in: query
        name: filter[id__in]
        schema:
          type: array
          items:
            type: string
            format: uuid
        description: Multiple values may be separated by commas.
        explode: false
        style: form
      - in: query
        name: filter[inserted_at]
        schema:
          type: string
          format: date
      - in: query
        name: filter[inserted_at__gte]
        schema:
          type: string
          format: date-time
      - in: query
        name: filter[inserted_at__lte]
        schema:
          type: string
          format: date-time
      - in: query
        name: filter[name]
        schema:
          type: string
      - in: query
        name: filter[name__in]
        schema:
          type: array
          items:
            type: string
        description: Multiple values may be separated by commas.
        explode: false
        style: form
      - in: query
        name: filter[permission_state]
        schema:
          type: string
          enum:
          - limited
          - none
          - unlimited
        description: |-
          * `unlimited` - Unlimited permissions
          * `limited` - Limited permissions
          * `none` - No permissions
      - name: filter[search]
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: filter[updated_at]
        schema:
          type: string
          format: date
      - in: query
        name: filter[updated_at__gte]
        schema:
          type: string
          format: date-time
      - in: query
        name: filter[updated_at__lte]
        schema:
          type: string
          format: date-time
      - name: page[number]
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page[size]
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: sort
        required: false
        in: query
        description: '[list of fields to sort by](https://jsonapi.org/format/#fetching-sorting)'
        schema:
          type: array
          items:
            type: string
            enum:
            - id
            - -id
            - name
            - -name
            - manage_users
            - -manage_users
            - manage_account
            - -manage_account
            - manage_billing
            - -manage_billing
            - manage_providers
            - -manage_providers
            - manage_integrations
            - -manage_integrations
            - manage_scans
            - -manage_scans
            - permission_state
            - -permission_state
            - unlimited_visibility
            - -unlimited_visibility
            - inserted_at
            - -inserted_at
            - updated_at
            - -updated_at
            - provider_groups
            - -provider_groups
            - users
            - -users
            - invitations
            - -invitations
            - url
            - -url
        explode: false
      tags:
      - Role
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/PaginatedRoleList'
          description: ''
    post:
      operationId: roles_create
      description: Add a new role to the system by providing the required role details.
      summary: Create a new role
      tags:
      - Role
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/RoleCreateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RoleCreateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RoleCreateRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/RoleCreateResponse'
          description: ''
  /api/v1/roles/{id}:
    get:
      operationId: roles_retrieve
      description: Fetch detailed information about a specific role by their ID.
      summary: Retrieve data from a role
      parameters:
      - in: query
        name: fields[roles]
        schema:
          type: array
          items:
            type: string
            enum:
            - name
            - manage_users
            - manage_account
            - manage_billing
            - manage_providers
            - manage_integrations
            - manage_scans
            - permission_state
            - unlimited_visibility
            - inserted_at
            - updated_at
            - provider_groups
            - users
            - invitations
            - url
        description: endpoint return only specific fields in the response on a per-type
          basis by including a fields[TYPE] query parameter.
        explode: false
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this role.
        required: true
      tags:
      - Role
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/RoleResponse'
          description: ''
    patch:
      operationId: roles_partial_update
      description: Update certain fields of an existing role's information without
        affecting other fields.
      summary: Partially update a role
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this role.
        required: true
      tags:
      - Role
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/PatchedRoleUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedRoleUpdateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedRoleUpdateRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/SerializerMetaclassResponse'
          description: ''
    delete:
      operationId: roles_destroy
      description: Remove a role from the system by their ID.
      summary: Delete a role
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this role.
        required: true
      tags:
      - Role
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/roles/{id}/relationships/provider_groups:
    post:
      operationId: roles_relationships_provider_groups_create
      description: Add a new role-provider_groups relationship to the system by providing
        the required role-provider_groups details.
      summary: Create a new role-provider_groups relationship
      tags:
      - Role
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/RoleProviderGroupRelationshipRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RoleProviderGroupRelationshipRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RoleProviderGroupRelationshipRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '204':
          description: Relationship created successfully
        '400':
          description: Bad request (e.g., relationship already exists)
    patch:
      operationId: roles_relationships_provider_groups_partial_update
      description: Update the role-provider_groups relationship information without
        affecting other fields.
      summary: Partially update a role-provider_groups relationship
      tags:
      - Role
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/PatchedRoleProviderGroupRelationshipRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedRoleProviderGroupRelationshipRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedRoleProviderGroupRelationshipRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '204':
          description: Relationship updated successfully
    delete:
      operationId: roles_relationships_provider_groups_destroy
      description: Remove the role-provider_groups relationship from the system by
        their ID.
      summary: Delete a role-provider_groups relationship
      tags:
      - Role
      security:
      - jwtAuth: []
      responses:
        '204':
          description: Relationship deleted successfully
  /api/v1/scans:
    get:
      operationId: scans_list
      description: Retrieve a list of all scans with options for filtering by various
        criteria.
      summary: List all scans
      parameters:
      - in: query
        name: fields[scans]
        schema:
          type: array
          items:
            type: string
            enum:
            - name
            - trigger
            - state
            - unique_resource_count
            - progress
            - duration
            - provider
            - task
            - inserted_at
            - started_at
            - completed_at
            - scheduled_at
            - next_scan_at
            - url
        description: endpoint return only specific fields in the response on a per-type
          basis by including a fields[TYPE] query parameter.
        explode: false
      - in: query
        name: filter[completed_at]
        schema:
          type: string
          format: date
      - in: query
        name: filter[inserted_at]
        schema:
          type: string
          format: date
      - in: query
        name: filter[name]
        schema:
          type: string
      - in: query
        name: filter[name__icontains]
        schema:
          type: string
      - in: query
        name: filter[next_scan_at]
        schema:
          type: string
          format: date
      - in: query
        name: filter[next_scan_at__gte]
        schema:
          type: string
          format: date-time
      - in: query
        name: filter[next_scan_at__lte]
        schema:
          type: string
          format: date-time
      - in: query
        name: filter[provider]
        schema:
          type: string
          format: uuid
      - in: query
        name: filter[provider__in]
        schema:
          type: array
          items:
            type: string
            format: uuid
        description: Multiple values may be separated by commas.
        explode: false
        style: form
      - in: query
        name: filter[provider_alias]
        schema:
          type: string
      - in: query
        name: filter[provider_alias__icontains]
        schema:
          type: string
      - in: query
        name: filter[provider_alias__in]
        schema:
          type: array
          items:
            type: string
        description: Multiple values may be separated by commas.
        explode: false
        style: form
      - in: query
        name: filter[provider_type]
        schema:
          type: string
          enum:
          - aws
          - azure
          - gcp
          - kubernetes
        description: |-
          * `aws` - AWS
          * `azure` - Azure
          * `gcp` - GCP
          * `kubernetes` - Kubernetes
      - in: query
        name: filter[provider_type__in]
        schema:
          type: array
          items:
            type: string
            enum:
            - aws
            - azure
            - gcp
            - kubernetes
        description: |-
          Multiple values may be separated by commas.

          * `aws` - AWS
          * `azure` - Azure
          * `gcp` - GCP
          * `kubernetes` - Kubernetes
        explode: false
        style: form
      - in: query
        name: filter[provider_uid]
        schema:
          type: string
      - in: query
        name: filter[provider_uid__icontains]
        schema:
          type: string
      - in: query
        name: filter[provider_uid__in]
        schema:
          type: array
          items:
            type: string
        description: Multiple values may be separated by commas.
        explode: false
        style: form
      - name: filter[search]
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: filter[started_at]
        schema:
          type: string
          format: date
      - in: query
        name: filter[started_at__gte]
        schema:
          type: string
          format: date-time
      - in: query
        name: filter[started_at__lte]
        schema:
          type: string
          format: date-time
      - in: query
        name: filter[state]
        schema:
          type: string
          enum:
          - available
          - cancelled
          - completed
          - executing
          - failed
          - scheduled
        description: |-
          * `available` - Available
          * `scheduled` - Scheduled
          * `executing` - Executing
          * `completed` - Completed
          * `failed` - Failed
          * `cancelled` - Cancelled
      - in: query
        name: filter[state__in]
        schema:
          type: array
          items:
            type: string
            enum:
            - available
            - cancelled
            - completed
            - executing
            - failed
            - scheduled
        description: |-
          Multiple values may be separated by commas.

          * `available` - Available
          * `scheduled` - Scheduled
          * `executing` - Executing
          * `completed` - Completed
          * `failed` - Failed
          * `cancelled` - Cancelled
        explode: false
        style: form
      - in: query
        name: filter[trigger]
        schema:
          type: string
          enum:
          - manual
          - scheduled
        description: |-
          * `scheduled` - Scheduled
          * `manual` - Manual
      - name: page[number]
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page[size]
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: sort
        required: false
        in: query
        description: '[list of fields to sort by](https://jsonapi.org/format/#fetching-sorting)'
        schema:
          type: array
          items:
            type: string
            enum:
            - name
            - -name
            - trigger
            - -trigger
            - attempted_at
            - -attempted_at
            - scheduled_at
            - -scheduled_at
            - inserted_at
            - -inserted_at
            - updated_at
            - -updated_at
        explode: false
      tags:
      - Scan
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/PaginatedScanList'
          description: ''
    post:
      operationId: scans_create
      description: Trigger a manual scan by providing the required scan details. If
        `scanner_args` are not provided, the system will automatically use the default
        settings from the associated provider. If you do provide `scanner_args`, these
        settings will be merged with the provider's defaults. This means that your
        provided settings will override the defaults only where they conflict, while
        the rest of the default settings will remain intact.
      summary: Trigger a manual scan
      tags:
      - Scan
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/ScanCreateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ScanCreateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ScanCreateRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '202':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/OpenApiResponseResponse'
          description: ''
  /api/v1/scans/{id}:
    get:
      operationId: scans_retrieve
      description: Fetch detailed information about a specific scan by its ID.
      summary: Retrieve data from a specific scan
      parameters:
      - in: query
        name: fields[scans]
        schema:
          type: array
          items:
            type: string
            enum:
            - name
            - trigger
            - state
            - unique_resource_count
            - progress
            - duration
            - provider
            - task
            - inserted_at
            - started_at
            - completed_at
            - scheduled_at
            - next_scan_at
            - url
        description: endpoint return only specific fields in the response on a per-type
          basis by including a fields[TYPE] query parameter.
        explode: false
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this scan.
        required: true
      tags:
      - Scan
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ScanResponse'
          description: ''
    patch:
      operationId: scans_partial_update
      description: Update certain fields of an existing scan without affecting other
        fields.
      summary: Partially update a scan
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this scan.
        required: true
      tags:
      - Scan
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/PatchedScanUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedScanUpdateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedScanUpdateRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ScanUpdateResponse'
          description: ''
  /api/v1/schedules/daily:
    post:
      operationId: schedules_daily_create
      description: Schedules a daily scan for the specified provider. This endpoint
        creates a periodic task that will execute a scan every 24 hours.
      summary: Create a daily schedule scan for a given provider
      tags:
      - Schedule
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/ScheduleDailyCreateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ScheduleDailyCreateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ScheduleDailyCreateRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '202':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/OpenApiResponseResponse'
          description: ''
  /api/v1/tasks:
    get:
      operationId: tasks_list
      description: Retrieve a list of all tasks with options for filtering by name,
        state, and other criteria.
      summary: List all tasks
      parameters:
      - in: query
        name: fields[tasks]
        schema:
          type: array
          items:
            type: string
            enum:
            - inserted_at
            - completed_at
            - name
            - state
            - result
            - task_args
            - metadata
        description: endpoint return only specific fields in the response on a per-type
          basis by including a fields[TYPE] query parameter.
        explode: false
      - in: query
        name: filter[name]
        schema:
          type: string
      - in: query
        name: filter[name__icontains]
        schema:
          type: string
      - name: filter[search]
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: filter[state]
        schema:
          type: string
          title: Task State
          enum:
          - available
          - cancelled
          - completed
          - executing
          - failed
          - scheduled
        description: |-
          Current state of the task being run

          * `available` - Available
          * `scheduled` - Scheduled
          * `executing` - Executing
          * `completed` - Completed
          * `failed` - Failed
          * `cancelled` - Cancelled
      - name: page[number]
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page[size]
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: sort
        required: false
        in: query
        description: '[list of fields to sort by](https://jsonapi.org/format/#fetching-sorting)'
        schema:
          type: array
          items:
            type: string
            enum:
            - inserted_at
            - -inserted_at
            - completed_at
            - -completed_at
            - name
            - -name
            - state
            - -state
        explode: false
      tags:
      - Task
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/PaginatedTaskList'
          description: ''
  /api/v1/tasks/{id}:
    get:
      operationId: tasks_retrieve
      description: Fetch detailed information about a specific task by its ID.
      summary: Retrieve data from a specific task
      parameters:
      - in: query
        name: fields[tasks]
        schema:
          type: array
          items:
            type: string
            enum:
            - inserted_at
            - completed_at
            - name
            - state
            - result
            - task_args
            - metadata
        description: endpoint return only specific fields in the response on a per-type
          basis by including a fields[TYPE] query parameter.
        explode: false
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this task.
        required: true
      tags:
      - Task
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/TaskResponse'
          description: ''
    delete:
      operationId: tasks_destroy
      description: Try to revoke a task using its ID. Only tasks that are not yet
        in progress can be revoked.
      summary: Revoke a task
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this task.
        required: true
      tags:
      - Task
      security:
      - jwtAuth: []
      responses:
        '202':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/OpenApiResponseResponse'
          description: ''
  /api/v1/tenants:
    get:
      operationId: tenants_list
      description: Retrieve a list of all tenants with options for filtering by various
        criteria.
      summary: List all tenants
      parameters:
      - in: query
        name: fields[tenants]
        schema:
          type: array
          items:
            type: string
            enum:
            - name
            - memberships
        description: endpoint return only specific fields in the response on a per-type
          basis by including a fields[TYPE] query parameter.
        explode: false
      - in: query
        name: filter[inserted_at]
        schema:
          type: string
          format: date
      - in: query
        name: filter[inserted_at__date]
        schema:
          type: string
          format: date
      - in: query
        name: filter[inserted_at__gte]
        schema:
          type: string
          format: date-time
      - in: query
        name: filter[inserted_at__lte]
        schema:
          type: string
          format: date-time
      - in: query
        name: filter[name]
        schema:
          type: string
      - in: query
        name: filter[name__icontains]
        schema:
          type: string
      - name: filter[search]
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: filter[updated_at]
        schema:
          type: string
          format: date
      - in: query
        name: filter[updated_at__gte]
        schema:
          type: string
          format: date-time
      - in: query
        name: filter[updated_at__lte]
        schema:
          type: string
          format: date-time
      - name: page[number]
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page[size]
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: sort
        required: false
        in: query
        description: '[list of fields to sort by](https://jsonapi.org/format/#fetching-sorting)'
        schema:
          type: array
          items:
            type: string
            enum:
            - name
            - -name
            - inserted_at
            - -inserted_at
            - updated_at
            - -updated_at
        explode: false
      tags:
      - Tenant
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/PaginatedTenantList'
          description: ''
    post:
      operationId: tenants_create
      description: Add a new tenant to the system by providing the required tenant
        details.
      summary: Create a new tenant
      tags:
      - Tenant
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/TenantRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TenantRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TenantRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/TenantResponse'
          description: ''
  /api/v1/tenants/{id}:
    get:
      operationId: tenants_retrieve
      description: Fetch detailed information about a specific tenant by their ID.
      summary: Retrieve data from a tenant
      parameters:
      - in: query
        name: fields[tenants]
        schema:
          type: array
          items:
            type: string
            enum:
            - name
            - memberships
        description: endpoint return only specific fields in the response on a per-type
          basis by including a fields[TYPE] query parameter.
        explode: false
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tenant.
        required: true
      tags:
      - Tenant
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/TenantResponse'
          description: ''
    patch:
      operationId: tenants_partial_update
      description: Update certain fields of an existing tenant's information without
        affecting other fields.
      summary: Partially update a tenant
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tenant.
        required: true
      tags:
      - Tenant
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/PatchedTenantRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTenantRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTenantRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/TenantResponse'
          description: ''
    delete:
      operationId: tenants_destroy
      description: Remove a tenant from the system by their ID.
      summary: Delete a tenant
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tenant.
        required: true
      tags:
      - Tenant
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/tenants/{tenant_pk}/memberships:
    get:
      operationId: tenants_memberships_list
      description: List the membership details of users in a tenant you are a part
        of.
      summary: List tenant memberships
      parameters:
      - in: query
        name: fields[memberships]
        schema:
          type: array
          items:
            type: string
            enum:
            - user
            - tenant
            - role
            - date_joined
        description: endpoint return only specific fields in the response on a per-type
          basis by including a fields[TYPE] query parameter.
        explode: false
      - name: filter[search]
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - name: page[number]
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page[size]
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: sort
        required: false
        in: query
        description: '[list of fields to sort by](https://jsonapi.org/format/#fetching-sorting)'
        schema:
          type: array
          items:
            type: string
            enum:
            - id
            - -id
            - user
            - -user
            - tenant
            - -tenant
            - role
            - -role
            - date_joined
            - -date_joined
        explode: false
      - in: path
        name: tenant_pk
        schema:
          type: string
          format: uuid
        description: Tenant ID
        required: true
      tags:
      - Tenant
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/PaginatedMembershipList'
          description: ''
  /api/v1/tenants/{tenant_pk}/memberships/{id}:
    delete:
      operationId: tenants_memberships_destroy
      description: Delete the membership details of users in a tenant. You need to
        be one of the owners to delete a membership that is not yours. If you are
        the last owner of a tenant, you cannot delete your own membership.
      summary: Delete tenant memberships
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this membership.
        required: true
      - in: path
        name: tenant_pk
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - Tenant
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/tenants/invitations:
    get:
      operationId: tenants_invitations_list
      description: Retrieve a list of all tenant invitations with options for filtering
        by various criteria.
      summary: List all invitations
      parameters:
      - in: query
        name: fields[invitations]
        schema:
          type: array
          items:
            type: string
            enum:
            - inserted_at
            - updated_at
            - email
            - state
            - token
            - roles
            - expires_at
            - inviter
            - url
        description: endpoint return only specific fields in the response on a per-type
          basis by including a fields[TYPE] query parameter.
        explode: false
      - in: query
        name: filter[email]
        schema:
          type: string
      - in: query
        name: filter[email__icontains]
        schema:
          type: string
      - in: query
        name: filter[expires_at]
        schema:
          type: string
          format: date
      - in: query
        name: filter[expires_at__date]
        schema:
          type: string
          format: date
      - in: query
        name: filter[expires_at__gte]
        schema:
          type: string
          format: date-time
      - in: query
        name: filter[expires_at__lte]
        schema:
          type: string
          format: date-time
      - in: query
        name: filter[inserted_at]
        schema:
          type: string
          format: date
      - in: query
        name: filter[inserted_at__date]
        schema:
          type: string
          format: date
      - in: query
        name: filter[inserted_at__gte]
        schema:
          type: string
          format: date-time
      - in: query
        name: filter[inserted_at__lte]
        schema:
          type: string
          format: date-time
      - in: query
        name: filter[inviter]
        schema:
          type: string
          format: uuid
      - name: filter[search]
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: filter[state]
        schema:
          type: string
          enum:
          - accepted
          - expired
          - pending
          - revoked
        description: |-
          * `pending` - Invitation is pending
          * `accepted` - Invitation was accepted by a user
          * `expired` - Invitation expired after the configured time
          * `revoked` - Invitation was revoked by a user
      - in: query
        name: filter[state__in]
        schema:
          type: array
          items:
            type: string
            enum:
            - accepted
            - expired
            - pending
            - revoked
        description: |-
          Multiple values may be separated by commas.

          * `pending` - Invitation is pending
          * `accepted` - Invitation was accepted by a user
          * `expired` - Invitation expired after the configured time
          * `revoked` - Invitation was revoked by a user
        explode: false
        style: form
      - in: query
        name: filter[updated_at]
        schema:
          type: string
          format: date
      - in: query
        name: filter[updated_at__date]
        schema:
          type: string
          format: date
      - in: query
        name: filter[updated_at__gte]
        schema:
          type: string
          format: date-time
      - in: query
        name: filter[updated_at__lte]
        schema:
          type: string
          format: date-time
      - name: page[number]
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page[size]
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: sort
        required: false
        in: query
        description: '[list of fields to sort by](https://jsonapi.org/format/#fetching-sorting)'
        schema:
          type: array
          items:
            type: string
            enum:
            - inserted_at
            - -inserted_at
            - updated_at
            - -updated_at
            - expires_at
            - -expires_at
            - state
            - -state
            - inviter
            - -inviter
        explode: false
      tags:
      - Invitation
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/PaginatedInvitationList'
          description: ''
    post:
      operationId: tenants_invitations_create
      description: Add a new tenant invitation to the system by providing the required
        invitation details. The invited user will have to accept the invitations or
        create an account using the given code.
      summary: Invite a user to a tenant
      tags:
      - Invitation
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/InvitationCreateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/InvitationCreateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InvitationCreateRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/InvitationCreateResponse'
          description: ''
  /api/v1/tenants/invitations/{id}:
    get:
      operationId: tenants_invitations_retrieve
      description: Fetch detailed information about a specific invitation by its ID.
      summary: Retrieve data from a tenant invitation
      parameters:
      - in: query
        name: fields[invitations]
        schema:
          type: array
          items:
            type: string
            enum:
            - inserted_at
            - updated_at
            - email
            - state
            - token
            - roles
            - expires_at
            - inviter
            - url
        description: endpoint return only specific fields in the response on a per-type
          basis by including a fields[TYPE] query parameter.
        explode: false
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - Invitation
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/InvitationResponse'
          description: ''
    patch:
      operationId: tenants_invitations_partial_update
      description: Update certain fields of an existing tenant invitation's information
        without affecting other fields.
      summary: Partially update a tenant invitation
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - Invitation
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/PatchedInvitationUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedInvitationUpdateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedInvitationUpdateRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/InvitationUpdateResponse'
          description: ''
    delete:
      operationId: tenants_invitations_destroy
      description: Revoke a tenant invitation from the system by their ID.
      summary: Revoke a tenant invitation
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - Invitation
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/tokens:
    post:
      operationId: tokens_create
      description: Obtain a token by providing valid credentials and an optional tenant
        ID.
      summary: Obtain a token
      tags:
      - Token
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/TokenRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRequest'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/TokenResponse'
          description: ''
  /api/v1/tokens/refresh:
    post:
      operationId: tokens_refresh_create
      description: Refresh an access token by providing a valid refresh token. Former
        refresh tokens are invalidated when a new one is issued.
      summary: Refresh a token
      tags:
      - Token
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/TokenRefreshRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefreshRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefreshRequest'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/TokenRefreshResponse'
          description: ''
  /api/v1/users:
    get:
      operationId: users_list
      description: Retrieve a list of all users with options for filtering by various
        criteria.
      summary: List all users
      parameters:
      - in: query
        name: fields[users]
        schema:
          type: array
          items:
            type: string
            enum:
            - name
            - email
            - company_name
            - date_joined
            - memberships
            - roles
        description: endpoint return only specific fields in the response on a per-type
          basis by including a fields[TYPE] query parameter.
        explode: false
      - in: query
        name: filter[company_name]
        schema:
          type: string
      - in: query
        name: filter[company_name__icontains]
        schema:
          type: string
      - in: query
        name: filter[date_joined]
        schema:
          type: string
          format: date
      - in: query
        name: filter[date_joined__date]
        schema:
          type: string
          format: date
      - in: query
        name: filter[date_joined__gte]
        schema:
          type: string
          format: date-time
      - in: query
        name: filter[date_joined__lte]
        schema:
          type: string
          format: date-time
      - in: query
        name: filter[email]
        schema:
          type: string
      - in: query
        name: filter[email__icontains]
        schema:
          type: string
      - in: query
        name: filter[is_active]
        schema:
          type: boolean
      - in: query
        name: filter[name]
        schema:
          type: string
      - in: query
        name: filter[name__icontains]
        schema:
          type: string
      - name: filter[search]
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: include
        schema:
          type: array
          items:
            type: string
            enum:
            - roles
        description: include query parameter to allow the client to customize which
          related resources should be returned.
        explode: false
      - name: page[number]
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page[size]
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: sort
        required: false
        in: query
        description: '[list of fields to sort by](https://jsonapi.org/format/#fetching-sorting)'
        schema:
          type: array
          items:
            type: string
            enum:
            - name
            - -name
            - email
            - -email
            - company_name
            - -company_name
            - date_joined
            - -date_joined
            - is_active
            - -is_active
        explode: false
      tags:
      - User
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/PaginatedUserList'
          description: ''
    post:
      operationId: users_create
      description: Create a new user account by providing the necessary registration
        details.
      summary: Register a new user
      parameters:
      - in: query
        name: invitation_token
        schema:
          type: string
          example: F3NMFPNDZHR4Z9
        description: Optional invitation code for joining an existing tenant.
      tags:
      - User
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/UserCreateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserCreateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserCreateRequest'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/UserCreateResponse'
          description: ''
  /api/v1/users/{id}:
    get:
      operationId: users_retrieve
      description: Fetch detailed information about an authenticated user.
      summary: Retrieve a user's information
      parameters:
      - in: query
        name: fields[users]
        schema:
          type: array
          items:
            type: string
            enum:
            - name
            - email
            - company_name
            - date_joined
            - memberships
            - roles
        description: endpoint return only specific fields in the response on a per-type
          basis by including a fields[TYPE] query parameter.
        explode: false
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this user.
        required: true
      - in: query
        name: include
        schema:
          type: array
          items:
            type: string
            enum:
            - roles
        description: include query parameter to allow the client to customize which
          related resources should be returned.
        explode: false
      tags:
      - User
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/UserResponse'
          description: ''
    patch:
      operationId: users_partial_update
      description: Partially update information about a user.
      summary: Update user information
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this user.
        required: true
      tags:
      - User
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/PatchedUserUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserUpdateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserUpdateRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/UserUpdateResponse'
          description: ''
    delete:
      operationId: users_destroy
      description: Remove a user account from the system.
      summary: Delete a user account
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this user.
        required: true
      tags:
      - User
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/users/{id}/relationships/roles:
    post:
      operationId: users_relationships_roles_create
      description: Add a new user-roles relationship to the system by providing the
        required user-roles details.
      summary: Create a new user-roles relationship
      tags:
      - User
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/UserRoleRelationshipRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserRoleRelationshipRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserRoleRelationshipRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '204':
          description: Relationship created successfully
        '400':
          description: Bad request (e.g., relationship already exists)
    patch:
      operationId: users_relationships_roles_partial_update
      description: Update the user-roles relationship information without affecting
        other fields.
      summary: Partially update a user-roles relationship
      tags:
      - User
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/PatchedUserRoleRelationshipRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserRoleRelationshipRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserRoleRelationshipRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '204':
          description: Relationship updated successfully
    delete:
      operationId: users_relationships_roles_destroy
      description: Remove the user-roles relationship from the system by their ID.
      summary: Delete a user-roles relationship
      tags:
      - User
      security:
      - jwtAuth: []
      responses:
        '204':
          description: Relationship deleted successfully
  /api/v1/users/{user_pk}/memberships:
    get:
      operationId: users_memberships_list
      description: Retrieve a list of all user memberships with options for filtering
        by various criteria.
      summary: List user memberships
      parameters:
      - in: query
        name: fields[memberships]
        schema:
          type: array
          items:
            type: string
            enum:
            - user
            - tenant
            - role
            - date_joined
        description: endpoint return only specific fields in the response on a per-type
          basis by including a fields[TYPE] query parameter.
        explode: false
      - in: query
        name: filter[date_joined]
        schema:
          type: string
          format: date
      - in: query
        name: filter[date_joined__date]
        schema:
          type: string
          format: date
      - in: query
        name: filter[date_joined__gte]
        schema:
          type: string
          format: date-time
      - in: query
        name: filter[date_joined__lte]
        schema:
          type: string
          format: date-time
      - in: query
        name: filter[role]
        schema:
          type: string
          enum:
          - member
          - owner
        description: |-
          * `owner` - Owner
          * `member` - Member
      - name: filter[search]
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: filter[tenant]
        schema:
          type: string
          format: uuid
      - name: page[number]
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page[size]
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: sort
        required: false
        in: query
        description: '[list of fields to sort by](https://jsonapi.org/format/#fetching-sorting)'
        schema:
          type: array
          items:
            type: string
            enum:
            - tenant
            - -tenant
            - role
            - -role
            - date_joined
            - -date_joined
        explode: false
      - in: path
        name: user_pk
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - User
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/PaginatedMembershipList'
          description: ''
  /api/v1/users/{user_pk}/memberships/{id}:
    get:
      operationId: users_memberships_retrieve
      description: Fetch detailed information about a specific user membership by
        their ID.
      summary: Retrieve membership data from the user
      parameters:
      - in: query
        name: fields[memberships]
        schema:
          type: array
          items:
            type: string
            enum:
            - user
            - tenant
            - role
            - date_joined
        description: endpoint return only specific fields in the response on a per-type
          basis by including a fields[TYPE] query parameter.
        explode: false
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this membership.
        required: true
      - in: path
        name: user_pk
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - User
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/MembershipResponse'
          description: ''
  /api/v1/users/me:
    get:
      operationId: users_me_retrieve
      description: Fetch detailed information about the authenticated user.
      summary: Retrieve the current user's information
      parameters:
      - in: query
        name: fields[users]
        schema:
          type: array
          items:
            type: string
            enum:
            - name
            - email
            - company_name
            - date_joined
            - memberships
            - roles
        description: endpoint return only specific fields in the response on a per-type
          basis by including a fields[TYPE] query parameter.
        explode: false
      - in: query
        name: include
        schema:
          type: array
          items:
            type: string
            enum:
            - roles
        description: include query parameter to allow the client to customize which
          related resources should be returned.
        explode: false
      tags:
      - User
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/UserResponse'
          description: ''
components:
  schemas:
    ComplianceOverview:
      type: object
      required:
      - type
      - id
      additionalProperties: false
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/Type7f7Enum'
          description: The [type](https://jsonapi.org/format/#document-resource-object-identification)
            member is used to describe resource objects that share common attributes
            and relationships.
        id:
          type: string
          format: uuid
        attributes:
          type: object
          properties:
            inserted_at:
              type: string
              format: date-time
              readOnly: true
            compliance_id:
              type: string
              maxLength: 100
            framework:
              type: string
              maxLength: 100
            version:
              type: string
              maxLength: 50
            requirements_status:
              type: object
              properties:
                passed:
                  type: integer
                failed:
                  type: integer
                manual:
                  type: integer
                total:
                  type: integer
              readOnly: true
            region:
              type: string
              maxLength: 50
            provider_type:
              type: string
              nullable: true
              readOnly: true
          required:
          - compliance_id
          - framework
        relationships:
          type: object
          properties:
            scan:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                    type:
                      type: string
                      enum:
                      - scans
                      title: Resource Type Name
                      description: The [type](https://jsonapi.org/format/#document-resource-object-identification)
                        member is used to describe resource objects that share common
                        attributes and relationships.
                  required:
                  - id
                  - type
              required:
              - data
              description: The identifier of the related object.
              title: Resource Identifier
              nullable: true
    ComplianceOverviewFull:
      type: object
      required:
      - type
      - id
      additionalProperties: false
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/Type7f7Enum'
          description: The [type](https://jsonapi.org/format/#document-resource-object-identification)
            member is used to describe resource objects that share common attributes
            and relationships.
        id:
          type: string
          format: uuid
        attributes:
          type: object
          properties:
            inserted_at:
              type: string
              format: date-time
              readOnly: true
            compliance_id:
              type: string
              maxLength: 100
            framework:
              type: string
              maxLength: 100
            version:
              type: string
              maxLength: 50
            requirements_status:
              type: object
              properties:
                passed:
                  type: integer
                failed:
                  type: integer
                manual:
                  type: integer
                total:
                  type: integer
              readOnly: true
            region:
              type: string
              maxLength: 50
            provider_type:
              type: string
              nullable: true
              readOnly: true
            description:
              type: string
            requirements:
              type: object
              properties:
                requirement_id:
                  type: object
                  properties:
                    name:
                      type: string
                    checks:
                      type: object
                      properties:
                        check_name:
                          type: object
                          properties:
                            status:
                              type: string
                              enum:
                              - PASS
                              - FAIL
                              - null
                      description: Each key in the 'checks' object is a check name,
                        with values as 'PASS', 'FAIL', or null.
                    status:
                      type: string
                      enum:
                      - PASS
                      - FAIL
                      - MANUAL
                    attributes:
                      type: array
                      items:
                        type: object
                    description:
                      type: string
                    checks_status:
                      type: object
                      properties:
                        total:
                          type: integer
                        pass:
                          type: integer
                        fail:
                          type: integer
                        manual:
                          type: integer
              readOnly: true
          required:
          - compliance_id
          - framework
        relationships:
          type: object
          properties:
            scan:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                    type:
                      type: string
                      enum:
                      - scans
                      title: Resource Type Name
                      description: The [type](https://jsonapi.org/format/#document-resource-object-identification)
                        member is used to describe resource objects that share common
                        attributes and relationships.
                  required:
                  - id
                  - type
              required:
              - data
              description: The identifier of the related object.
              title: Resource Identifier
              nullable: true
    ComplianceOverviewFullResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ComplianceOverviewFull'
      required:
      - data
    Finding:
      type: object
      required:
      - type
      - id
      additionalProperties: false
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/FindingTypeEnum'
          description: The [type](https://jsonapi.org/format/#document-resource-object-identification)
            member is used to describe resource objects that share common attributes
            and relationships.
        id:
          type: string
          format: uuid
        attributes:
          type: object
          properties:
            uid:
              type: string
              maxLength: 300
            delta:
              enum:
              - new
              - changed
              - null
              type: string
              description: |-
                * `new` - New
                * `changed` - Changed
              nullable: true
            status:
              enum:
              - FAIL
              - PASS
              - MANUAL
              - MUTED
              type: string
              description: |-
                * `FAIL` - Fail
                * `PASS` - Pass
                * `MANUAL` - Manual
                * `MUTED` - Muted
            status_extended:
              type: string
              nullable: true
            severity:
              enum:
              - critical
              - high
              - medium
              - low
              - informational
              type: string
              description: |-
                * `critical` - Critical
                * `high` - High
                * `medium` - Medium
                * `low` - Low
                * `informational` - Informational
            check_id:
              type: string
              maxLength: 100
            check_metadata: {}
            raw_result: {}
            inserted_at:
              type: string
              format: date-time
              readOnly: true
            updated_at:
              type: string
              format: date-time
              readOnly: true
          required:
          - uid
          - status
          - severity
          - check_id
        relationships:
          type: object
          properties:
            scan:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                    type:
                      type: string
                      enum:
                      - scans
                      title: Resource Type Name
                      description: The [type](https://jsonapi.org/format/#document-resource-object-identification)
                        member is used to describe resource objects that share common
                        attributes and relationships.
                  required:
                  - id
                  - type
              required:
              - data
              description: The identifier of the related object.
              title: Resource Identifier
            resources:
              type: object
              properties:
                data:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                        title: Resource Identifier
                        description: The identifier of the related object.
                      type:
                        type: string
                        enum:
                        - resources
                        title: Resource Type Name
                        description: The [type](https://jsonapi.org/format/#document-resource-object-identification)
                          member is used to describe resource objects that share common
                          attributes and relationships.
                    required:
                    - id
                    - type
              required:
              - data
              description: A related resource object from type resources
              title: resources
              readOnly: true
          required:
          - scan
    FindingResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Finding'
      required:
      - data
    FindingTypeEnum:
      type: string
      enum:
      - findings
    Invitation:
      type: object
      required:
      - type
      - id
      additionalProperties: false
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/TypeD4dEnum'
          description: The [type](https://jsonapi.org/format/#document-resource-object-identification)
            member is used to describe resource objects that share common attributes
            and relationships.
        id:
          type: string
          format: uuid
        attributes:
          type: object
          properties:
            inserted_at:
              type: string
              format: date-time
              readOnly: true
            updated_at:
              type: string
              format: date-time
              readOnly: true
            email:
              type: string
              format: email
              maxLength: 254
            state:
              enum:
              - pending
              - accepted
              - expired
              - revoked
              type: string
              description: |-
                * `pending` - Invitation is pending
                * `accepted` - Invitation was accepted by a user
                * `expired` - Invitation expired after the configured time
                * `revoked` - Invitation was revoked by a user
            token:
              type: string
              readOnly: true
            expires_at:
              type: string
              format: date-time
          required:
          - email
        relationships:
          type: object
          properties:
            roles:
              type: object
              properties:
                data:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                        title: Resource Identifier
                        description: The identifier of the related object.
                      type:
                        type: string
                        enum:
                        - roles
                        title: Resource Type Name
                        description: The [type](https://jsonapi.org/format/#document-resource-object-identification)
                          member is used to describe resource objects that share common
                          attributes and relationships.
                    required:
                    - id
                    - type
              required:
              - data
              description: A related resource object from type roles
              title: roles
            inviter:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                    type:
                      type: string
                      enum:
                      - users
                      title: Resource Type Name
                      description: The [type](https://jsonapi.org/format/#document-resource-object-identification)
                        member is used to describe resource objects that share common
                        attributes and relationships.
                  required:
                  - id
                  - type
              required:
              - data
              description: The identifier of the related object.
              title: Resource Identifier
              nullable: true
          required:
          - roles
    InvitationAcceptRequest:
      type: object
      properties:
        data:
          type: object
          required:
          - type
          additionalProperties: false
          properties:
            type:
              type: string
              description: The [type](https://jsonapi.org/format/#document-resource-object-identification)
                member is used to describe resource objects that share common attributes
                and relationships.
              enum:
              - invitations
            attributes:
              type: object
              properties:
                invitation_token:
                  type: string
                  writeOnly: true
                  minLength: 1
              required:
              - invitation_token
      required:
      - data
    InvitationCreate:
      type: object
      required:
      - type
      additionalProperties: false
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/TypeD4dEnum'
          description: The [type](https://jsonapi.org/format/#document-resource-object-identification)
            member is used to describe resource objects that share common attributes
            and relationships.
        attributes:
          type: object
          properties:
            email:
              type: string
              format: email
              maxLength: 254
            expires_at:
              type: string
              format: date-time
              description: UTC. Default 7 days. If this attribute is provided, it
                must be at least 24 hours in the future.
            state:
              enum:
              - pending
              - accepted
              - expired
              - revoked
              type: string
              description: |-
                * `pending` - Invitation is pending
                * `accepted` - Invitation was accepted by a user
                * `expired` - Invitation expired after the configured time
                * `revoked` - Invitation was revoked by a user
              readOnly: true
            token:
              type: string
              readOnly: true
          required:
          - email
        relationships:
          type: object
          properties:
            inviter:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                    type:
                      type: string
                      enum:
                      - users
                      title: Resource Type Name
                      description: The [type](https://jsonapi.org/format/#document-resource-object-identification)
                        member is used to describe resource objects that share common
                        attributes and relationships.
                  required:
                  - id
                  - type
              required:
              - data
              description: The identifier of the related object.
              title: Resource Identifier
              readOnly: true
              nullable: true
            roles:
              type: object
              properties:
                data:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                        title: Resource Identifier
                        description: The identifier of the related object.
                      type:
                        type: string
                        enum:
                        - roles
                        title: Resource Type Name
                        description: The [type](https://jsonapi.org/format/#document-resource-object-identification)
                          member is used to describe resource objects that share common
                          attributes and relationships.
                    required:
                    - id
                    - type
              required:
              - data
              description: A related resource object from type roles
              title: roles
          required:
          - roles
    InvitationCreateRequest:
      type: object
      properties:
        data:
          type: object
          required:
          - type
          additionalProperties: false
          properties:
            type:
              type: string
              description: The [type](https://jsonapi.org/format/#document-resource-object-identification)
                member is used to describe resource objects that share common attributes
                and relationships.
              enum:
              - invitations
            attributes:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  minLength: 1
                  maxLength: 254
                expires_at:
                  type: string
                  format: date-time
                  description: UTC. Default 7 days. If this attribute is provided,
                    it must be at least 24 hours in the future.
                state:
                  enum:
                  - pending
                  - accepted
                  - expired
                  - revoked
                  type: string
                  description: |-
                    * `pending` - Invitation is pending
                    * `accepted` - Invitation was accepted by a user
                    * `expired` - Invitation expired after the configured time
                    * `revoked` - Invitation was revoked by a user
                  readOnly: true
                token:
                  type: string
                  readOnly: true
                  minLength: 1
              required:
              - email
            relationships:
              type: object
              properties:
                inviter:
                  type: object
                  properties:
                    data:
                      type: object
                      properties:
                        id:
                          type: string
                          format: uuid
                        type:
                          type: string
                          enum:
                          - users
                          title: Resource Type Name
                          description: The [type](https://jsonapi.org/format/#document-resource-object-identification)
                            member is used to describe resource objects that share
                            common attributes and relationships.
                      required:
                      - id
                      - type
                  required:
                  - data
                  description: The identifier of the related object.
                  title: Resource Identifier
                  readOnly: true
                  nullable: true
                roles:
                  type: object
                  properties:
                    data:
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: string
                            format: uuid
                            title: Resource Identifier
                            description: The identifier of the related object.
                          type:
                            type: string
                            enum:
                            - roles
                            title: Resource Type Name
                            description: The [type](https://jsonapi.org/format/#document-resource-object-identification)
                              member is used to describe resource objects that share
                              common attributes and relationships.
                        required:
                        - id
                        - type
                  required:
                  - data
                  description: A related resource object from type roles
                  title: roles
              required:
              - roles
      required:
      - data
    InvitationCreateResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/InvitationCreate'
      required:
      - data
    InvitationResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Invitation'
      required:
      - data
    InvitationUpdate:
      type: object
      required:
      - type
      - id
      additionalProperties: false
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/TypeD4dEnum'
          description: The [type](https://jsonapi.org/format/#document-resource-object-identification)
            member is used to describe resource objects that share common attributes
            and relationships.
        id:
          type: string
          format: uuid
        attributes:
          type: object
          properties:
            email:
              type: string
              format: email
              maxLength: 254
            expires_at:
              type: string
              format: date-time
            state:
              enum:
              - pending
              - accepted
              - expired
              - revoked
              type: string
              description: |-
                * `pending` - Invitation is pending
                * `accepted` - Invitation was accepted by a user
                * `expired` - Invitation expired after the configured time
                * `revoked` - Invitation was revoked by a user
              readOnly: true
            token:
              type: string
              readOnly: true
        relationships:
          type: object
          properties:
            roles:
              type: object
              properties:
                data:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                        title: Resource Identifier
                        description: The identifier of the related object.
                      type:
                        type: string
                        enum:
                        - roles
                        title: Resource Type Name
                        description: The [type](https://jsonapi.org/format/#document-resource-object-identification)
                          member is used to describe resource objects that share common
                          attributes and relationships.
                    required:
                    - id
                    - type
              required:
              - data
              description: A related resource object from type roles
              title: roles
          required:
          - roles
    InvitationUpdateResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/InvitationUpdate'
      required:
      - data
    Membership:
      type: object
      required:
      - type
      - id
      additionalProperties: false
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/MembershipTypeEnum'
          description: The [type](https://jsonapi.org/format/#document-resource-object-identification)
            member is used to describe resource objects that share common attributes
            and relationships.
        id:
          type: string
          format: uuid
        attributes:
          type: object
          properties:
            role:
              enum:
              - owner
              - member
              type: string
              description: |-
                * `owner` - Owner
                * `member` - Member
            date_joined:
              type: string
              format: date-time
              readOnly: true
          required:
          - role
        relationships:
          type: object
          properties:
            user:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uri
                    type:
                      type: string
                      enum:
                      - users
                      title: Resource Type Name
                      description: The [type](https://jsonapi.org/format/#document-resource-object-identification)
                        member is used to describe resource objects that share common
                        attributes and relationships.
                  required:
                  - id
                  - type
              required:
              - data
              description: The identifier of the related object.
              title: Resource Identifier
              readOnly: true
            tenant:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uri
                    type:
                      type: string
                      enum:
                      - tenants
                      title: Resource Type Name
                      description: The [type](https://jsonapi.org/format/#document-resource-object-identification)
                        member is used to describe resource objects that share common
                        attributes and relationships.
                  required:
                  - id
                  - type
              required:
              - data
              description: The identifier of the related object.
              title: Resource Identifier
              readOnly: true
    MembershipResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Membership'
      required:
      - data
    MembershipTypeEnum:
      type: string
      enum:
      - memberships
    OpenApiResponseResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Membership'
      required:
      - data
    OverviewFinding:
      type: object
      required:
      - type
      - id
      additionalProperties: false
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/OverviewFindingTypeEnum'
          description: The [type](https://jsonapi.org/format/#document-resource-object-identification)
            member is used to describe resource objects that share common attributes
            and relationships.
        id: {}
        attributes:
          type: object
          properties:
            id:
              type: string
              default: n/a
            new:
              type: integer
            changed:
              type: integer
            unchanged:
              type: integer
            fail_new:
              type: integer
            fail_changed:
              type: integer
            pass_new:
              type: integer
            pass_changed:
              type: integer
            muted_new:
              type: integer
            muted_changed:
              type: integer
            total:
              type: integer
            fail:
              type: integer
            muted:
              type: integer
            pass:
              type: integer
          required:
          - new
          - changed
          - unchanged
          - fail_new
          - fail_changed
          - pass_new
          - pass_changed
          - muted_new
          - muted_changed
          - total
          - fail
          - muted
          - pass
    OverviewFindingResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/OverviewFinding'
      required:
      - data
    OverviewFindingTypeEnum:
      type: string
      enum:
      - findings-overview
    OverviewProvider:
      type: object
      required:
      - type
      - id
      additionalProperties: false
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/OverviewProviderTypeEnum'
          description: The [type](https://jsonapi.org/format/#document-resource-object-identification)
            member is used to describe resource objects that share common attributes
            and relationships.
        id: {}
        attributes:
          type: object
          properties:
            id:
              type: string
            findings:
              type: object
              properties:
                pass:
                  type: integer
                fail:
                  type: integer
                manual:
                  type: integer
                total:
                  type: integer
              readOnly: true
            resources:
              type: object
              properties:
                total:
                  type: integer
              readOnly: true
          required:
          - id
    OverviewProviderResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/OverviewProvider'
      required:
      - data
    OverviewProviderTypeEnum:
      type: string
      enum:
      - providers-overview
    OverviewService:
      type: object
      required:
      - type
      - id
      additionalProperties: false
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/OverviewServiceTypeEnum'
          description: The [type](https://jsonapi.org/format/#document-resource-object-identification)
            member is used to describe resource objects that share common attributes
            and relationships.
        id: {}
        attributes:
          type: object
          properties:
            id:
              type: string
            total:
              type: integer
            fail:
              type: integer
            muted:
              type: integer
            pass:
              type: integer
          required:
          - id
          - total
          - fail
          - muted
          - pass
    OverviewServiceResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/OverviewService'
      required:
      - data
    OverviewServiceTypeEnum:
      type: string
      enum:
      - services-overview
    OverviewSeverity:
      type: object
      required:
      - type
      - id
      additionalProperties: false
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/OverviewSeverityTypeEnum'
          description: The [type](https://jsonapi.org/format/#document-resource-object-identification)
            member is used to describe resource objects that share common attributes
            and relationships.
        id: {}
        attributes:
          type: object
          properties:
            id:
              type: string
              default: n/a
            critical:
              type: integer
            high:
              type: integer
            medium:
              type: integer
            low:
              type: integer
            informational:
              type: integer
          required:
          - critical
          - high
          - medium
          - low
          - informational
    OverviewSeverityResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/OverviewSeverity'
      required:
      - data
    OverviewSeverityTypeEnum:
      type: string
      enum:
      - findings-severity-overview
    PaginatedComplianceOverviewList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page[number]=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page[number]=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ComplianceOverview'
    PaginatedFindingList:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Finding'
      required:
      - data
    PaginatedInvitationList:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Invitation'
      required:
      - data
    PaginatedMembershipList:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Membership'
      required:
      - data
    PaginatedProviderGroupList:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/ProviderGroup'
      required:
      - data
    PaginatedProviderList:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Provider'
      required:
      - data
    PaginatedProviderSecretList:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/ProviderSecret'
      required:
      - data
    PaginatedResourceList:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Resource'
      required:
      - data
    PaginatedRoleList:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Role'
      required:
      - data
    PaginatedScanList:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Scan'
      required:
      - data
    PaginatedTaskList:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Task'
      required:
      - data
    PaginatedTenantList:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Tenant'
      required:
      - data
    PaginatedUserList:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/User'
      required:
      - data
    PatchedInvitationUpdateRequest:
      type: object
      properties:
        data:
          type: object
          required:
          - type
          - id
          additionalProperties: false
          properties:
            type:
              type: string
              description: The [type](https://jsonapi.org/format/#document-resource-object-identification)
                member is used to describe resource objects that share common attributes
                and relationships.
              enum:
              - invitations
            id:
              type: string
              format: uuid
            attributes:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  minLength: 1
                  maxLength: 254
                expires_at:
                  type: string
                  format: date-time
                state:
                  enum:
                  - pending
                  - accepted
                  - expired
                  - revoked
                  type: string
                  description: |-
                    * `pending` - Invitation is pending
                    * `accepted` - Invitation was accepted by a user
                    * `expired` - Invitation expired after the configured time
                    * `revoked` - Invitation was revoked by a user
                  readOnly: true
                token:
                  type: string
                  readOnly: true
                  minLength: 1
            relationships:
              type: object
              properties:
                roles:
                  type: object
                  properties:
                    data:
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: string
                            format: uuid
                            title: Resource Identifier
                            description: The identifier of the related object.
                          type:
                            type: string
                            enum:
                            - roles
                            title: Resource Type Name
                            description: The [type](https://jsonapi.org/format/#document-resource-object-identification)
                              member is used to describe resource objects that share
                              common attributes and relationships.
                        required:
                        - id
                        - type
                  required:
                  - data
                  description: A related resource object from type roles
                  title: roles
              required:
              - roles
      required:
      - data
    PatchedProviderGroupMembershipRequest:
      type: object
      properties:
        data:
          type: object
          required:
          - type
          - id
          additionalProperties: false
          properties:
            type:
              type: string
              description: The [type](https://jsonapi.org/format/#document-resource-object-identification)
                member is used to describe resource objects that share common attributes
                and relationships.
              enum:
              - provider_groups-provider
            id:
              type: string
              format: uuid
            attributes:
              type: object
              properties:
                providers:
                  type: array
                  items:
                    $ref: '#/components/schemas/ProviderResourceIdentifierRequest'
                  description: List of resource identifier objects representing providers.
              required:
              - providers
      required:
      - data
    PatchedProviderGroupUpdateRequest:
      type: object
      properties:
        data:
          type: object
          required:
          - type
          - id
          additionalProperties: false
          properties:
            type:
              type: string
              description: The [type](https://jsonapi.org/format/#document-resource-object-identification)
                member is used to describe resource objects that share common attributes
                and relationships.
              enum:
              - provider-groups
            id:
              type: string
              format: uuid
            attributes:
              type: object
              properties:
                name:
                  type: string
                  minLength: 1
                  maxLength: 255
                inserted_at:
                  type: string
                  format: date-time
                  readOnly: true
                updated_at:
                  type: string
                  format: date-time
                  readOnly: true
              required:
              - name
            relationships:
              type: object
              properties:
                providers:
                  type: object
                  properties:
                    data:
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: string
                            format: uuid
                            title: Resource Identifier
                            description: The identifier of the related object.
                          type:
                            type: string
                            enum:
                            - providers
                            title: Resource Type Name
                            description: The [type](https://jsonapi.org/format/#document-resource-object-identification)
                              member is used to describe resource objects that share
                              common attributes and relationships.
                        required:
                        - id
                        - type
                  required:
                  - data
                  description: A related resource object from type providers
                  title: providers
                roles:
                  type: object
                  properties:
                    data:
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: string
                            format: uuid
                            title: Resource Identifier
                            description: The identifier of the related object.
                          type:
                            type: string
                            enum:
                            - roles
                            title: Resource Type Name
                            description: The [type](https://jsonapi.org/format/#document-resource-object-identification)
                              member is used to describe resource objects that share
                              common attributes and relationships.
                        required:
                        - id
                        - type
                  required:
                  - data
                  description: A related resource object from type roles
                  title: roles
      required:
      - data
    PatchedProviderSecretUpdateRequest:
      type: object
      properties:
        data:
          type: object
          required:
          - type
          - id
          additionalProperties: false
          properties:
            type:
              type: string
              description: The [type](https://jsonapi.org/format/#document-resource-object-identification)
                member is used to describe resource objects that share common attributes
                and relationships.
              enum:
              - provider-secrets
            id:
              type: string
              format: uuid
            attributes:
              type: object
              properties:
                inserted_at:
                  type: string
                  format: date-time
                  readOnly: true
                updated_at:
                  type: string
                  format: date-time
                  readOnly: true
                name:
                  type: string
                  nullable: true
                  maxLength: 100
                  minLength: 3
                secret_type:
                  enum:
                  - static
                  - role
                  type: string
                  description: |-
                    * `static` - Key-value pairs
                    * `role` - Role assumption
                  readOnly: true
                secret:
                  oneOf:
                  - type: object
                    title: AWS Static Credentials
                    properties:
                      aws_access_key_id:
                        type: string
                        description: The AWS access key ID. Required for environments
                          where no IAM role is being assumed and direct AWS access
                          is needed.
                      aws_secret_access_key:
                        type: string
                        description: The AWS secret access key. Must accompany 'aws_access_key_id'
                          to authorize access to AWS resources.
                      aws_session_token:
                        type: string
                        description: The session token associated with temporary credentials.
                          Only needed for session-based or temporary AWS access.
                    required:
                    - aws_access_key_id
                    - aws_secret_access_key
                  - type: object
                    title: AWS Assume Role
                    properties:
                      role_arn:
                        type: string
                        description: The Amazon Resource Name (ARN) of the role to
                          assume. Required for AWS role assumption.
                      aws_access_key_id:
                        type: string
                        description: The AWS access key ID. Only required if the environment
                          lacks pre-configured AWS credentials.
                      aws_secret_access_key:
                        type: string
                        description: The AWS secret access key. Required if 'aws_access_key_id'
                          is provided or if no AWS credentials are pre-configured.
                      aws_session_token:
                        type: string
                        description: The session token for temporary credentials,
                          if applicable.
                      session_duration:
                        type: integer
                        minimum: 900
                        maximum: 43200
                        default: 3600
                        description: The duration (in seconds) for the role session.
                      external_id:
                        type: string
                        description: An optional identifier to enhance security for
                          role assumption; may be required by the role administrator.
                      role_session_name:
                        type: string
                        description: |-
                          An identifier for the role session, useful for tracking sessions in AWS logs. The regex used to validate this parameter is a string of characters consisting of upper- and lower-case alphanumeric characters with no spaces. You can also include underscores or any of the following characters: =,.@-

                          Examples:
                          - MySession123
                          - User_Session-1
                          - Test.Session@2
                        pattern: ^[a-zA-Z0-9=,.@_-]+$
                    required:
                    - role_arn
                  - type: object
                    title: Azure Static Credentials
                    properties:
                      client_id:
                        type: string
                        description: The Azure application (client) ID for authentication
                          in Azure AD.
                      client_secret:
                        type: string
                        description: The client secret associated with the application
                          (client) ID, providing secure access.
                      tenant_id:
                        type: string
                        description: The Azure tenant ID, representing the directory
                          where the application is registered.
                    required:
                    - client_id
                    - client_secret
                    - tenant_id
                  - type: object
                    title: GCP Static Credentials
                    properties:
                      client_id:
                        type: string
                        description: The client ID from Google Cloud, used to identify
                          the application for GCP access.
                      client_secret:
                        type: string
                        description: The client secret associated with the GCP client
                          ID, required for secure access.
                      refresh_token:
                        type: string
                        description: A refresh token that allows the application to
                          obtain new access tokens for extended use.
                    required:
                    - client_id
                    - client_secret
                    - refresh_token
                  - type: object
                    title: Kubernetes Static Credentials
                    properties:
                      kubeconfig_content:
                        type: string
                        description: The content of the Kubernetes kubeconfig file,
                          encoded as a string.
                    required:
                    - kubeconfig_content
                  writeOnly: true
              required:
              - secret
            relationships:
              type: object
              properties:
                provider:
                  type: object
                  properties:
                    data:
                      type: object
                      properties:
                        id:
                          type: string
                          format: uuid
                        type:
                          type: string
                          enum:
                          - providers
                          title: Resource Type Name
                          description: The [type](https://jsonapi.org/format/#document-resource-object-identification)
                            member is used to describe resource objects that share
                            common attributes and relationships.
                      required:
                      - id
                      - type
                  required:
                  - data
                  description: The identifier of the related object.
                  title: Resource Identifier
                  readOnly: true
      required:
      - data
    PatchedProviderUpdateRequest:
      type: object
      properties:
        data:
          type: object
          required:
          - type
          - id
          additionalProperties: false
          properties:
            type:
              type: string
              description: The [type](https://jsonapi.org/format/#document-resource-object-identification)
                member is used to describe resource objects that share common attributes
                and relationships.
              enum:
              - providers
            id: {}
            attributes:
              type: object
              properties:
                alias:
                  type: string
                  nullable: true
                  maxLength: 100
                  minLength: 3
      required:
      - data
    PatchedRoleProviderGroupRelationshipRequest:
      type: object
      properties:
        data:
          type: object
          required:
          - type
          - id
          additionalProperties: false
          properties:
            type:
              type: string
              description: The [type](https://jsonapi.org/format/#document-resource-object-identification)
                member is used to describe resource objects that share common attributes
                and relationships.
              enum:
              - role-provider_groups
            id:
              type: string
              format: uuid
            attributes:
              type: object
              properties:
                provider_groups:
                  type: array
                  items:
                    $ref: '#/components/schemas/ProviderGroupResourceIdentifierRequest'
                  description: List of resource identifier objects representing provider
                    groups.
              required:
              - provider_groups
      required:
      - data
    PatchedRoleUpdateRequest:
      type: object
      properties:
        data:
          type: object
          required:
          - type
          - id
          additionalProperties: false
          properties:
            type:
              type: string
              description: The [type](https://jsonapi.org/format/#document-resource-object-identification)
                member is used to describe resource objects that share common attributes
                and relationships.
              enum:
              - roles
            id:
              type: string
              format: uuid
            attributes:
              type: object
              properties:
                name:
                  type: string
                  minLength: 1
                  maxLength: 255
                manage_users:
                  type: boolean
                manage_account:
                  type: boolean
                manage_billing:
                  type: boolean
                manage_providers:
                  type: boolean
                manage_integrations:
                  type: boolean
                manage_scans:
                  type: boolean
                permission_state:
                  type: string
                  readOnly: true
                unlimited_visibility:
                  type: boolean
                inserted_at:
                  type: string
                  format: date-time
                  readOnly: true
                updated_at:
                  type: string
                  format: date-time
                  readOnly: true
              required:
              - name
            relationships:
              type: object
              properties:
                provider_groups:
                  type: object
                  properties:
                    data:
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: string
                            format: uuid
                            title: Resource Identifier
                            description: The identifier of the related object.
                          type:
                            type: string
                            enum:
                            - provider-groups
                            title: Resource Type Name
                            description: The [type](https://jsonapi.org/format/#document-resource-object-identification)
                              member is used to describe resource objects that share
                              common attributes and relationships.
                        required:
                        - id
                        - type
                  required:
                  - data
                  description: A related resource object from type provider-groups
                  title: provider-groups
                users:
                  type: object
                  properties:
                    data:
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: string
                            format: uuid
                            title: Resource Identifier
                            description: The identifier of the related object.
                          type:
                            type: string
                            enum:
                            - users
                            title: Resource Type Name
                            description: The [type](https://jsonapi.org/format/#document-resource-object-identification)
                              member is used to describe resource objects that share
                              common attributes and relationships.
                        required:
                        - id
                        - type
                  required:
                  - data
                  description: A related resource object from type users
                  title: users
                invitations:
                  type: object
                  properties:
                    data:
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: string
                            format: uuid
                            title: Resource Identifier
                            description: The identifier of the related object.
                          type:
                            type: string
                            enum:
                            - invitations
                            title: Resource Type Name
                            description: The [type](https://jsonapi.org/format/#document-resource-object-identification)
                              member is used to describe resource objects that share
                              common attributes and relationships.
                        required:
                        - id
                        - type
                  required:
                  - data
                  description: A related resource object from type invitations
                  title: invitations
                  readOnly: true
      required:
      - data
    PatchedScanUpdateRequest:
      type: object
      properties:
        data:
          type: object
          required:
          - type
          - id
          additionalProperties: false
          properties:
            type:
              type: string
              description: The [type](https://jsonapi.org/format/#document-resource-object-identification)
                member is used to describe resource objects that share common attributes
                and relationships.
              enum:
              - scans
            id:
              type: string
              format: uuid
            attributes:
              type: object
              properties:
                name:
                  type: string
                  nullable: true
                  maxLength: 100
                  minLength: 3
      required:
      - data
    PatchedTenantRequest:
      type: object
      properties:
        data:
          type: object
          required:
          - type
          - id
          additionalProperties: false
          properties:
            type:
              type: string
              description: The [type](https://jsonapi.org/format/#document-resource-object-identification)
                member is used to describe resource objects that share common attributes
                and relationships.
              enum:
              - tenants
            id:
              type: string
              format: uuid
            attributes:
              type: object
              properties:
                name:
                  type: string
                  minLength: 1
                  maxLength: 100
              required:
              - name
            relationships:
              type: object
              properties:
                memberships:
                  type: object
                  properties:
                    data:
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: string
                            format: uuid
                            title: Resource Identifier
                            description: The identifier of the related object.
                          type:
                            type: string
                            enum:
                            - memberships
                            title: Resource Type Name
                            description: The [type](https://jsonapi.org/format/#document-resource-object-identification)
                              member is used to describe resource objects that share
                              common attributes and relationships.
                        required:
                        - id
                        - type
                  required:
                  - data
                  description: A related resource object from type memberships
                  title: memberships
                  readOnly: true
      required:
      - data
    PatchedUserRoleRelationshipRequest:
      type: object
      properties:
        data:
          type: object
          required:
          - type
          - id
          additionalProperties: false
          properties:
            type:
              type: string
              description: The [type](https://jsonapi.org/format/#document-resource-object-identification)
                member is used to describe resource objects that share common attributes
                and relationships.
              enum:
              - user-roles
            id:
              type: string
              format: uuid
            attributes:
              type: object
              properties:
                roles:
                  type: array
                  items:
                    $ref: '#/components/schemas/RoleResourceIdentifierRequest'
                  description: List of resource identifier objects representing roles.
              required:
              - roles
      required:
      - data
    PatchedUserUpdateRequest:
      type: object
      properties:
        data:
          type: object
          required:
          - type
          - id
          additionalProperties: false
          properties:
            type:
              type: string
              description: The [type](https://jsonapi.org/format/#document-resource-object-identification)
                member is used to describe resource objects that share common attributes
                and relationships.
              enum:
              - users
            id:
              type: string
              format: uuid
            attributes:
              type: object
              properties:
                name:
                  type: string
                  minLength: 3
                  maxLength: 150
                password:
                  type: string
                  writeOnly: true
                  minLength: 1
                email:
                  type: string
                  format: email
                  minLength: 1
                  description: Case insensitive
                  maxLength: 254
                company_name:
                  type: string
                  maxLength: 150
              required:
              - name
              - email
            relationships:
              type: object
              properties:
                roles:
                  type: object
                  properties:
                    data:
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: string
                            format: uuid
                            title: Resource Identifier
                            description: The identifier of the related object.
                          type:
                            type: string
                            enum:
                            - roles
                            title: Resource Type Name
                            description: The [type](https://jsonapi.org/format/#document-resource-object-identification)
                              member is used to describe resource objects that share
                              common attributes and relationships.
                        required:
                        - id
                        - type
                  required:
                  - data
                  description: A related resource object from type roles
                  title: roles
      required:
      - data
    Provider:
      type: object
      required:
      - type
      - id
      additionalProperties: false
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/Type227Enum'
          description: The [type](https://jsonapi.org/format/#document-resource-object-identification)
            member is used to describe resource objects that share common attributes
            and relationships.
        id:
          type: string
          format: uuid
        attributes:
          type: object
          properties:
            inserted_at:
              type: string
              format: date-time
              readOnly: true
            updated_at:
              type: string
              format: date-time
              readOnly: true
            provider:
              enum:
              - aws
              - azure
              - gcp
              - kubernetes
              type: string
              description: |-
                * `aws` - AWS
                * `azure` - Azure
                * `gcp` - GCP
                * `kubernetes` - Kubernetes
            uid:
              type: string
              title: Unique identifier for the provider, set by the provider
              maxLength: 63
              minLength: 3
            alias:
              type: string
              nullable: true
              maxLength: 100
              minLength: 3
            connection:
              type: object
              properties:
                connected:
                  type: boolean
                last_checked_at:
                  type: string
                  format: date-time
              readOnly: true
          required:
          - provider
          - uid
        relationships:
          type: object
          properties:
            secret:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                    type:
                      type: string
                      enum:
                      - provider-secrets
                      title: Resource Type Name
                      description: The [type](https://jsonapi.org/format/#document-resource-object-identification)
                        member is used to describe resource objects that share common
                        attributes and relationships.
                  required:
                  - id
                  - type
              required:
              - data
              description: The identifier of the related object.
              title: Resource Identifier
            provider_groups:
              type: object
              properties:
                data:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                        title: Resource Identifier
                        description: The identifier of the related object.
                      type:
                        type: string
                        enum:
                        - provider-groups
                        title: Resource Type Name
                        description: The [type](https://jsonapi.org/format/#document-resource-object-identification)
                          member is used to describe resource objects that share common
                          attributes and relationships.
                    required:
                    - id
                    - type
              required:
              - data
              description: A related resource object from type provider-groups
              title: provider-groups
              readOnly: true
          required:
          - secret
    ProviderCreate:
      type: object
      required:
      - type
      additionalProperties: false
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/Type227Enum'
          description: The [type](https://jsonapi.org/format/#document-resource-object-identification)
            member is used to describe resource objects that share common attributes
            and relationships.
        attributes:
          type: object
          properties:
            alias:
              type: string
              nullable: true
              maxLength: 100
              minLength: 3
            provider:
              enum:
              - aws
              - azure
              - gcp
              - kubernetes
              type: string
              description: |-
                * `aws` - AWS
                * `azure` - Azure
                * `gcp` - GCP
                * `kubernetes` - Kubernetes
            uid:
              type: string
              title: Unique identifier for the provider, set by the provider
              maxLength: 63
              minLength: 3
          required:
          - uid
    ProviderCreateRequest:
      type: object
      properties:
        data:
          type: object
          required:
          - type
          additionalProperties: false
          properties:
            type:
              type: string
              description: The [type](https://jsonapi.org/format/#document-resource-object-identification)
                member is used to describe resource objects that share common attributes
                and relationships.
              enum:
              - providers
            attributes:
              type: object
              properties:
                alias:
                  type: string
                  nullable: true
                  maxLength: 100
                  minLength: 3
                provider:
                  enum:
                  - aws
                  - azure
                  - gcp
                  - kubernetes
                  type: string
                  description: |-
                    * `aws` - AWS
                    * `azure` - Azure
                    * `gcp` - GCP
                    * `kubernetes` - Kubernetes
                uid:
                  type: string
                  minLength: 3
                  title: Unique identifier for the provider, set by the provider
                  maxLength: 63
              required:
              - uid
      required:
      - data
    ProviderCreateResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ProviderCreate'
      required:
      - data
    ProviderGroup:
      type: object
      required:
      - type
      - id
      additionalProperties: false
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/Type34dEnum'
          description: The [type](https://jsonapi.org/format/#document-resource-object-identification)
            member is used to describe resource objects that share common attributes
            and relationships.
        id:
          type: string
          format: uuid
        attributes:
          type: object
          properties:
            name:
              type: string
              maxLength: 255
            inserted_at:
              type: string
              format: date-time
              readOnly: true
            updated_at:
              type: string
              format: date-time
              readOnly: true
          required:
          - name
        relationships:
          type: object
          properties:
            providers:
              type: object
              properties:
                data:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                        title: Resource Identifier
                        description: The identifier of the related object.
                      type:
                        type: string
                        enum:
                        - providers
                        title: Resource Type Name
                        description: The [type](https://jsonapi.org/format/#document-resource-object-identification)
                          member is used to describe resource objects that share common
                          attributes and relationships.
                    required:
                    - id
                    - type
              required:
              - data
              description: A related resource object from type providers
              title: providers
            roles:
              type: object
              properties:
                data:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                        title: Resource Identifier
                        description: The identifier of the related object.
                      type:
                        type: string
                        enum:
                        - roles
                        title: Resource Type Name
                        description: The [type](https://jsonapi.org/format/#document-resource-object-identification)
                          member is used to describe resource objects that share common
                          attributes and relationships.
                    required:
                    - id
                    - type
              required:
              - data
              description: A related resource object from type roles
              title: roles
    ProviderGroupCreate:
      type: object
      required:
      - type
      additionalProperties: false
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/Type34dEnum'
          description: The [type](https://jsonapi.org/format/#document-resource-object-identification)
            member is used to describe resource objects that share common attributes
            and relationships.
        attributes:
          type: object
          properties:
            name:
              type: string
              maxLength: 255
            inserted_at:
              type: string
              format: date-time
              readOnly: true
            updated_at:
              type: string
              format: date-time
              readOnly: true
          required:
          - name
        relationships:
          type: object
          properties:
            providers:
              type: object
              properties:
                data:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                        title: Resource Identifier
                        description: The identifier of the related object.
                      type:
                        type: string
                        enum:
                        - providers
                        title: Resource Type Name
                        description: The [type](https://jsonapi.org/format/#document-resource-object-identification)
                          member is used to describe resource objects that share common
                          attributes and relationships.
                    required:
                    - id
                    - type
              required:
              - data
              description: A related resource object from type providers
              title: providers
            roles:
              type: object
              properties:
                data:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                        title: Resource Identifier
                        description: The identifier of the related object.
                      type:
                        type: string
                        enum:
                        - roles
                        title: Resource Type Name
                        description: The [type](https://jsonapi.org/format/#document-resource-object-identification)
                          member is used to describe resource objects that share common
                          attributes and relationships.
                    required:
                    - id
                    - type
              required:
              - data
              description: A related resource object from type roles
              title: roles
    ProviderGroupCreateRequest:
      type: object
      properties:
        data:
          type: object
          required:
          - type
          additionalProperties: false
          properties:
            type:
              type: string
              description: The [type](https://jsonapi.org/format/#document-resource-object-identification)
                member is used to describe resource objects that share common attributes
                and relationships.
              enum:
              - provider-groups
            attributes:
              type: object
              properties:
                name:
                  type: string
                  minLength: 1
                  maxLength: 255
                inserted_at:
                  type: string
                  format: date-time
                  readOnly: true
                updated_at:
                  type: string
                  format: date-time
                  readOnly: true
              required:
              - name
            relationships:
              type: object
              properties:
                providers:
                  type: object
                  properties:
                    data:
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: string
                            format: uuid
                            title: Resource Identifier
                            description: The identifier of the related object.
                          type:
                            type: string
                            enum:
                            - providers
                            title: Resource Type Name
                            description: The [type](https://jsonapi.org/format/#document-resource-object-identification)
                              member is used to describe resource objects that share
                              common attributes and relationships.
                        required:
                        - id
                        - type
                  required:
                  - data
                  description: A related resource object from type providers
                  title: providers
                roles:
                  type: object
                  properties:
                    data:
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: string
                            format: uuid
                            title: Resource Identifier
                            description: The identifier of the related object.
                          type:
                            type: string
                            enum:
                            - roles
                            title: Resource Type Name
                            description: The [type](https://jsonapi.org/format/#document-resource-object-identification)
                              member is used to describe resource objects that share
                              common attributes and relationships.
                        required:
                        - id
                        - type
                  required:
                  - data
                  description: A related resource object from type roles
                  title: roles
      required:
      - data
    ProviderGroupCreateResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ProviderGroupCreate'
      required:
      - data
    ProviderGroupMembershipRequest:
      type: object
      properties:
        data:
          type: object
          required:
          - type
          additionalProperties: false
          properties:
            type:
              type: string
              description: The [type](https://jsonapi.org/format/#document-resource-object-identification)
                member is used to describe resource objects that share common attributes
                and relationships.
              enum:
              - provider_groups-provider
            attributes:
              type: object
              properties:
                providers:
                  type: array
                  items:
                    $ref: '#/components/schemas/ProviderResourceIdentifierRequest'
                  description: List of resource identifier objects representing providers.
              required:
              - providers
      required:
      - data
    ProviderGroupResourceIdentifierRequest:
      type: object
      properties:
        data:
          type: object
          required:
          - type
          additionalProperties: false
          properties:
            type:
              type: string
              description: The [type](https://jsonapi.org/format/#document-resource-object-identification)
                member is used to describe resource objects that share common attributes
                and relationships.
              enum:
              - provider-group-identifier
            attributes:
              type: object
              properties:
                resource_type:
                  type: string
                  minLength: 1
                id:
                  type: string
                  format: uuid
              required:
              - resource_type
              - id
      required:
      - data
    ProviderGroupResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ProviderGroup'
      required:
      - data
    ProviderResourceIdentifierRequest:
      type: object
      properties:
        data:
          type: object
          required:
          - type
          additionalProperties: false
          properties:
            type:
              type: string
              description: The [type](https://jsonapi.org/format/#document-resource-object-identification)
                member is used to describe resource objects that share common attributes
                and relationships.
              enum:
              - provider-identifier
            attributes:
              type: object
              properties:
                resource_type:
                  type: string
                  minLength: 1
                id:
                  type: string
                  format: uuid
              required:
              - resource_type
              - id
      required:
      - data
    ProviderResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Provider'
      required:
      - data
    ProviderSecret:
      type: object
      required:
      - type
      - id
      additionalProperties: false
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/Type049Enum'
          description: The [type](https://jsonapi.org/format/#document-resource-object-identification)
            member is used to describe resource objects that share common attributes
            and relationships.
        id:
          type: string
          format: uuid
        attributes:
          type: object
          properties:
            inserted_at:
              type: string
              format: date-time
              readOnly: true
            updated_at:
              type: string
              format: date-time
              readOnly: true
            name:
              type: string
              nullable: true
              maxLength: 100
              minLength: 3
            secret_type:
              enum:
              - static
              - role
              type: string
              description: |-
                * `static` - Key-value pairs
                * `role` - Role assumption
          required:
          - secret_type
        relationships:
          type: object
          properties:
            provider:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                    type:
                      type: string
                      enum:
                      - providers
                      title: Resource Type Name
                      description: The [type](https://jsonapi.org/format/#document-resource-object-identification)
                        member is used to describe resource objects that share common
                        attributes and relationships.
                  required:
                  - id
                  - type
              required:
              - data
              description: The identifier of the related object.
              title: Resource Identifier
          required:
          - provider
    ProviderSecretCreate:
      type: object
      required:
      - type
      additionalProperties: false
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/Type049Enum'
          description: The [type](https://jsonapi.org/format/#document-resource-object-identification)
            member is used to describe resource objects that share common attributes
            and relationships.
        attributes:
          type: object
          properties:
            inserted_at:
              type: string
              format: date-time
              readOnly: true
            updated_at:
              type: string
              format: date-time
              readOnly: true
            name:
              type: string
              nullable: true
              maxLength: 100
              minLength: 3
            secret_type:
              enum:
              - static
              - role
              type: string
              description: |-
                * `static` - Key-value pairs
                * `role` - Role assumption
            secret:
              oneOf:
              - type: object
                title: AWS Static Credentials
                properties:
                  aws_access_key_id:
                    type: string
                    description: The AWS access key ID. Required for environments
                      where no IAM role is being assumed and direct AWS access is
                      needed.
                  aws_secret_access_key:
                    type: string
                    description: The AWS secret access key. Must accompany 'aws_access_key_id'
                      to authorize access to AWS resources.
                  aws_session_token:
                    type: string
                    description: The session token associated with temporary credentials.
                      Only needed for session-based or temporary AWS access.
                required:
                - aws_access_key_id
                - aws_secret_access_key
              - type: object
                title: AWS Assume Role
                properties:
                  role_arn:
                    type: string
                    description: The Amazon Resource Name (ARN) of the role to assume.
                      Required for AWS role assumption.
                  aws_access_key_id:
                    type: string
                    description: The AWS access key ID. Only required if the environment
                      lacks pre-configured AWS credentials.
                  aws_secret_access_key:
                    type: string
                    description: The AWS secret access key. Required if 'aws_access_key_id'
                      is provided or if no AWS credentials are pre-configured.
                  aws_session_token:
                    type: string
                    description: The session token for temporary credentials, if applicable.
                  session_duration:
                    type: integer
                    minimum: 900
                    maximum: 43200
                    default: 3600
                    description: The duration (in seconds) for the role session.
                  external_id:
                    type: string
                    description: An optional identifier to enhance security for role
                      assumption; may be required by the role administrator.
                  role_session_name:
                    type: string
                    description: |-
                      An identifier for the role session, useful for tracking sessions in AWS logs. The regex used to validate this parameter is a string of characters consisting of upper- and lower-case alphanumeric characters with no spaces. You can also include underscores or any of the following characters: =,.@-

                      Examples:
                      - MySession123
                      - User_Session-1
                      - Test.Session@2
                    pattern: ^[a-zA-Z0-9=,.@_-]+$
                required:
                - role_arn
              - type: object
                title: Azure Static Credentials
                properties:
                  client_id:
                    type: string
                    description: The Azure application (client) ID for authentication
                      in Azure AD.
                  client_secret:
                    type: string
                    description: The client secret associated with the application
                      (client) ID, providing secure access.
                  tenant_id:
                    type: string
                    description: The Azure tenant ID, representing the directory where
                      the application is registered.
                required:
                - client_id
                - client_secret
                - tenant_id
              - type: object
                title: GCP Static Credentials
                properties:
                  client_id:
                    type: string
                    description: The client ID from Google Cloud, used to identify
                      the application for GCP access.
                  client_secret:
                    type: string
                    description: The client secret associated with the GCP client
                      ID, required for secure access.
                  refresh_token:
                    type: string
                    description: A refresh token that allows the application to obtain
                      new access tokens for extended use.
                required:
                - client_id
                - client_secret
                - refresh_token
              - type: object
                title: Kubernetes Static Credentials
                properties:
                  kubeconfig_content:
                    type: string
                    description: The content of the Kubernetes kubeconfig file, encoded
                      as a string.
                required:
                - kubeconfig_content
              writeOnly: true
          required:
          - secret_type
          - secret
        relationships:
          type: object
          properties:
            provider:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                    type:
                      type: string
                      enum:
                      - providers
                      title: Resource Type Name
                      description: The [type](https://jsonapi.org/format/#document-resource-object-identification)
                        member is used to describe resource objects that share common
                        attributes and relationships.
                  required:
                  - id
                  - type
              required:
              - data
              description: The identifier of the related object.
              title: Resource Identifier
          required:
          - provider
    ProviderSecretCreateRequest:
      type: object
      properties:
        data:
          type: object
          required:
          - type
          additionalProperties: false
          properties:
            type:
              type: string
              description: The [type](https://jsonapi.org/format/#document-resource-object-identification)
                member is used to describe resource objects that share common attributes
                and relationships.
              enum:
              - provider-secrets
            attributes:
              type: object
              properties:
                inserted_at:
                  type: string
                  format: date-time
                  readOnly: true
                updated_at:
                  type: string
                  format: date-time
                  readOnly: true
                name:
                  type: string
                  nullable: true
                  maxLength: 100
                  minLength: 3
                secret_type:
                  enum:
                  - static
                  - role
                  type: string
                  description: |-
                    * `static` - Key-value pairs
                    * `role` - Role assumption
                secret:
                  oneOf:
                  - type: object
                    title: AWS Static Credentials
                    properties:
                      aws_access_key_id:
                        type: string
                        description: The AWS access key ID. Required for environments
                          where no IAM role is being assumed and direct AWS access
                          is needed.
                      aws_secret_access_key:
                        type: string
                        description: The AWS secret access key. Must accompany 'aws_access_key_id'
                          to authorize access to AWS resources.
                      aws_session_token:
                        type: string
                        description: The session token associated with temporary credentials.
                          Only needed for session-based or temporary AWS access.
                    required:
                    - aws_access_key_id
                    - aws_secret_access_key
                  - type: object
                    title: AWS Assume Role
                    properties:
                      role_arn:
                        type: string
                        description: The Amazon Resource Name (ARN) of the role to
                          assume. Required for AWS role assumption.
                      aws_access_key_id:
                        type: string
                        description: The AWS access key ID. Only required if the environment
                          lacks pre-configured AWS credentials.
                      aws_secret_access_key:
                        type: string
                        description: The AWS secret access key. Required if 'aws_access_key_id'
                          is provided or if no AWS credentials are pre-configured.
                      aws_session_token:
                        type: string
                        description: The session token for temporary credentials,
                          if applicable.
                      session_duration:
                        type: integer
                        minimum: 900
                        maximum: 43200
                        default: 3600
                        description: The duration (in seconds) for the role session.
                      external_id:
                        type: string
                        description: An optional identifier to enhance security for
                          role assumption; may be required by the role administrator.
                      role_session_name:
                        type: string
                        description: |-
                          An identifier for the role session, useful for tracking sessions in AWS logs. The regex used to validate this parameter is a string of characters consisting of upper- and lower-case alphanumeric characters with no spaces. You can also include underscores or any of the following characters: =,.@-

                          Examples:
                          - MySession123
                          - User_Session-1
                          - Test.Session@2
                        pattern: ^[a-zA-Z0-9=,.@_-]+$
                    required:
                    - role_arn
                  - type: object
                    title: Azure Static Credentials
                    properties:
                      client_id:
                        type: string
                        description: The Azure application (client) ID for authentication
                          in Azure AD.
                      client_secret:
                        type: string
                        description: The client secret associated with the application
                          (client) ID, providing secure access.
                      tenant_id:
                        type: string
                        description: The Azure tenant ID, representing the directory
                          where the application is registered.
                    required:
                    - client_id
                    - client_secret
                    - tenant_id
                  - type: object
                    title: GCP Static Credentials
                    properties:
                      client_id:
                        type: string
                        description: The client ID from Google Cloud, used to identify
                          the application for GCP access.
                      client_secret:
                        type: string
                        description: The client secret associated with the GCP client
                          ID, required for secure access.
                      refresh_token:
                        type: string
                        description: A refresh token that allows the application to
                          obtain new access tokens for extended use.
                    required:
                    - client_id
                    - client_secret
                    - refresh_token
                  - type: object
                    title: Kubernetes Static Credentials
                    properties:
                      kubeconfig_content:
                        type: string
                        description: The content of the Kubernetes kubeconfig file,
                          encoded as a string.
                    required:
                    - kubeconfig_content
                  writeOnly: true
              required:
              - secret_type
              - secret
            relationships:
              type: object
              properties:
                provider:
                  type: object
                  properties:
                    data:
                      type: object
                      properties:
                        id:
                          type: string
                          format: uuid
                        type:
                          type: string
                          enum:
                          - providers
                          title: Resource Type Name
                          description: The [type](https://jsonapi.org/format/#document-resource-object-identification)
                            member is used to describe resource objects that share
                            common attributes and relationships.
                      required:
                      - id
                      - type
                  required:
                  - data
                  description: The identifier of the related object.
                  title: Resource Identifier
              required:
              - provider
      required:
      - data
    ProviderSecretCreateResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ProviderSecretCreate'
      required:
      - data
    ProviderSecretResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ProviderSecret'
      required:
      - data
    ProviderSecretUpdate:
      type: object
      required:
      - type
      - id
      additionalProperties: false
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/Type049Enum'
          description: The [type](https://jsonapi.org/format/#document-resource-object-identification)
            member is used to describe resource objects that share common attributes
            and relationships.
        id:
          type: string
          format: uuid
        attributes:
          type: object
          properties:
            inserted_at:
              type: string
              format: date-time
              readOnly: true
            updated_at:
              type: string
              format: date-time
              readOnly: true
            name:
              type: string
              nullable: true
              maxLength: 100
              minLength: 3
            secret_type:
              enum:
              - static
              - role
              type: string
              description: |-
                * `static` - Key-value pairs
                * `role` - Role assumption
              readOnly: true
            secret:
              oneOf:
              - type: object
                title: AWS Static Credentials
                properties:
                  aws_access_key_id:
                    type: string
                    description: The AWS access key ID. Required for environments
                      where no IAM role is being assumed and direct AWS access is
                      needed.
                  aws_secret_access_key:
                    type: string
                    description: The AWS secret access key. Must accompany 'aws_access_key_id'
                      to authorize access to AWS resources.
                  aws_session_token:
                    type: string
                    description: The session token associated with temporary credentials.
                      Only needed for session-based or temporary AWS access.
                required:
                - aws_access_key_id
                - aws_secret_access_key
              - type: object
                title: AWS Assume Role
                properties:
                  role_arn:
                    type: string
                    description: The Amazon Resource Name (ARN) of the role to assume.
                      Required for AWS role assumption.
                  aws_access_key_id:
                    type: string
                    description: The AWS access key ID. Only required if the environment
                      lacks pre-configured AWS credentials.
                  aws_secret_access_key:
                    type: string
                    description: The AWS secret access key. Required if 'aws_access_key_id'
                      is provided or if no AWS credentials are pre-configured.
                  aws_session_token:
                    type: string
                    description: The session token for temporary credentials, if applicable.
                  session_duration:
                    type: integer
                    minimum: 900
                    maximum: 43200
                    default: 3600
                    description: The duration (in seconds) for the role session.
                  external_id:
                    type: string
                    description: An optional identifier to enhance security for role
                      assumption; may be required by the role administrator.
                  role_session_name:
                    type: string
                    description: |-
                      An identifier for the role session, useful for tracking sessions in AWS logs. The regex used to validate this parameter is a string of characters consisting of upper- and lower-case alphanumeric characters with no spaces. You can also include underscores or any of the following characters: =,.@-

                      Examples:
                      - MySession123
                      - User_Session-1
                      - Test.Session@2
                    pattern: ^[a-zA-Z0-9=,.@_-]+$
                required:
                - role_arn
              - type: object
                title: Azure Static Credentials
                properties:
                  client_id:
                    type: string
                    description: The Azure application (client) ID for authentication
                      in Azure AD.
                  client_secret:
                    type: string
                    description: The client secret associated with the application
                      (client) ID, providing secure access.
                  tenant_id:
                    type: string
                    description: The Azure tenant ID, representing the directory where
                      the application is registered.
                required:
                - client_id
                - client_secret
                - tenant_id
              - type: object
                title: GCP Static Credentials
                properties:
                  client_id:
                    type: string
                    description: The client ID from Google Cloud, used to identify
                      the application for GCP access.
                  client_secret:
                    type: string
                    description: The client secret associated with the GCP client
                      ID, required for secure access.
                  refresh_token:
                    type: string
                    description: A refresh token that allows the application to obtain
                      new access tokens for extended use.
                required:
                - client_id
                - client_secret
                - refresh_token
              - type: object
                title: Kubernetes Static Credentials
                properties:
                  kubeconfig_content:
                    type: string
                    description: The content of the Kubernetes kubeconfig file, encoded
                      as a string.
                required:
                - kubeconfig_content
              writeOnly: true
          required:
          - secret
        relationships:
          type: object
          properties:
            provider:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                    type:
                      type: string
                      enum:
                      - providers
                      title: Resource Type Name
                      description: The [type](https://jsonapi.org/format/#document-resource-object-identification)
                        member is used to describe resource objects that share common
                        attributes and relationships.
                  required:
                  - id
                  - type
              required:
              - data
              description: The identifier of the related object.
              title: Resource Identifier
              readOnly: true
    ProviderSecretUpdateResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ProviderSecretUpdate'
      required:
      - data
    Resource:
      type: object
      required:
      - type
      - id
      additionalProperties: false
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/ResourceTypeEnum'
          description: The [type](https://jsonapi.org/format/#document-resource-object-identification)
            member is used to describe resource objects that share common attributes
            and relationships.
        id:
          type: string
          format: uuid
        attributes:
          type: object
          properties:
            inserted_at:
              type: string
              format: date-time
              readOnly: true
            updated_at:
              type: string
              format: date-time
              readOnly: true
            uid:
              type: string
              title: Unique identifier for the resource, set by the provider
            name:
              type: string
              title: Name of the resource, as set in the provider
            region:
              type: string
              title: Location of the resource, as set by the provider
            service:
              type: string
              title: Service of the resource, as set by the provider
            tags:
              type: object
              description: Tags associated with the resource
              example:
                env: prod
                owner: johndoe
              readOnly: true
            type:
              type: string
              readOnly: true
          required:
          - uid
          - name
          - region
          - service
        relationships:
          type: object
          properties:
            provider:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                    type:
                      type: string
                      enum:
                      - providers
                      title: Resource Type Name
                      description: The [type](https://jsonapi.org/format/#document-resource-object-identification)
                        member is used to describe resource objects that share common
                        attributes and relationships.
                  required:
                  - id
                  - type
              required:
              - data
              description: The identifier of the related object.
              title: Resource Identifier
            findings:
              type: object
              properties:
                data:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                        title: Resource Identifier
                        description: The identifier of the related object.
                      type:
                        type: string
                        enum:
                        - findings
                        title: Resource Type Name
                        description: The [type](https://jsonapi.org/format/#document-resource-object-identification)
                          member is used to describe resource objects that share common
                          attributes and relationships.
                    required:
                    - id
                    - type
              required:
              - data
              description: A related resource object from type findings
              title: findings
              readOnly: true
          required:
          - provider
    ResourceResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Resource'
      required:
      - data
    ResourceTypeEnum:
      type: string
      enum:
      - resources
    Role:
      type: object
      required:
      - type
      - id
      additionalProperties: false
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/Type6bbEnum'
          description: The [type](https://jsonapi.org/format/#document-resource-object-identification)
            member is used to describe resource objects that share common attributes
            and relationships.
        id:
          type: string
          format: uuid
        attributes:
          type: object
          properties:
            name:
              type: string
              maxLength: 255
            manage_users:
              type: boolean
            manage_account:
              type: boolean
            manage_billing:
              type: boolean
            manage_providers:
              type: boolean
            manage_integrations:
              type: boolean
            manage_scans:
              type: boolean
            permission_state:
              type: string
              readOnly: true
            unlimited_visibility:
              type: boolean
            inserted_at:
              type: string
              format: date-time
              readOnly: true
            updated_at:
              type: string
              format: date-time
              readOnly: true
          required:
          - name
        relationships:
          type: object
          properties:
            provider_groups:
              type: object
              properties:
                data:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                        title: Resource Identifier
                        description: The identifier of the related object.
                      type:
                        type: string
                        enum:
                        - provider-groups
                        title: Resource Type Name
                        description: The [type](https://jsonapi.org/format/#document-resource-object-identification)
                          member is used to describe resource objects that share common
                          attributes and relationships.
                    required:
                    - id
                    - type
              required:
              - data
              description: A related resource object from type provider-groups
              title: provider-groups
            users:
              type: object
              properties:
                data:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                        title: Resource Identifier
                        description: The identifier of the related object.
                      type:
                        type: string
                        enum:
                        - users
                        title: Resource Type Name
                        description: The [type](https://jsonapi.org/format/#document-resource-object-identification)
                          member is used to describe resource objects that share common
                          attributes and relationships.
                    required:
                    - id
                    - type
              required:
              - data
              description: A related resource object from type users
              title: users
            invitations:
              type: object
              properties:
                data:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                        title: Resource Identifier
                        description: The identifier of the related object.
                      type:
                        type: string
                        enum:
                        - invitations
                        title: Resource Type Name
                        description: The [type](https://jsonapi.org/format/#document-resource-object-identification)
                          member is used to describe resource objects that share common
                          attributes and relationships.
                    required:
                    - id
                    - type
              required:
              - data
              description: A related resource object from type invitations
              title: invitations
              readOnly: true
    RoleCreate:
      type: object
      required:
      - type
      additionalProperties: false
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/Type6bbEnum'
          description: The [type](https://jsonapi.org/format/#document-resource-object-identification)
            member is used to describe resource objects that share common attributes
            and relationships.
        attributes:
          type: object
          properties:
            name:
              type: string
              maxLength: 255
            manage_users:
              type: boolean
            manage_account:
              type: boolean
            manage_billing:
              type: boolean
            manage_providers:
              type: boolean
            manage_integrations:
              type: boolean
            manage_scans:
              type: boolean
            permission_state:
              type: string
              readOnly: true
            unlimited_visibility:
              type: boolean
            inserted_at:
              type: string
              format: date-time
              readOnly: true
            updated_at:
              type: string
              format: date-time
              readOnly: true
          required:
          - name
        relationships:
          type: object
          properties:
            provider_groups:
              type: object
              properties:
                data:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                        title: Resource Identifier
                        description: The identifier of the related object.
                      type:
                        type: string
                        enum:
                        - provider-groups
                        title: Resource Type Name
                        description: The [type](https://jsonapi.org/format/#document-resource-object-identification)
                          member is used to describe resource objects that share common
                          attributes and relationships.
                    required:
                    - id
                    - type
              required:
              - data
              description: A related resource object from type provider-groups
              title: provider-groups
            users:
              type: object
              properties:
                data:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                        title: Resource Identifier
                        description: The identifier of the related object.
                      type:
                        type: string
                        enum:
                        - users
                        title: Resource Type Name
                        description: The [type](https://jsonapi.org/format/#document-resource-object-identification)
                          member is used to describe resource objects that share common
                          attributes and relationships.
                    required:
                    - id
                    - type
              required:
              - data
              description: A related resource object from type users
              title: users
            invitations:
              type: object
              properties:
                data:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                        title: Resource Identifier
                        description: The identifier of the related object.
                      type:
                        type: string
                        enum:
                        - invitations
                        title: Resource Type Name
                        description: The [type](https://jsonapi.org/format/#document-resource-object-identification)
                          member is used to describe resource objects that share common
                          attributes and relationships.
                    required:
                    - id
                    - type
              required:
              - data
              description: A related resource object from type invitations
              title: invitations
              readOnly: true
    RoleCreateRequest:
      type: object
      properties:
        data:
          type: object
          required:
          - type
          additionalProperties: false
          properties:
            type:
              type: string
              description: The [type](https://jsonapi.org/format/#document-resource-object-identification)
                member is used to describe resource objects that share common attributes
                and relationships.
              enum:
              - roles
            attributes:
              type: object
              properties:
                name:
                  type: string
                  minLength: 1
                  maxLength: 255
                manage_users:
                  type: boolean
                manage_account:
                  type: boolean
                manage_billing:
                  type: boolean
                manage_providers:
                  type: boolean
                manage_integrations:
                  type: boolean
                manage_scans:
                  type: boolean
                permission_state:
                  type: string
                  readOnly: true
                unlimited_visibility:
                  type: boolean
                inserted_at:
                  type: string
                  format: date-time
                  readOnly: true
                updated_at:
                  type: string
                  format: date-time
                  readOnly: true
              required:
              - name
            relationships:
              type: object
              properties:
                provider_groups:
                  type: object
                  properties:
                    data:
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: string
                            format: uuid
                            title: Resource Identifier
                            description: The identifier of the related object.
                          type:
                            type: string
                            enum:
                            - provider-groups
                            title: Resource Type Name
                            description: The [type](https://jsonapi.org/format/#document-resource-object-identification)
                              member is used to describe resource objects that share
                              common attributes and relationships.
                        required:
                        - id
                        - type
                  required:
                  - data
                  description: A related resource object from type provider-groups
                  title: provider-groups
                users:
                  type: object
                  properties:
                    data:
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: string
                            format: uuid
                            title: Resource Identifier
                            description: The identifier of the related object.
                          type:
                            type: string
                            enum:
                            - users
                            title: Resource Type Name
                            description: The [type](https://jsonapi.org/format/#document-resource-object-identification)
                              member is used to describe resource objects that share
                              common attributes and relationships.
                        required:
                        - id
                        - type
                  required:
                  - data
                  description: A related resource object from type users
                  title: users
                invitations:
                  type: object
                  properties:
                    data:
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: string
                            format: uuid
                            title: Resource Identifier
                            description: The identifier of the related object.
                          type:
                            type: string
                            enum:
                            - invitations
                            title: Resource Type Name
                            description: The [type](https://jsonapi.org/format/#document-resource-object-identification)
                              member is used to describe resource objects that share
                              common attributes and relationships.
                        required:
                        - id
                        - type
                  required:
                  - data
                  description: A related resource object from type invitations
                  title: invitations
                  readOnly: true
      required:
      - data
    RoleCreateResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/RoleCreate'
      required:
      - data
    RoleProviderGroupRelationshipRequest:
      type: object
      properties:
        data:
          type: object
          required:
          - type
          additionalProperties: false
          properties:
            type:
              type: string
              description: The [type](https://jsonapi.org/format/#document-resource-object-identification)
                member is used to describe resource objects that share common attributes
                and relationships.
              enum:
              - role-provider_groups
            attributes:
              type: object
              properties:
                provider_groups:
                  type: array
                  items:
                    $ref: '#/components/schemas/ProviderGroupResourceIdentifierRequest'
                  description: List of resource identifier objects representing provider
                    groups.
              required:
              - provider_groups
      required:
      - data
    RoleResourceIdentifierRequest:
      type: object
      properties:
        data:
          type: object
          required:
          - type
          additionalProperties: false
          properties:
            type:
              type: string
              description: The [type](https://jsonapi.org/format/#document-resource-object-identification)
                member is used to describe resource objects that share common attributes
                and relationships.
              enum:
              - role-identifier
            attributes:
              type: object
              properties:
                resource_type:
                  type: string
                  minLength: 1
                id:
                  type: string
                  format: uuid
              required:
              - resource_type
              - id
      required:
      - data
    RoleResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Role'
      required:
      - data
    Scan:
      type: object
      required:
      - type
      - id
      additionalProperties: false
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/TypeE53Enum'
          description: The [type](https://jsonapi.org/format/#document-resource-object-identification)
            member is used to describe resource objects that share common attributes
            and relationships.
        id:
          type: string
          format: uuid
        attributes:
          type: object
          properties:
            name:
              type: string
              nullable: true
              maxLength: 100
              minLength: 3
            trigger:
              enum:
              - scheduled
              - manual
              type: string
              description: |-
                * `scheduled` - Scheduled
                * `manual` - Manual
              readOnly: true
            state:
              enum:
              - available
              - scheduled
              - executing
              - completed
              - failed
              - cancelled
              type: string
              description: |-
                * `available` - Available
                * `scheduled` - Scheduled
                * `executing` - Executing
                * `completed` - Completed
                * `failed` - Failed
                * `cancelled` - Cancelled
              readOnly: true
            unique_resource_count:
              type: integer
              maximum: 2147483647
              minimum: -2147483648
            progress:
              type: integer
              maximum: 2147483647
              minimum: -2147483648
            duration:
              type: integer
              maximum: 2147483647
              minimum: -2147483648
              nullable: true
            inserted_at:
              type: string
              format: date-time
              readOnly: true
            started_at:
              type: string
              format: date-time
              nullable: true
            completed_at:
              type: string
              format: date-time
              nullable: true
            scheduled_at:
              type: string
              format: date-time
              nullable: true
            next_scan_at:
              type: string
              format: date-time
              nullable: true
        relationships:
          type: object
          properties:
            provider:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                    type:
                      type: string
                      enum:
                      - providers
                      title: Resource Type Name
                      description: The [type](https://jsonapi.org/format/#document-resource-object-identification)
                        member is used to describe resource objects that share common
                        attributes and relationships.
                  required:
                  - id
                  - type
              required:
              - data
              description: The identifier of the related object.
              title: Resource Identifier
            task:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                    type:
                      type: string
                      enum:
                      - tasks
                      title: Resource Type Name
                      description: The [type](https://jsonapi.org/format/#document-resource-object-identification)
                        member is used to describe resource objects that share common
                        attributes and relationships.
                  required:
                  - id
                  - type
              required:
              - data
              description: The identifier of the related object.
              title: Resource Identifier
              nullable: true
          required:
          - provider
    ScanCreateRequest:
      type: object
      properties:
        data:
          type: object
          required:
          - type
          additionalProperties: false
          properties:
            type:
              type: string
              description: The [type](https://jsonapi.org/format/#document-resource-object-identification)
                member is used to describe resource objects that share common attributes
                and relationships.
              enum:
              - scans
            attributes:
              type: object
              properties:
                name:
                  type: string
                  nullable: true
                  maxLength: 100
                  minLength: 3
            relationships:
              type: object
              properties:
                provider:
                  type: object
                  properties:
                    data:
                      type: object
                      properties:
                        id:
                          type: string
                          format: uuid
                        type:
                          type: string
                          enum:
                          - providers
                          title: Resource Type Name
                          description: The [type](https://jsonapi.org/format/#document-resource-object-identification)
                            member is used to describe resource objects that share
                            common attributes and relationships.
                      required:
                      - id
                      - type
                  required:
                  - data
                  description: The identifier of the related object.
                  title: Resource Identifier
              required:
              - provider
      required:
      - data
    ScanResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Scan'
      required:
      - data
    ScanUpdate:
      type: object
      required:
      - type
      - id
      additionalProperties: false
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/TypeE53Enum'
          description: The [type](https://jsonapi.org/format/#document-resource-object-identification)
            member is used to describe resource objects that share common attributes
            and relationships.
        id:
          type: string
          format: uuid
        attributes:
          type: object
          properties:
            name:
              type: string
              nullable: true
              maxLength: 100
              minLength: 3
    ScanUpdateResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ScanUpdate'
      required:
      - data
    ScheduleDailyCreateRequest:
      type: object
      properties:
        data:
          type: object
          required:
          - type
          additionalProperties: false
          properties:
            type:
              type: string
              description: The [type](https://jsonapi.org/format/#document-resource-object-identification)
                member is used to describe resource objects that share common attributes
                and relationships.
              enum:
              - daily-schedules
            attributes:
              type: object
              properties:
                provider_id:
                  type: string
                  format: uuid
              required:
              - provider_id
      required:
      - data
    SerializerMetaclassResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ProviderGroup'
      required:
      - data
    Task:
      type: object
      required:
      - type
      additionalProperties: false
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/TaskTypeEnum'
          description: The [type](https://jsonapi.org/format/#document-resource-object-identification)
            member is used to describe resource objects that share common attributes
            and relationships.
        attributes:
          type: object
          properties:
            inserted_at:
              type: string
              format: date-time
              readOnly: true
            completed_at:
              type: string
              format: date-time
              readOnly: true
            name:
              type: string
              readOnly: true
            state:
              type: string
              enum:
              - available
              - scheduled
              - executing
              - completed
              - failed
              - cancelled
              readOnly: true
            result:
              readOnly: true
            task_args:
              readOnly: true
            metadata:
              readOnly: true
    TaskResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Task'
      required:
      - data
    TaskTypeEnum:
      type: string
      enum:
      - tasks
    Tenant:
      type: object
      required:
      - type
      - id
      additionalProperties: false
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/TenantTypeEnum'
          description: The [type](https://jsonapi.org/format/#document-resource-object-identification)
            member is used to describe resource objects that share common attributes
            and relationships.
        id:
          type: string
          format: uuid
        attributes:
          type: object
          properties:
            name:
              type: string
              maxLength: 100
          required:
          - name
        relationships:
          type: object
          properties:
            memberships:
              type: object
              properties:
                data:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                        title: Resource Identifier
                        description: The identifier of the related object.
                      type:
                        type: string
                        enum:
                        - memberships
                        title: Resource Type Name
                        description: The [type](https://jsonapi.org/format/#document-resource-object-identification)
                          member is used to describe resource objects that share common
                          attributes and relationships.
                    required:
                    - id
                    - type
              required:
              - data
              description: A related resource object from type memberships
              title: memberships
              readOnly: true
    TenantRequest:
      type: object
      properties:
        data:
          type: object
          required:
          - type
          additionalProperties: false
          properties:
            type:
              type: string
              description: The [type](https://jsonapi.org/format/#document-resource-object-identification)
                member is used to describe resource objects that share common attributes
                and relationships.
              enum:
              - tenants
            attributes:
              type: object
              properties:
                name:
                  type: string
                  minLength: 1
                  maxLength: 100
              required:
              - name
            relationships:
              type: object
              properties:
                memberships:
                  type: object
                  properties:
                    data:
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: string
                            format: uuid
                            title: Resource Identifier
                            description: The identifier of the related object.
                          type:
                            type: string
                            enum:
                            - memberships
                            title: Resource Type Name
                            description: The [type](https://jsonapi.org/format/#document-resource-object-identification)
                              member is used to describe resource objects that share
                              common attributes and relationships.
                        required:
                        - id
                        - type
                  required:
                  - data
                  description: A related resource object from type memberships
                  title: memberships
                  readOnly: true
      required:
      - data
    TenantResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Tenant'
      required:
      - data
    TenantTypeEnum:
      type: string
      enum:
      - tenants
    Token:
      type: object
      required:
      - type
      additionalProperties: false
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/TokenTypeEnum'
          description: The [type](https://jsonapi.org/format/#document-resource-object-identification)
            member is used to describe resource objects that share common attributes
            and relationships.
        attributes:
          type: object
          properties:
            email:
              type: string
              writeOnly: true
            password:
              type: string
              writeOnly: true
            tenant_id:
              type: string
              format: uuid
              writeOnly: true
              description: If not provided, the tenant ID of the first membership
                that was added to the user will be used.
            refresh:
              type: string
              readOnly: true
            access:
              type: string
              readOnly: true
          required:
          - email
          - password
    TokenRefresh:
      type: object
      required:
      - type
      additionalProperties: false
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/TokenRefreshTypeEnum'
          description: The [type](https://jsonapi.org/format/#document-resource-object-identification)
            member is used to describe resource objects that share common attributes
            and relationships.
        attributes:
          type: object
          properties:
            refresh:
              type: string
            access:
              type: string
              readOnly: true
          required:
          - refresh
    TokenRefreshRequest:
      type: object
      properties:
        data:
          type: object
          required:
          - type
          additionalProperties: false
          properties:
            type:
              type: string
              description: The [type](https://jsonapi.org/format/#document-resource-object-identification)
                member is used to describe resource objects that share common attributes
                and relationships.
              enum:
              - tokens-refresh
            attributes:
              type: object
              properties:
                refresh:
                  type: string
                  minLength: 1
                access:
                  type: string
                  readOnly: true
                  minLength: 1
              required:
              - refresh
      required:
      - data
    TokenRefreshResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/TokenRefresh'
      required:
      - data
    TokenRefreshTypeEnum:
      type: string
      enum:
      - tokens-refresh
    TokenRequest:
      type: object
      properties:
        data:
          type: object
          required:
          - type
          additionalProperties: false
          properties:
            type:
              type: string
              description: The [type](https://jsonapi.org/format/#document-resource-object-identification)
                member is used to describe resource objects that share common attributes
                and relationships.
              enum:
              - tokens
            attributes:
              type: object
              properties:
                email:
                  type: string
                  writeOnly: true
                  minLength: 1
                password:
                  type: string
                  writeOnly: true
                  minLength: 1
                tenant_id:
                  type: string
                  format: uuid
                  writeOnly: true
                  description: If not provided, the tenant ID of the first membership
                    that was added to the user will be used.
                refresh:
                  type: string
                  readOnly: true
                  minLength: 1
                access:
                  type: string
                  readOnly: true
                  minLength: 1
              required:
              - email
              - password
      required:
      - data
    TokenResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Token'
      required:
      - data
    TokenTypeEnum:
      type: string
      enum:
      - tokens
    Type049Enum:
      type: string
      enum:
      - provider-secrets
    Type227Enum:
      type: string
      enum:
      - providers
    Type34dEnum:
      type: string
      enum:
      - provider-groups
    Type6bbEnum:
      type: string
      enum:
      - roles
    Type7f7Enum:
      type: string
      enum:
      - compliance-overviews
    Type8cdEnum:
      type: string
      enum:
      - users
    TypeD4dEnum:
      type: string
      enum:
      - invitations
    TypeE53Enum:
      type: string
      enum:
      - scans
    User:
      type: object
      required:
      - type
      - id
      additionalProperties: false
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/Type8cdEnum'
          description: The [type](https://jsonapi.org/format/#document-resource-object-identification)
            member is used to describe resource objects that share common attributes
            and relationships.
        id:
          type: string
          format: uuid
        attributes:
          type: object
          properties:
            name:
              type: string
              maxLength: 150
              minLength: 3
            email:
              type: string
              format: email
              description: Case insensitive
              maxLength: 254
            company_name:
              type: string
              maxLength: 150
            date_joined:
              type: string
              format: date-time
              readOnly: true
          required:
          - name
          - email
        relationships:
          type: object
          properties:
            memberships:
              type: object
              properties:
                data:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                        title: Resource Identifier
                        description: The identifier of the related object.
                      type:
                        type: string
                        enum:
                        - memberships
                        title: Resource Type Name
                        description: The [type](https://jsonapi.org/format/#document-resource-object-identification)
                          member is used to describe resource objects that share common
                          attributes and relationships.
                    required:
                    - id
                    - type
              required:
              - data
              description: A related resource object from type memberships
              title: memberships
              readOnly: true
            roles:
              type: object
              properties:
                data:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                        title: Resource Identifier
                        description: The identifier of the related object.
                      type:
                        type: string
                        enum:
                        - roles
                        title: Resource Type Name
                        description: The [type](https://jsonapi.org/format/#document-resource-object-identification)
                          member is used to describe resource objects that share common
                          attributes and relationships.
                    required:
                    - id
                    - type
              required:
              - data
              description: A related resource object from type roles
              title: roles
              readOnly: true
    UserCreate:
      type: object
      required:
      - type
      additionalProperties: false
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/Type8cdEnum'
          description: The [type](https://jsonapi.org/format/#document-resource-object-identification)
            member is used to describe resource objects that share common attributes
            and relationships.
        attributes:
          type: object
          properties:
            name:
              type: string
              maxLength: 150
              minLength: 3
            password:
              type: string
              writeOnly: true
            email:
              type: string
              format: email
              description: Case insensitive
              maxLength: 254
            company_name:
              type: string
          required:
          - name
          - password
          - email
    UserCreateRequest:
      type: object
      properties:
        data:
          type: object
          required:
          - type
          additionalProperties: false
          properties:
            type:
              type: string
              description: The [type](https://jsonapi.org/format/#document-resource-object-identification)
                member is used to describe resource objects that share common attributes
                and relationships.
              enum:
              - users
            attributes:
              type: object
              properties:
                name:
                  type: string
                  minLength: 3
                  maxLength: 150
                password:
                  type: string
                  writeOnly: true
                  minLength: 1
                email:
                  type: string
                  format: email
                  minLength: 1
                  description: Case insensitive
                  maxLength: 254
                company_name:
                  type: string
                  minLength: 1
              required:
              - name
              - password
              - email
      required:
      - data
    UserCreateResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/UserCreate'
      required:
      - data
    UserResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/User'
      required:
      - data
    UserRoleRelationshipRequest:
      type: object
      properties:
        data:
          type: object
          required:
          - type
          additionalProperties: false
          properties:
            type:
              type: string
              description: The [type](https://jsonapi.org/format/#document-resource-object-identification)
                member is used to describe resource objects that share common attributes
                and relationships.
              enum:
              - user-roles
            attributes:
              type: object
              properties:
                roles:
                  type: array
                  items:
                    $ref: '#/components/schemas/RoleResourceIdentifierRequest'
                  description: List of resource identifier objects representing roles.
              required:
              - roles
      required:
      - data
    UserUpdate:
      type: object
      required:
      - type
      - id
      additionalProperties: false
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/Type8cdEnum'
          description: The [type](https://jsonapi.org/format/#document-resource-object-identification)
            member is used to describe resource objects that share common attributes
            and relationships.
        id:
          type: string
          format: uuid
        attributes:
          type: object
          properties:
            name:
              type: string
              maxLength: 150
              minLength: 3
            password:
              type: string
              writeOnly: true
            email:
              type: string
              format: email
              description: Case insensitive
              maxLength: 254
            company_name:
              type: string
              maxLength: 150
          required:
          - name
          - email
        relationships:
          type: object
          properties:
            roles:
              type: object
              properties:
                data:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                        title: Resource Identifier
                        description: The identifier of the related object.
                      type:
                        type: string
                        enum:
                        - roles
                        title: Resource Type Name
                        description: The [type](https://jsonapi.org/format/#document-resource-object-identification)
                          member is used to describe resource objects that share common
                          attributes and relationships.
                    required:
                    - id
                    - type
              required:
              - data
              description: A related resource object from type roles
              title: roles
    UserUpdateResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/UserUpdate'
      required:
      - data
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
tags:
- name: User
  description: Endpoints for managing user accounts.
- name: Token
  description: Endpoints for token management, including obtaining a new token and
    refreshing an existing token for authentication purposes.
- name: Tenant
  description: Endpoints for managing tenants, along with their memberships.
- name: Invitation
  description: Endpoints for tenant invitations management, allowing retrieval and
    filtering of invitations, creating new invitations, accepting and revoking them.
- name: Provider
  description: Endpoints for managing providers (AWS, GCP, Azure, etc...).
- name: Provider Group
  description: Endpoints for managing provider groups.
- name: Scan
  description: Endpoints for triggering manual scans and viewing scan results.
- name: Resource
  description: Endpoints for managing resources discovered by scans, allowing retrieval
    and filtering of resource information.
- name: Finding
  description: Endpoints for managing findings, allowing retrieval and filtering of
    findings that result from scans.
- name: Overview
  description: Endpoints for retrieving aggregated summaries of resources from the
    system.
- name: Compliance Overview
  description: Endpoints for checking the compliance overview, allowing filtering
    by scan, provider or compliance framework ID.
- name: Task
  description: Endpoints for task management, allowing retrieval of task status and
    revoking tasks that have not started.
